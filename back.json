[
    {
        "id": "58f3987.97a1268",
        "type": "tab",
        "label": "Data initialization",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ba2ccab8.e0ab4",
        "type": "tab",
        "label": "Motions/Doors Events (MQTT)",
        "disabled": false,
        "info": ""
    },
    {
        "id": "569abad5.44f7ec",
        "type": "tab",
        "label": "Security Internals",
        "disabled": false,
        "info": ""
    },
    {
        "id": "898ca7f0.ecb26",
        "type": "tab",
        "label": "Arm Controller",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8a3bdb61.7c6bc8",
        "type": "tab",
        "label": "Keypad Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c0d5c7f8.9444d8",
        "type": "tab",
        "label": "Video Recording",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5e9e23fa.6f5764",
        "type": "tab",
        "label": "Messaging",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ff37b1a0.cc9d98",
        "type": "tab",
        "label": "Siren Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "475d7139.ccd71",
        "type": "tab",
        "label": "Sensors Dashboard",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4812a125.a423e8",
        "type": "tab",
        "label": "User Management",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9b447c3b.71a68",
        "type": "tab",
        "label": "API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "81a1ab31.7b9308",
        "type": "tab",
        "label": "Image Slide Show",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6bb43483.7bfd3c",
        "type": "tab",
        "label": "Videos",
        "disabled": false,
        "info": ""
    },
    {
        "id": "337223a7.c42eec",
        "type": "tab",
        "label": "Testing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "42b5c4f6.c33244",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "739b2df7.8ee4ac",
        "type": "subflow",
        "name": "Subflow 1 (2)",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "322b73e4.01aeec",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b024fb92.d6bff8",
        "type": "mqtt-broker",
        "z": "",
        "broker": "broker",
        "port": "1883",
        "clientid": "node-red",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "/nodered/online",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "1",
        "willTopic": "/nodered/online",
        "willQos": "0",
        "willRetain": "true",
        "willPayload": "0"
    },
    {
        "id": "4266d39e.bfa8fc",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": false,
        "responsetimeout": ""
    },
    {
        "id": "497847e4.6c819",
        "type": "pushover-keys",
        "z": "",
        "name": "My Acc"
    },
    {
        "id": "ba565767.79ec58",
        "type": "pushover-keys",
        "z": "",
        "name": "Wai@accelerando.com.au"
    },
    {
        "id": "5ea9f580.1a9cec",
        "type": "pushover-keys",
        "z": "",
        "name": "aaa"
    },
    {
        "id": "f77f7d78.3630a",
        "type": "ui_tab",
        "z": "",
        "name": "SensorStatus",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "dacb53b3.e278c",
        "type": "ui_group",
        "z": "",
        "name": "Doors",
        "tab": "f77f7d78.3630a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a0198a62.ef9e58",
        "type": "ui_group",
        "z": "",
        "name": "Motions",
        "tab": "f77f7d78.3630a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2b0faa02.0bb38e",
        "type": "ui_tab",
        "z": "",
        "name": "Alarm",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "39dafa4c.03bf56",
        "type": "ui_group",
        "z": "",
        "name": "AlarmAuthenticate",
        "tab": "2b0faa02.0bb38e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d60901c.dde74",
        "type": "ui_group",
        "z": "",
        "name": "MasterControl",
        "tab": "2b0faa02.0bb38e",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "edacf877.d118c",
        "type": "ui_group",
        "z": "",
        "name": "UsrManAuthenticate",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b2c0234c.e0144",
        "type": "ui_group",
        "z": "",
        "name": "UserRegistration",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1b51444.f8702bc",
        "type": "ui_group",
        "z": "",
        "name": "UserRemove",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a4163175.2d40e",
        "type": "ui_group",
        "z": "",
        "name": "UsrManAuthenticate",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "354a4505.b8f8d2",
        "type": "ui_group",
        "z": "",
        "name": "UserRegistration",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "58c70d80.971cd4",
        "type": "ui_group",
        "z": "",
        "name": "UserRemove",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "afa5e776.c862c8",
        "type": "ui_group",
        "z": "",
        "name": "UserList",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1572db87.4cdbfc",
        "type": "ui_group",
        "z": "",
        "name": "UsrManAuthenticate",
        "tab": "23cc8163.bb0fb6",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b1083210.56f3b8",
        "type": "ui_group",
        "z": "",
        "name": "UserRegistration",
        "tab": "23cc8163.bb0fb6",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dca1a8b2.7cb16",
        "type": "ui_group",
        "z": "",
        "name": "UserRemove",
        "tab": "23cc8163.bb0fb6",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "23cc8163.bb0fb6",
        "type": "ui_tab",
        "z": "",
        "name": "UserManagement",
        "icon": "dashboard",
        "order": 3
    },
    {
        "id": "e61e4492.2b2d18",
        "type": "ui_group",
        "z": "",
        "name": "UserList",
        "tab": "23cc8163.bb0fb6",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f76b7037.8fd2f",
        "type": "ui_group",
        "z": "",
        "name": "Cameras",
        "tab": "f77f7d78.3630a",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "bc8972e2.ad8648",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "21a6751e.bed6e2",
        "type": "ui_tab",
        "z": "",
        "name": "Images",
        "icon": "dashboard",
        "order": 4
    },
    {
        "id": "f847235d.6bb54",
        "type": "ui_group",
        "z": "",
        "name": "Images",
        "tab": "21a6751e.bed6e2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "64958486.7e8cfc",
        "type": "ui_tab",
        "z": "",
        "name": "Videos",
        "icon": "dashboard",
        "order": 5
    },
    {
        "id": "3cd1a247.40296e",
        "type": "ui_group",
        "z": "",
        "name": "Video1",
        "tab": "64958486.7e8cfc",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": true
    },
    {
        "id": "1bea607e.4c2d7",
        "type": "ui_group",
        "z": "",
        "name": "Video2",
        "tab": "64958486.7e8cfc",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": true
    },
    {
        "id": "34c7041.513d6fc",
        "type": "function",
        "z": "ba2ccab8.e0ab4",
        "name": "Prepare to advertise the event to MQTT",
        "func": "var sensor_id = msg.payload\nvar radio_details = global.get(\"radios\")\nlet event_details = global.get('last_seen_events')\n\ntry{\n   var result = radio_details[sensor_id]\n   \n   if(result.type == \"motion\"){\n       format = \"devices/\"+result.type+\"_sensor/\"+result.location+\"/event/movement\"\n   }\n   else{\n       format = \"devices/\"+result.type+\"_sensor/\"+result.location+\"/event/open\"\n  \n   }\n    \n   let dt = new Date();\n   //update global variable(to triggered time of each sensor(by id))\n   event_details[sensor_id] = dt;\n   msg.payload = format\n   return msg\n}\ncatch(error){\n    msg.payload = \"No\"\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 400,
        "wires": [
            [
                "37cc40f4.9b0ef8"
            ]
        ]
    },
    {
        "id": "a77684fb.e800f",
        "type": "function",
        "z": "ba2ccab8.e0ab4",
        "name": "Set Payload",
        "func": "msg.topic = msg.payload\nmsg.payload = \"1\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1170,
        "y": 400,
        "wires": [
            [
                "428e38a3.685f18",
                "134ed631.7e452a"
            ]
        ]
    },
    {
        "id": "428e38a3.685f18",
        "type": "mqtt out",
        "z": "ba2ccab8.e0ab4",
        "name": "Send it to the topic associated to a sensor",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1490,
        "y": 400,
        "wires": []
    },
    {
        "id": "37cc40f4.9b0ef8",
        "type": "switch",
        "z": "ba2ccab8.e0ab4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "No",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 400,
        "wires": [
            [
                "a77684fb.e800f",
                "73df8d55.bf6754"
            ]
        ]
    },
    {
        "id": "420e7b2f.61b3cc",
        "type": "function",
        "z": "ba2ccab8.e0ab4",
        "name": "Get ID From Raw Message(Sensor)",
        "func": "let raw = msg.payload\n\nlet sensor_id = null\n//only getting the line contains ID (\"Binary\")\nif(raw.includes(\"Binary\")){\n    \n    var res = raw.split(\" \")\n    res.forEach(function(element){\n        if(element.length == 24){\n            //sensor_id = element.substring(0, 20)\n            sensor_id = element\n        }\n    })\n    \n    msg.payload = sensor_id\n    return msg\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "34c7041.513d6fc",
                "dddfd6e8.b8062"
            ]
        ]
    },
    {
        "id": "93105c44.a3d048",
        "type": "inject",
        "z": "ba2ccab8.e0ab4",
        "name": "TEST: Inject a known event (motion) Z1",
        "topic": "",
        "payload": "010110011111001111101001",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "34c7041.513d6fc"
            ]
        ]
    },
    {
        "id": "7abf4f9e.9663a8",
        "type": "inject",
        "z": "ba2ccab8.e0ab4",
        "name": "TEST: Inject an invalid event",
        "topic": "",
        "payload": "11001000000100111111",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 240,
        "y": 500,
        "wires": [
            [
                "34c7041.513d6fc"
            ]
        ]
    },
    {
        "id": "914e5b1c.cfe018",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "Manual Inject",
        "info": "",
        "x": 90,
        "y": 280,
        "wires": []
    },
    {
        "id": "e7f6035a.42ee38",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "Manual Inject",
        "info": "",
        "x": 90,
        "y": 540,
        "wires": []
    },
    {
        "id": "a9f53ee9.9d44a",
        "type": "inject",
        "z": "ba2ccab8.e0ab4",
        "name": "TEST: Inject a known event (door) Z2",
        "topic": "",
        "payload": "101011111010011101000110",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 270,
        "y": 220,
        "wires": [
            [
                "34c7041.513d6fc"
            ]
        ]
    },
    {
        "id": "755e7dfa.12eb4c",
        "type": "ui_button",
        "z": "475d7139.ccd71",
        "name": "",
        "group": "a0198a62.ef9e58",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Meeting_Room_1",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1430,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2f232eff.8ca622",
        "type": "inject",
        "z": "475d7139.ccd71",
        "name": "",
        "topic": "",
        "payload": "last_seen_events",
        "payloadType": "global",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "1545c0c1.14a457",
                "2f8302d8.6696e6"
            ]
        ]
    },
    {
        "id": "c04dbba0.371f18",
        "type": "function",
        "z": "475d7139.ccd71",
        "name": "Last Seen Calculation",
        "func": "radios = global.get('radios')\n//node.warn(radios);\nlet sensor = radios[msg.topic];\n        \n//Calulate the difference between two time object \nlet now = new Date();\nlet then = msg.payload;\nlet seconds = Math.floor((now - (then))/1000);\n\nif(seconds < 5){\n    msg.background = \"green\"; \n}else if(seconds >= 5 && seconds <= 10){\n    msg.background = \"blue\";\n}else{\n    msg.background = \"red\";\n}\nmsg.age = seconds;\nmsg.topic = sensor.type;\nmsg.payload = sensor.location;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 300,
        "wires": [
            [
                "64628e8b.32703"
            ]
        ]
    },
    {
        "id": "1545c0c1.14a457",
        "type": "split",
        "z": "475d7139.ccd71",
        "name": "",
        "splt": ",",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "c04dbba0.371f18"
            ]
        ]
    },
    {
        "id": "64628e8b.32703",
        "type": "switch",
        "z": "475d7139.ccd71",
        "name": "1 = motion, 2 = door",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "motion",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "door",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 820,
        "y": 300,
        "wires": [
            [
                "31219af0.f1390e"
            ],
            [
                "a33ed9b.4473da8"
            ]
        ]
    },
    {
        "id": "31219af0.f1390e",
        "type": "switch",
        "z": "475d7139.ccd71",
        "name": "motions sensors",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "meeting_rom_1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "entertainment_area",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "kitchen",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "office",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hallway",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1110,
        "y": 180,
        "wires": [
            [
                "755e7dfa.12eb4c"
            ],
            [
                "4fd245e7.debaec"
            ],
            [
                "f8fb8d44.1f01c8"
            ],
            [
                "be764040.641c4"
            ],
            [
                "4f4fab10.a67aa4"
            ]
        ]
    },
    {
        "id": "a33ed9b.4473da8",
        "type": "switch",
        "z": "475d7139.ccd71",
        "name": "door sensors",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "front_door",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reception_door",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "9e3ddcac.c3c2a8"
            ],
            [
                "80087406.cc21f8"
            ]
        ]
    },
    {
        "id": "4fd245e7.debaec",
        "type": "ui_button",
        "z": "475d7139.ccd71",
        "name": "",
        "group": "a0198a62.ef9e58",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Entertainment_Area",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1440,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f8fb8d44.1f01c8",
        "type": "ui_button",
        "z": "475d7139.ccd71",
        "name": "",
        "group": "a0198a62.ef9e58",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Kitchen",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1400,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "be764040.641c4",
        "type": "ui_button",
        "z": "475d7139.ccd71",
        "name": "",
        "group": "a0198a62.ef9e58",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Office",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1390,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "9e3ddcac.c3c2a8",
        "type": "ui_button",
        "z": "475d7139.ccd71",
        "name": "",
        "group": "dacb53b3.e278c",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Front_Door",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1410,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "80087406.cc21f8",
        "type": "ui_button",
        "z": "475d7139.ccd71",
        "name": "",
        "group": "dacb53b3.e278c",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Reception",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1410,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d1d3514.90cd2b",
        "type": "serial in",
        "z": "ba2ccab8.e0ab4",
        "name": "",
        "serial": "4266d39e.bfa8fc",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "420e7b2f.61b3cc"
            ]
        ]
    },
    {
        "id": "4f4fab10.a67aa4",
        "type": "ui_button",
        "z": "475d7139.ccd71",
        "name": "",
        "group": "a0198a62.ef9e58",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Hallway",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1400,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d86174f7.a3c168",
        "type": "inject",
        "z": "ba2ccab8.e0ab4",
        "name": "TEST: Inject a known event (motion) Z2",
        "topic": "",
        "payload": "111000110001101100011001",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 270,
        "y": 580,
        "wires": [
            [
                "34c7041.513d6fc"
            ]
        ]
    },
    {
        "id": "111e1b1d.6778d5",
        "type": "inject",
        "z": "58f3987.97a1268",
        "name": "Read Sensor Details At Startup Through A File",
        "topic": "",
        "payload": "/opt/accelerando/etc/radio_inputs.json",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "x": 320,
        "y": 280,
        "wires": [
            [
                "9da87e29.b26c08"
            ]
        ]
    },
    {
        "id": "9da87e29.b26c08",
        "type": "change",
        "z": "58f3987.97a1268",
        "name": "filename radio_inputs.json",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "/data/sensors.json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 280,
        "wires": [
            [
                "bbaf1190.945fb8"
            ]
        ]
    },
    {
        "id": "bbaf1190.945fb8",
        "type": "file in",
        "z": "58f3987.97a1268",
        "name": "Read file",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 940,
        "y": 280,
        "wires": [
            [
                "839d693c.a4dae8"
            ]
        ]
    },
    {
        "id": "839d693c.a4dae8",
        "type": "json",
        "z": "58f3987.97a1268",
        "name": "Parse JSON",
        "pretty": false,
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "f25c0e1f.564f"
            ]
        ]
    },
    {
        "id": "f25c0e1f.564f",
        "type": "change",
        "z": "58f3987.97a1268",
        "name": "Set Sensor Details In To Global (Global: radios)",
        "rules": [
            {
                "t": "set",
                "p": "radios",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 380,
        "wires": [
            [
                "cd424c65.bf66a"
            ]
        ]
    },
    {
        "id": "cd424c65.bf66a",
        "type": "function",
        "z": "58f3987.97a1268",
        "name": "Initiate Location to Store Sensor Events Time",
        "func": "let radiosObject = global.get(\"radios\")\nlet collections = {}\nObject.keys(radiosObject).forEach(function(i){\n  \n    collections[i] = 0;\n \n})\n\nmsg.payload = collections\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 380,
        "wires": [
            [
                "ec9c2fad.b7eae"
            ]
        ]
    },
    {
        "id": "ec9c2fad.b7eae",
        "type": "change",
        "z": "58f3987.97a1268",
        "name": "(Global: last_seen_events)",
        "rules": [
            {
                "t": "set",
                "p": "last_seen_events",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "d4b691cb.5247d",
        "type": "debug",
        "z": "58f3987.97a1268",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 510,
        "y": 480,
        "wires": []
    },
    {
        "id": "afc6ed2f.11558",
        "type": "inject",
        "z": "58f3987.97a1268",
        "name": "Check Sensors Details",
        "topic": "",
        "payload": "radios",
        "payloadType": "global",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 480,
        "wires": [
            [
                "d4b691cb.5247d"
            ]
        ]
    },
    {
        "id": "f6f01942.2a043",
        "type": "inject",
        "z": "58f3987.97a1268",
        "name": "Check Motion Event Details",
        "topic": "",
        "payload": "last_seen_events",
        "payloadType": "global",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 820,
        "y": 460,
        "wires": [
            [
                "c2747bcc.ba1ed"
            ]
        ]
    },
    {
        "id": "c2747bcc.ba1ed",
        "type": "debug",
        "z": "58f3987.97a1268",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1130,
        "y": 460,
        "wires": []
    },
    {
        "id": "2aa7178f.93d58",
        "type": "inject",
        "z": "58f3987.97a1268",
        "name": "At Start Up",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 210,
        "y": 720,
        "wires": [
            [
                "712c2d9d.0dae7c",
                "1e8e99b1.63dc2e",
                "a7d277c7.49a608",
                "3e4634a5.5ae6cc"
            ]
        ]
    },
    {
        "id": "712c2d9d.0dae7c",
        "type": "change",
        "z": "58f3987.97a1268",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_armed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "1e8e99b1.63dc2e",
        "type": "change",
        "z": "58f3987.97a1268",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "a7d277c7.49a608",
        "type": "change",
        "z": "58f3987.97a1268",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "6124c1ed.fea3d",
        "type": "function",
        "z": "58f3987.97a1268",
        "name": "Generate Rediable Output(object)",
        "func": "let armed = global.get(\"security_armed\")\nlet warning = global.get(\"security_warning\")\nlet alert = global.get(\"security_alert\")\n\nlet security_status = {}\nsecurity_status['armed'] = armed\nsecurity_status['warning'] = warning\nsecurity_status['alert'] = alert\nmsg.payload = security_status\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 680,
        "wires": [
            [
                "37f0c3ac.23140c"
            ]
        ]
    },
    {
        "id": "8d1f8d98.585b68",
        "type": "inject",
        "z": "58f3987.97a1268",
        "name": "Check Security Status",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 850,
        "y": 680,
        "wires": [
            [
                "6124c1ed.fea3d"
            ]
        ]
    },
    {
        "id": "37f0c3ac.23140c",
        "type": "debug",
        "z": "58f3987.97a1268",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1370,
        "y": 680,
        "wires": []
    },
    {
        "id": "3e4634a5.5ae6cc",
        "type": "function",
        "z": "58f3987.97a1268",
        "name": "set global.active_events",
        "func": "let active_events = []\nglobal.set(\"active_events\", active_events)\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "9d1bc8bb.af3bb",
        "type": "inject",
        "z": "58f3987.97a1268",
        "name": "",
        "topic": "",
        "payload": "active_events",
        "payloadType": "global",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 830,
        "y": 820,
        "wires": [
            [
                "b4be1999.a988e"
            ]
        ]
    },
    {
        "id": "b4be1999.a988e",
        "type": "debug",
        "z": "58f3987.97a1268",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 820,
        "wires": []
    },
    {
        "id": "36923b25.bd95b4",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "confidential ",
        "info": "group key - XbUegiTKp9\napi key - xmvBOegbymu2hbfusEgEP7vgBQAoud\n\n//camera info\nhttp://shinobi:8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/monitor/XbUegiTKp9",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "37524db5.5d8a42",
        "type": "mqtt in",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "topic": "security/warning",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "6fff53cc.47b93c"
            ]
        ]
    },
    {
        "id": "6fff53cc.47b93c",
        "type": "change",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger_info",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 300,
        "wires": [
            [
                "7d96dcb5.b4aefc"
            ]
        ]
    },
    {
        "id": "7d96dcb5.b4aefc",
        "type": "http request",
        "z": "c0d5c7f8.9444d8",
        "name": "Collect status from Shinobi",
        "method": "GET",
        "ret": "obj",
        "url": "http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L",
        "tls": "",
        "x": 640,
        "y": 300,
        "wires": [
            [
                "29506170.8bdfee",
                "348cd756.ee7898"
            ]
        ]
    },
    {
        "id": "29506170.8bdfee",
        "type": "switch",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 300,
        "wires": [
            [
                "80fec81.2ead038"
            ],
            [
                "4d4bcdfc.39c73c"
            ]
        ]
    },
    {
        "id": "80fec81.2ead038",
        "type": "change",
        "z": "c0d5c7f8.9444d8",
        "name": "pls registered a cam",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please registered a camera",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 240,
        "wires": [
            [
                "15da592e.52923f"
            ]
        ]
    },
    {
        "id": "15da592e.52923f",
        "type": "debug",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1410,
        "y": 240,
        "wires": []
    },
    {
        "id": "4d4bcdfc.39c73c",
        "type": "function",
        "z": "c0d5c7f8.9444d8",
        "name": "Generate URL to Call API",
        "func": "let all_camera_details = msg.payload\n//let trigger_event_info = JSON.parse(msg.trigger_info)\n//let trigger_zone = trigger_event_info['zone']\n\nvar urls = []\n\ntry{\n    \n    all_camera_details.forEach(function(i){\n        if(i.status !== \"Died\" || i.status !== \"Stopped\"){\n            \n                let monitor_id = i.mid\n                let monitor_name = i.name\n                //let monitor_zone = (monitor_name.split(\"_\")[1]).replace(\"z\", \"\")\n                let montior_key = i.ke\n    \n    \n               // if(trigger_zone == monitor_zone){\n                    \n                    var tmp_url = 'http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/'+montior_key+'/'+monitor_id+'/record/5/min'\n                    urls.push(tmp_url)\n                    \n              //  }\n        }\n    })\n    \n    \n}catch(error){\n    \n    if(all_camera_details.status !== \"Died\" || all_camera_details.status !== \"Stopped\"){\n        \n        let monitor_id = all_camera_details.mid\n        let monitor_name = all_camera_details.name\n        let monitor_zone = (monitor_name.split(\"_\")[1]).replace(\"z\", \"\")\n        let montior_key = all_camera_details.ke\n        \n       //  if(trigger_zone == monitor_zone){\n            //http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L\n            //var tmp_url = 'http://shinobi:8080/do2Iqpn0G4lS9E6nKrpo1NjaOeg62v/motion/'+raw.ke+'/'+raw.mid+'?data={\"plug\":'+'\"'+raw.name+'\"'+',\"name\":'+'\"'+raw.name+'\"'+',\"reason\":\"motion\",\"confidence\":197.4755859375}'\n            var tmp_url = 'http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/'+montior_key+'/'+monitor_id+'/record/1/min'\n            urls.push(tmp_url)    \n       // }\n    }\n}\n\nif (urls.length !== 0){\n    var result = []\n\n    urls.forEach(function(i) {\n        var tmp = {payload: i}\n        result.push(tmp)\n    })\n        return [result]\n}\nelse{\n    msg.payload = \"no\"\n    return msg\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1110,
        "y": 340,
        "wires": [
            [
                "c25ba9a7.6b0ed8"
            ]
        ]
    },
    {
        "id": "c25ba9a7.6b0ed8",
        "type": "switch",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 440,
        "wires": [
            [
                "f8c780a7.627ff8"
            ],
            []
        ]
    },
    {
        "id": "f8c780a7.627ff8",
        "type": "change",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 440,
        "wires": [
            [
                "6910cef4.0bfc08"
            ]
        ]
    },
    {
        "id": "6910cef4.0bfc08",
        "type": "http request",
        "z": "c0d5c7f8.9444d8",
        "name": "Trigger Video Recording",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1510,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "3fc96ff9.8ec398",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "{\"type\":\"door\",\"location\":\"roller\",\"zone\":\"1\"}",
        "info": "",
        "x": 200,
        "y": 220,
        "wires": []
    },
    {
        "id": "debdd51c.f8de38",
        "type": "debug",
        "z": "337223a7.c42eec",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "a33f57e8.8faed",
        "type": "mqtt in",
        "z": "337223a7.c42eec",
        "name": "",
        "topic": "devices/door_controller/#",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "7091620f.849814"
            ]
        ]
    },
    {
        "id": "7091620f.849814",
        "type": "function",
        "z": "337223a7.c42eec",
        "name": "Read the adversising message",
        "func": "let query = msg.topic\n\nif(query.indexOf('heartbeat') > -1) {\n\n    let query_detail = query.split(\"/\")\n    let active_door = query_detail[2]\n    msg.payload = active_door\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "ba1095ed.d471d"
            ]
        ]
    },
    {
        "id": "ba1095ed.d471d",
        "type": "switch",
        "z": "337223a7.c42eec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "door",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 260,
        "wires": [
            [
                "50988a96.a1fb34"
            ]
        ]
    },
    {
        "id": "50988a96.a1fb34",
        "type": "function",
        "z": "337223a7.c42eec",
        "name": "Registering the keypad ",
        "func": "\nlet incomming_key_pad_id = msg.payload\n\n\nlet active_keypad = global.get(\"active_key_pad\")\n\n\nif(active_keypad.length > 0){\n    \n    //var n = fruits.includes(\"Mango\");\n    \n    if(!active_keypad.includes(incomming_key_pad_id))\n    {\n        active_keypad.push(incomming_key_pad_id)\n        global.set(\"active_key_pad\", active_keypad)    \n        msg.payload = active_keypad\n    }else{\n        msg.payload = active_keypad\n    }\n}else{\n    active_keypad.push(incomming_key_pad_id)\n    global.set(\"active_key_pad\",active_keypad )\n    \n    msg.payload = active_keypad\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "debdd51c.f8de38"
            ]
        ]
    },
    {
        "id": "83e7373c.ef7a4",
        "type": "inject",
        "z": "337223a7.c42eec",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 170,
        "y": 120,
        "wires": [
            [
                "dd6dd44b.704ac"
            ]
        ]
    },
    {
        "id": "dd6dd44b.704ac",
        "type": "function",
        "z": "337223a7.c42eec",
        "name": "global.active_key_pad",
        "func": "global.set(\"active_key_pad\", [])\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f517c06f.650d8",
        "type": "comment",
        "z": "337223a7.c42eec",
        "name": "keypad name must include \"door\"",
        "info": "",
        "x": 220,
        "y": 60,
        "wires": []
    },
    {
        "id": "f93bd044.826a88",
        "type": "function",
        "z": "337223a7.c42eec",
        "name": "Assiociated Keypads",
        "func": "//devices/door_controller/door1/set/keypad-led -m \"1\"\nmsg.payload = global.get(\"active_key_pad\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 380,
        "wires": [
            [
                "ee3515a0.e2223"
            ]
        ]
    },
    {
        "id": "cd809f1c.ac7a3",
        "type": "inject",
        "z": "337223a7.c42eec",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 380,
        "wires": [
            [
                "f93bd044.826a88"
            ]
        ]
    },
    {
        "id": "ee3515a0.e2223",
        "type": "debug",
        "z": "337223a7.c42eec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 380,
        "wires": []
    },
    {
        "id": "6fb2af66.48f708",
        "type": "mqtt in",
        "z": "ff37b1a0.cc9d98",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 200,
        "y": 320,
        "wires": [
            [
                "5bdaa587.7e3a6c"
            ]
        ]
    },
    {
        "id": "90e96a6c.8011c8",
        "type": "serial out",
        "z": "ff37b1a0.cc9d98",
        "name": "",
        "serial": "4266d39e.bfa8fc",
        "x": 1050,
        "y": 700,
        "wires": []
    },
    {
        "id": "ce946781.baa618",
        "type": "inject",
        "z": "ff37b1a0.cc9d98",
        "name": "Siren On",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 780,
        "y": 680,
        "wires": [
            [
                "90e96a6c.8011c8"
            ]
        ]
    },
    {
        "id": "e9c39299.294c98",
        "type": "inject",
        "z": "ff37b1a0.cc9d98",
        "name": "Siren Off",
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 780,
        "y": 740,
        "wires": [
            [
                "90e96a6c.8011c8"
            ]
        ]
    },
    {
        "id": "5bdaa587.7e3a6c",
        "type": "switch",
        "z": "ff37b1a0.cc9d98",
        "name": "on/off",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "9cda51ea.28cd"
            ],
            [
                "8608a4d2.5b333"
            ]
        ]
    },
    {
        "id": "9cda51ea.28cd",
        "type": "change",
        "z": "ff37b1a0.cc9d98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 280,
        "wires": [
            [
                "f2dbbb9c.1d5b3"
            ]
        ]
    },
    {
        "id": "8608a4d2.5b333",
        "type": "change",
        "z": "ff37b1a0.cc9d98",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 340,
        "wires": [
            [
                "f2dbbb9c.1d5b3"
            ]
        ]
    },
    {
        "id": "f2dbbb9c.1d5b3",
        "type": "serial out",
        "z": "ff37b1a0.cc9d98",
        "name": "",
        "serial": "4266d39e.bfa8fc",
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "e268d5dd.a11a58",
        "type": "http request",
        "z": "5e9e23fa.6f5764",
        "name": "Collect status from Shinobi",
        "method": "GET",
        "ret": "obj",
        "url": "http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L",
        "tls": "",
        "x": 580,
        "y": 180,
        "wires": [
            [
                "47622bce.944cc4",
                "e131469c.551a5"
            ]
        ]
    },
    {
        "id": "e182958f.b3e8c",
        "type": "change",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "trigger_info",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 180,
        "wires": [
            [
                "e268d5dd.a11a58"
            ]
        ]
    },
    {
        "id": "f8f978e.e218c88",
        "type": "mqtt in",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "topic": "security/alert",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "e182958f.b3e8c"
            ]
        ]
    },
    {
        "id": "47622bce.944cc4",
        "type": "switch",
        "z": "5e9e23fa.6f5764",
        "name": "empty/not",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 340,
        "wires": [
            [
                "e0a8528a.1b36c"
            ],
            [
                "b25d764c.9981"
            ]
        ]
    },
    {
        "id": "e0a8528a.1b36c",
        "type": "switch",
        "z": "5e9e23fa.6f5764",
        "name": "Error/not Error",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "cont",
                "v": "Error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 300,
        "wires": [
            [
                "5edc67b3.e14f2"
            ],
            [
                "d39f4ad.90f6838"
            ]
        ]
    },
    {
        "id": "b25d764c.9981",
        "type": "change",
        "z": "5e9e23fa.6f5764",
        "name": "pls register a cam",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please register a camera",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 400,
        "wires": [
            [
                "8a3f959b.b6ec38"
            ]
        ]
    },
    {
        "id": "d39f4ad.90f6838",
        "type": "function",
        "z": "5e9e23fa.6f5764",
        "name": "Offline Message",
        "func": "/*let img_url = msg.payload\nlet new_mag = {}\nnew_mag.payload = \"Intrusion Detected, Unfortunately Cameras Are Offline\"\n//new_mag.image = img_url\nreturn new_mag;\n*/\nmsg.payload = \"Intrusion Detected, Unfortunately Cameras Are Offline\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 300,
        "wires": [
            [
                "403d285d.e55828"
            ]
        ]
    },
    {
        "id": "403d285d.e55828",
        "type": "mqtt out",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "topic": "security/alert/message",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1540,
        "y": 220,
        "wires": []
    },
    {
        "id": "5edc67b3.e14f2",
        "type": "function",
        "z": "5e9e23fa.6f5764",
        "name": "Generate URLs",
        "func": "let cameras_detail = msg.payload\n\nlet number_of_cam = 0\nlet online_cam = []\nlet offline_cam = []\n\nmsg.payload = cameras_detail.length\n\ntry{\n    cameras_detail.forEach(function(i) {\n        if(typeof i.status == 'undefined' || i.status == \"Died\" || i.status == \"Stopped\"){\n            let monitor_id = i.mid\n            offline_cam.push(monitor_id);\n        }else{\n            let monitor_id = i.mid\n            let montior_key = i.ke\n            //http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L\n            var tmp_url = 'http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/jpeg/'+montior_key+'/'+monitor_id+'/s.jpg'\n            online_cam.push(tmp_url)\n        }\n    }) \n    \n}\ncatch(error){\n    if(typeof cameras_detail.status == 'undefined' || cameras_detail.status == \"Died\" || cameras_detail.status == \"Stopped\"){\n        let monitor_id = cameras_detail.mid \n        offline_cam.push(monitor_id)\n    }else{\n        let monitor_id = cameras_detail.mid\n        let monitor_name = cameras_detail.name\n        //let monitor_zone = (monitor_name.split(\"_\")[1]).replace(\"z\", \"\")\n        let montior_key = cameras_detail.ke\n        \n        online_cam.push(monitor_id,montior_key)\n        ////http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L\n         var tmp_url = 'http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/jpeg/'+montior_key+'/'+monitor_id+'/s.jpg'\n        online_cam.push(tmp_url)\n    }\n}\n\nvar result = []\n\nif(online_cam.length > 0){\n    online_cam.forEach(function(i) {\n    var tmp = {payload: i}\n    result.push(tmp)\n})\nreturn [result]\n}\nelse{\n    msg.payload = \"no\"\n    return msg\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 220,
        "wires": [
            [
                "30557989.2ca5be"
            ]
        ]
    },
    {
        "id": "30557989.2ca5be",
        "type": "switch",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "403d285d.e55828"
            ],
            [
                "d39f4ad.90f6838"
            ]
        ]
    },
    {
        "id": "8a3f959b.b6ec38",
        "type": "function",
        "z": "5e9e23fa.6f5764",
        "name": "Offline Message",
        "func": "/*let img_url = msg.payload\nlet new_mag = {}\nnew_mag.payload = \"Intrusion Detected, Unfortunately Cameras Are Offline\"\n//new_mag.image = img_url\nreturn new_mag;\n*/\nmsg.payload = \"Intrusion Detected, Unfortunately Cameras Are Unregistered\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 400,
        "wires": [
            [
                "403d285d.e55828"
            ]
        ]
    },
    {
        "id": "8dc546e6.ca3cb",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "All Camera",
        "info": "",
        "x": 120,
        "y": 120,
        "wires": []
    },
    {
        "id": "4d01d57e.519d3c",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "confidential ",
        "info": "group key - XbUegiTKp9\napi key - xmvBOegbymu2hbfusEgEP7vgBQAoud\n\n//camera info\nhttp://shinobi:8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/monitor/XbUegiTKp9",
        "x": 130,
        "y": 80,
        "wires": []
    },
    {
        "id": "3088c440.31992c",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "on/off",
        "info": "",
        "x": 110,
        "y": 280,
        "wires": []
    },
    {
        "id": "8b227e20.2ba1f",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "empty",
        "info": "",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "79857c91.31ddfc",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "not empty",
        "info": "",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "de119242.6401f",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Empty",
        "info": "",
        "x": 470,
        "y": 380,
        "wires": []
    },
    {
        "id": "9dd7be73.9c8cd8",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Not Empty",
        "info": "",
        "x": 480,
        "y": 300,
        "wires": []
    },
    {
        "id": "da8ea036.3be998",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Error",
        "info": "",
        "x": 650,
        "y": 340,
        "wires": []
    },
    {
        "id": "76dc2d72.4b3d44",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "otherwise",
        "info": "",
        "x": 660,
        "y": 260,
        "wires": []
    },
    {
        "id": "7ef1617f.860e08",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Cameras are Offline",
        "info": "",
        "x": 1050,
        "y": 260,
        "wires": []
    },
    {
        "id": "50e1ac14.47c6ac",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Cameras or A Cemera is Online",
        "info": "",
        "x": 1090,
        "y": 160,
        "wires": []
    },
    {
        "id": "8ff9e0f9.425ee",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "on",
        "info": "",
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "52fe5aac.4a5aac",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "off",
        "info": "",
        "x": 470,
        "y": 380,
        "wires": []
    },
    {
        "id": "40da5641.512d38",
        "type": "mqtt in",
        "z": "337223a7.c42eec",
        "name": "",
        "topic": "devices/door_controller/#",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "988720f1.2be668"
            ]
        ]
    },
    {
        "id": "988720f1.2be668",
        "type": "function",
        "z": "337223a7.c42eec",
        "name": "Read the adversising message",
        "func": "let query = msg.topic\n\nif(query.indexOf('heartbeat') > -1) {\n\n    let query_detail = query.split(\"/\")\n    let active_door = query_detail[2]\n    msg.payload = active_door\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 580,
        "wires": [
            [
                "3733650f.08193a"
            ]
        ]
    },
    {
        "id": "3733650f.08193a",
        "type": "switch",
        "z": "337223a7.c42eec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "door",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "1553b1d5.185c9e",
        "type": "function",
        "z": "337223a7.c42eec",
        "name": "Registering the keypad ",
        "func": "\nlet incomming_key_pad_id = msg.payload\nlet active_keypad = global.get(\"active_key_pad_tmp\")\n\n/*\nlet now = new Date();\nlet then = msg.payload;\nlet seconds = Math.floor((now - (then))/1000);\n*/\n\nactive_keypad[incomming_key_pad_id] = new Date();\n\nglobal.set(\"active_key_pad_tmp\", active_keypad)\n\n\nmsg.payload = active_keypad\nreturn msg\n/*\n\nif(active_keypad.length > 0){\n    \n    //var n = fruits.includes(\"Mango\");\n    \n    if(!active_keypad.includes(incomming_key_pad_id))\n    {   let key_pad_obj = {}\n        key_pad_obj['id'] = incomming_key_pad_id\n        key_pad_obj['last_seen'] = new Date();\n        active_keypad.push(key_pad_obj)\n        global.set(\"active_key_pad_tmp\", key_pad_obj)    \n        msg.payload = key_pad_obj\n    }\n}else{\n    //active_keypad.push(incomming_key_pad_id)\n    //global.set(\"active_key_pad\",active_keypad )\n    \n    let key_pad_obj = {}\n    key_pad_obj['id'] = incomming_key_pad_id\n    key_pad_obj['last_seen'] = new Date();\n    active_keypad.push(key_pad_obj)\n    global.set(\"active_key_pad_tmp\", key_pad_obj)\n    \n    //msg.payload = active_keypad\n}\n\n\nreturn msg;*/",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 580,
        "wires": [
            [
                "acf4a974.19ca78"
            ]
        ]
    },
    {
        "id": "69f6d271.abc7ac",
        "type": "function",
        "z": "337223a7.c42eec",
        "name": "",
        "func": "let new_data = msg.payload\n\nlet tmp = {\n    \n    \"door_1\" : \"12:14\",\n    \"door_2\" : \"00:27\"\n    \n    \n};\n\n//element[ yourKey ] = yourValue;\n\ntmp[new_data] = new Date();\n\n//let data = tmp[\"door_2\"]\nmsg.payload = tmp\n\n//msg.payload = Object.keys(tmp);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 780,
        "wires": [
            [
                "49a8be58.80c87"
            ]
        ]
    },
    {
        "id": "bbc636c1.317c38",
        "type": "inject",
        "z": "337223a7.c42eec",
        "name": "",
        "topic": "",
        "payload": "door_4",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 210,
        "y": 800,
        "wires": [
            [
                "69f6d271.abc7ac"
            ]
        ]
    },
    {
        "id": "49a8be58.80c87",
        "type": "debug",
        "z": "337223a7.c42eec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 640,
        "y": 780,
        "wires": []
    },
    {
        "id": "acf4a974.19ca78",
        "type": "debug",
        "z": "337223a7.c42eec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1220,
        "y": 580,
        "wires": []
    },
    {
        "id": "9fea425f.16c808",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_1",
        "group": "39dafa4c.03bf56",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "1",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "b71caf9b.35ce98",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_2",
        "group": "39dafa4c.03bf56",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "2",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "2",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 100,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "6b3fec2.4456894",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_3",
        "group": "39dafa4c.03bf56",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "3",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "3",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "85426bf0.5e556",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_4",
        "group": "39dafa4c.03bf56",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "4",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "4",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "1dbc352b.8c2833",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_5",
        "group": "39dafa4c.03bf56",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "5",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "5",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "b006084c.8956c",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_6",
        "group": "39dafa4c.03bf56",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "6",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "6",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "1f47b36e.0ada35",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_7",
        "group": "39dafa4c.03bf56",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "7",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "7",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "8d0b612b.2dbdf8",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_8",
        "group": "39dafa4c.03bf56",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "8",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 340,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "2739cfb6.87794",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_9",
        "group": "39dafa4c.03bf56",
        "order": 10,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "9",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "9",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "2f9c95f.ac2f2ea",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_0",
        "group": "39dafa4c.03bf56",
        "order": 11,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "0",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "368915e3.c961ba"
            ]
        ]
    },
    {
        "id": "ffc60ff5.f65128",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_*",
        "group": "39dafa4c.03bf56",
        "order": 12,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "*",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 170,
        "y": 500,
        "wires": [
            [
                "7c2ad8c5.93e458"
            ]
        ]
    },
    {
        "id": "503551bb.362aa",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "btn_#",
        "group": "39dafa4c.03bf56",
        "order": 13,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "#",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "3f344d69.6ce052"
            ]
        ]
    },
    {
        "id": "368915e3.c961ba",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Add all pressing key value into flow variable (press_key)",
        "func": "var pressed_key = flow.get(\"press_key\");\n//0 or 1 or 2 to 9 \nlet current_key = msg.payload \nif(pressed_key === undefined){\n    flow.set(\"press_key\",current_key);\n}\nelse{\n    pressed_key = String(pressed_key) + current_key\n    flow.set(\"press_key\", pressed_key)\n}\n\nlet noc = flow.get(\"press_key\").length\nvar str = \"\"\nfor (var i = 0; i < noc; i++) {\n   str += \"*\";\n}\nmsg.payload = str \nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "20dda13e.c5724e",
                "fb0a6f7f.7219"
            ]
        ]
    },
    {
        "id": "20dda13e.c5724e",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 950,
        "y": 240,
        "wires": []
    },
    {
        "id": "fb0a6f7f.7219",
        "type": "ui_text",
        "z": "898ca7f0.ecb26",
        "group": "39dafa4c.03bf56",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "assign * ",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 960,
        "y": 340,
        "wires": []
    },
    {
        "id": "7c2ad8c5.93e458",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "clear * and flow.press_key",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "press_key",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 380,
        "wires": [
            [
                "fb0a6f7f.7219"
            ]
        ]
    },
    {
        "id": "3f344d69.6ce052",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "pass flow.press_key value",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "press_key",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 580,
        "wires": [
            [
                "5cc4b72a.c299b"
            ]
        ]
    },
    {
        "id": "5cc4b72a.c299b",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "is pressed any key?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 580,
        "wires": [
            [
                "5ef06ff6.b47b4"
            ]
        ]
    },
    {
        "id": "663db8c8.9095d",
        "type": "file in",
        "z": "898ca7f0.ecb26",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "1dfd1a5a.b4939e"
            ]
        ]
    },
    {
        "id": "1dfd1a5a.b4939e",
        "type": "csv",
        "z": "898ca7f0.ecb26",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "x": 550,
        "y": 720,
        "wires": [
            [
                "519402a5.7b4c34"
            ]
        ]
    },
    {
        "id": "519402a5.7b4c34",
        "type": "json",
        "z": "898ca7f0.ecb26",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 670,
        "y": 720,
        "wires": [
            [
                "75db4266.db3d24",
                "19975943.a996b7"
            ]
        ]
    },
    {
        "id": "5ef06ff6.b47b4",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 580,
        "wires": [
            [
                "663db8c8.9095d"
            ]
        ]
    },
    {
        "id": "75db4266.db3d24",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 820,
        "wires": []
    },
    {
        "id": "19975943.a996b7",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Authenticate ",
        "func": "let raw = msg.payload\n//generated in previous four nodes\nlet current_user_key = msg['input']\n\nlet names = []\nlet keys = []\n\n\nraw.forEach(function(key, i){\n    //turn array of arrays to array of objects \n    //[ [ wai, active ....], [ john, ... ] ]\n    //[ {col1: wai, col2: \"active\"} , {...} ]\n    let tmp2 = Object.keys(key).map(function(e){return key[e]})\n    \n    \n    tmp2.forEach(function(value, j){\n        //first one is name, so put it in name array\n\t\tif(j === 0) { names.push(value); }\n\t\t//second and third is key and pin\n\t\telse if(j > 0 && j < 3) { \n            let tmp = String(value) + \":\" + String(i)\n\t\t\tkeys.push(tmp);  \n\t\t}\n\t\t//else do nothing\n\t\telse {;;}\n\t})\n})\n\nlet foundat = []\n\nkeys.forEach(function(value){\n    let pass = value.split(\":\")[0]\n    let id = value.split(\":\")[1]\n    if(pass == current_user_key){\n        foundat.push(id)\n    }\n})\n\nlet final = undefined\nif(foundat.length > 0){\n    final = names[foundat[0]]\n}\nelse{\n    final = \"no\"\n}\n\nmsg.payload = final\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 870,
        "y": 720,
        "wires": [
            [
                "d75b71ed.193c28",
                "955ee15.ed97ca"
            ]
        ]
    },
    {
        "id": "d75b71ed.193c28",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1030,
        "y": 640,
        "wires": []
    },
    {
        "id": "955ee15.ed97ca",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "6bcffc60.d62b74"
            ],
            [
                "7737290c.d2c3c8",
                "3fccee69.da4702"
            ]
        ]
    },
    {
        "id": "283696b0.88a9ca",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "set user_type according to incomming data",
        "rules": [
            {
                "t": "delete",
                "p": "press_key",
                "pt": "flow"
            },
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "user",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "last_login",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 680,
        "wires": [
            [
                "fb0a6f7f.7219"
            ]
        ]
    },
    {
        "id": "228867ba.ec9da8",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "show and hide",
        "func": "let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t    hide:[\"Alarm_AlarmAuthenticate\"],\n\t\t\t\tshow:[\"Alarm_MasterControl\", \"Alarm_armStatus\"]\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 1100,
        "wires": [
            [
                "d307af7a.a79b68"
            ]
        ]
    },
    {
        "id": "d307af7a.a79b68",
        "type": "ui_ui_control",
        "z": "898ca7f0.ecb26",
        "name": "",
        "x": 760,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "8a634f7a.a1bc",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "show and hide",
        "func": "let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t    show:[\"Alarm_AlarmAuthenticate\"],\n\t\t\t\thide:[\"Alarm_MasterControl\", \"Alarm_armStatus\"]\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 1000,
        "wires": [
            [
                "f2fd867a.a61628"
            ]
        ]
    },
    {
        "id": "f2fd867a.a61628",
        "type": "ui_ui_control",
        "z": "898ca7f0.ecb26",
        "name": "",
        "x": 760,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "a31c9ca6.ba201",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "",
        "property": "user_type",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "guess",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "user",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 1040,
        "wires": [
            [
                "8a634f7a.a1bc"
            ],
            [
                "228867ba.ec9da8"
            ]
        ]
    },
    {
        "id": "ebf47770.92c7c8",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "UI Controller",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 180,
        "y": 1040,
        "wires": [
            [
                "a31c9ca6.ba201"
            ]
        ]
    },
    {
        "id": "9a3922e8.e68428",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "",
        "group": "d60901c.dde74",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "86d19e64.0f4d1"
            ]
        ]
    },
    {
        "id": "86d19e64.0f4d1",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "set guess to user_type ",
        "rules": [
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "guess",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "703421a5.e16e1",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "Auto Logout",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 180,
        "y": 1180,
        "wires": [
            [
                "195c0a69.d8251e"
            ]
        ]
    },
    {
        "id": "195c0a69.d8251e",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Auto Logout After 30 seconds",
        "func": "let last_login = flow.get(\"last_login\")\n\nlet now = new Date();\nlet then = last_login;\nlet seconds = Math.floor((now - (then))/1000);\n\nif(seconds >= 30){\n  flow.set(\"user_type\", \"guess\")\n // msg.payload = 60 - seconds\n    \n}\n\nlet time = 30 - seconds\nmsg.payload = `Will logout in ${time} seconds`\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1180,
        "wires": [
            [
                "1f894e49.2dcbea",
                "d7f2d2ae.93cb98"
            ]
        ]
    },
    {
        "id": "1f894e49.2dcbea",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ce2c9936.5b78f",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "Generated global variables",
        "info": "- security_armed\n- security_warning\n- security_alert \n- active_events \n- last_seen_events",
        "x": 1360,
        "y": 40,
        "wires": []
    },
    {
        "id": "134ed631.7e452a",
        "type": "debug",
        "z": "ba2ccab8.e0ab4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1370,
        "y": 540,
        "wires": []
    },
    {
        "id": "d2617768.52cbd8",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "F1",
        "info": "Connection to microcontroller",
        "x": 70,
        "y": 360,
        "wires": []
    },
    {
        "id": "c9101c71.063fa",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "F2",
        "info": "Scrape the ID from data getting from MCU ",
        "x": 390,
        "y": 360,
        "wires": []
    },
    {
        "id": "f1f6f4f9.232bb8",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "F3",
        "info": "Record the time that detect movement in a globale variable called (event_details)\n\nPrepare the MQTT topic for a sensor to advertise that movement event \n",
        "x": 730,
        "y": 340,
        "wires": []
    },
    {
        "id": "526334a9.3f91ac",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "F4",
        "info": "Send the payload (\"1\") to the MQTT topic that has been generated in the previous node",
        "x": 1370,
        "y": 340,
        "wires": []
    },
    {
        "id": "51911cf.1dc6de4",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "F1",
        "info": "Set the file name to get the detail information of sensors(door, motion) when starting the system",
        "x": 410,
        "y": 240,
        "wires": []
    },
    {
        "id": "87d58c45.2c6a3",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "F4",
        "info": "Create an object that will store the time when an activity triiger a sensor  \n\nThe output can be see in Out2",
        "x": 790,
        "y": 340,
        "wires": []
    },
    {
        "id": "ab63b936.8b86a",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "F4",
        "info": "Initialize global variables ",
        "x": 250,
        "y": 640,
        "wires": []
    },
    {
        "id": "4784f468.58505c",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "Generated global variables",
        "info": "last_seen_events",
        "x": 1200,
        "y": 100,
        "wires": []
    },
    {
        "id": "2076380.d361b48",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "F1",
        "info": "Receive the command from Security Internals due to 2 reasons\n\n1 - movement is detected while system is in armed stage\n\n2 - Somebody is trying incorrect key for more then three times within 5 minutes",
        "x": 130,
        "y": 260,
        "wires": []
    },
    {
        "id": "84ced61a.a28b3",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "F2",
        "info": "Call the Shinobi API to get detail information of cameras ",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "c3c6fac4.90f5b",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "F3",
        "info": "Generate URLs these can be used to used to record video. It will be used at F4",
        "x": 1090,
        "y": 300,
        "wires": []
    },
    {
        "id": "3b1d59c2.02fc7e",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "F4",
        "info": "",
        "x": 1470,
        "y": 380,
        "wires": []
    },
    {
        "id": "17429133.1e6847",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "From Security Internal",
        "info": "",
        "x": 280,
        "y": 280,
        "wires": []
    },
    {
        "id": "bd2ea5b5.364db",
        "type": "comment",
        "z": "475d7139.ccd71",
        "name": "Functions of this flow",
        "info": "1 - Check a global variable (last_seen_events) that is generated in \"Motion/Door Event\" flow\n     \n     { sensor_id : timestamp, \n       xxxxxx\n         \n     }\n     \n2 - Split into each by \",\"\n\n3 - Calculate the time difference between (now and last_seen_event) and generate payload (color) that will be used in next flow\n\n4 - Route the message to the destination by looking the comming message \n\n",
        "x": 1360,
        "y": 60,
        "wires": []
    },
    {
        "id": "90fa1cbe.29d418",
        "type": "comment",
        "z": "475d7139.ccd71",
        "name": "F1",
        "info": "Check global variable name (last_seen_events) that is updated in \"Motion/Doors Event\" \nwhen sensors detect any movement\n",
        "x": 130,
        "y": 240,
        "wires": []
    },
    {
        "id": "fad73c34.541038",
        "type": "comment",
        "z": "475d7139.ccd71",
        "name": "F2",
        "info": "Data structure is array so seperate each and every sensor by \",\"",
        "x": 370,
        "y": 240,
        "wires": []
    },
    {
        "id": "cb432dbd.1ff528",
        "type": "comment",
        "z": "475d7139.ccd71",
        "name": "F3",
        "info": "Generate the color based on time gap between now and the time when sensor detected movement",
        "x": 550,
        "y": 240,
        "wires": []
    },
    {
        "id": "36a1661a.8fc5e2",
        "type": "comment",
        "z": "475d7139.ccd71",
        "name": "F4",
        "info": "",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "8bfdba87.01bdf8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Generated flow variables",
        "info": "press_key\nuser_type",
        "x": 1174,
        "y": 62,
        "wires": []
    },
    {
        "id": "e6312240.1bb7c",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F1",
        "info": "When a key is pressed, an associated value is assigned into flow variable called \"press_key\"",
        "x": 530,
        "y": 180,
        "wires": []
    },
    {
        "id": "e8cfac96.eae5b8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F3",
        "info": "Clear the * output and clear the flow variable called (press_key)",
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "e1decfd6.3dabc",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F4",
        "info": "Get data inside the flow variable called press_key and pass it to following nodes",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "2b3fb6d3.d0e122",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F6",
        "info": "Set the pressed key into \"msg.input\" to prevent the data from file reading is overwrite to them",
        "x": 870,
        "y": 540,
        "wires": []
    },
    {
        "id": "a803ba67.beca9",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F7",
        "info": "Read the file that store user information includes \n- Name\n- PIN\n- Key\n- Email\n- Phone\n- UserLevel",
        "x": 530,
        "y": 660,
        "wires": []
    },
    {
        "id": "631a3a12.b450bc",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_2",
        "group": "1572db87.4cdbfc",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "2",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "2",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "44f6a23.7ab505c",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Add all pressing key value into flow variable (press_key)",
        "func": "var pressed_key = flow.get(\"press_key\");\n//0 or 1 or 2 to 9 \nlet current_key = msg.payload \nif(pressed_key === undefined){\n    flow.set(\"press_key\",current_key);\n}\nelse{\n    pressed_key = String(pressed_key) + current_key\n    flow.set(\"press_key\", pressed_key)\n}\n\nlet noc = flow.get(\"press_key\").length\nvar str = \"\"\nfor (var i = 0; i < noc; i++) {\n   str += \"*\";\n}\nmsg.payload = str \nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "950c7b3e.64c01",
                "c633ecf2.9c414"
            ]
        ]
    },
    {
        "id": "8c3f7238.e5e31",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_1",
        "group": "1572db87.4cdbfc",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "1",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "59b10191.6d5248",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_3",
        "group": "1572db87.4cdbfc",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "3",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "3",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "17d2fb.1018fd06",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_4",
        "group": "1572db87.4cdbfc",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "4",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "4",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "dfaa224a.cb748",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_5",
        "group": "1572db87.4cdbfc",
        "order": 6,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "5",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "5",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "61d39588.e505cc",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_6",
        "group": "1572db87.4cdbfc",
        "order": 7,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "6",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "6",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "54e90596.a3ede4",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_7",
        "group": "1572db87.4cdbfc",
        "order": 8,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "7",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "7",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "7d536928.fb6878",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_8",
        "group": "1572db87.4cdbfc",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "8",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "8",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "59dfdd3c.ed83ac",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_9",
        "group": "1572db87.4cdbfc",
        "order": 10,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "9",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "9",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "8fe83e7c.e26a4",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_0",
        "group": "1572db87.4cdbfc",
        "order": 11,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "0",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "44f6a23.7ab505c"
            ]
        ]
    },
    {
        "id": "950c7b3e.64c01",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 930,
        "y": 160,
        "wires": []
    },
    {
        "id": "c633ecf2.9c414",
        "type": "ui_text",
        "z": "4812a125.a423e8",
        "group": "1572db87.4cdbfc",
        "order": 1,
        "width": "6",
        "height": "1",
        "name": "assign * ",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 920,
        "y": 320,
        "wires": []
    },
    {
        "id": "1162e723.0b85c1",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "clear * and flow.press_key",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "press_key",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 360,
        "wires": [
            [
                "c633ecf2.9c414"
            ]
        ]
    },
    {
        "id": "cebac9e2.d6cb58",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "set user_type according to incomming data",
        "rules": [
            {
                "t": "delete",
                "p": "press_key",
                "pt": "flow"
            },
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "user",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "last_login",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 640,
        "wires": [
            [
                "c633ecf2.9c414"
            ]
        ]
    },
    {
        "id": "4b09280e.c8a468",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_*",
        "group": "1572db87.4cdbfc",
        "order": 12,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "*",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "1162e723.0b85c1"
            ]
        ]
    },
    {
        "id": "707416f7.7deda8",
        "type": "switch",
        "z": "4812a125.a423e8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1070,
        "y": 700,
        "wires": [
            [
                "cebac9e2.d6cb58",
                "6149b2b1.7c969c"
            ]
        ]
    },
    {
        "id": "fe2fe7f5.8e784",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Authenticate ",
        "func": "let raw = msg.payload\n//generated in previous four nodes\nlet current_user_key = msg['input']\n\nlet names = []\nlet keys = []\n\n\nraw.forEach(function(key, i){\n    //turn array of arrays to array of objects \n    //[ [ wai, active ....], [ john, ... ] ]\n    //[ {col1: wai, col2: \"active\"} , {...} ]\n    let tmp2 = Object.keys(key).map(function(e){return key[e]})\n    \n    \n    tmp2.forEach(function(value, j){\n        //first one is name, so put it in name array\n\t\tif(j === 0) { names.push(value); }\n\t\t//second and third is key and pin\n\t\telse if(j > 0 && j < 3) { \n            let tmp = String(value) + \":\" + String(i)\n\t\t\tkeys.push(tmp);  \n\t\t}\n\t\t//else do nothing\n\t\telse {;;}\n\t})\n})\n\nlet foundat = []\n\nkeys.forEach(function(value){\n    let pass = value.split(\":\")[0]\n    let id = value.split(\":\")[1]\n    if(pass == current_user_key){\n        foundat.push(id)\n    }\n})\n\nlet final = undefined\nif(foundat.length > 0){\n    final = names[foundat[0]]\n}\nelse{\n    final = \"no\"\n}\n\nmsg.payload = final\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "826ee7d.8d06898",
        "type": "json",
        "z": "4812a125.a423e8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 630,
        "y": 700,
        "wires": [
            [
                "63cfafb1.3096e8"
            ]
        ]
    },
    {
        "id": "100669aa.d3b5a6",
        "type": "csv",
        "z": "4812a125.a423e8",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "826ee7d.8d06898"
            ]
        ]
    },
    {
        "id": "c78fdb0a.93224",
        "type": "file in",
        "z": "4812a125.a423e8",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 350,
        "y": 700,
        "wires": [
            [
                "100669aa.d3b5a6"
            ]
        ]
    },
    {
        "id": "8ff8a03a.aab258",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 560,
        "wires": [
            [
                "c78fdb0a.93224"
            ]
        ]
    },
    {
        "id": "4353b67b.013fa",
        "type": "switch",
        "z": "4812a125.a423e8",
        "name": "is pressed any key?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 560,
        "wires": [
            [
                "8ff8a03a.aab258"
            ]
        ]
    },
    {
        "id": "9154d362.c84728",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "pass flow.press_key value",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "press_key",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 560,
        "wires": [
            [
                "4353b67b.013fa"
            ]
        ]
    },
    {
        "id": "8fcc501f.5dddf8",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "btn_#",
        "group": "1572db87.4cdbfc",
        "order": 13,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "#",
        "color": "green",
        "bgcolor": "black",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 130,
        "y": 560,
        "wires": [
            [
                "9154d362.c84728"
            ]
        ]
    },
    {
        "id": "adc070a1.27f048",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "set guess to user_type ",
        "rules": [
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "guess",
                "tot": "str"
            },
            {
                "t": "delete",
                "p": "current_user",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "ef9ae99b.73f4a8",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "",
        "group": "b1083210.56f3b8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 140,
        "y": 880,
        "wires": [
            [
                "adc070a1.27f048"
            ]
        ]
    },
    {
        "id": "d3c25017.d52ea8",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "show and hide",
        "func": "let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t \n\t\t\t\t\n\t\t\t    hide:[\"UserManagement_UsrManAuthenticate\"],\n\t\t\t    show:[\"UserManagement_UserRegistration\", \"UserManagement_UserRemove\", \"UserManagement_UserList\"]\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "34b742b3.f656ee"
            ]
        ]
    },
    {
        "id": "34b742b3.f656ee",
        "type": "ui_ui_control",
        "z": "4812a125.a423e8",
        "name": "",
        "x": 1020,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "2d9f6c6b.eec1ec",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "show and hide",
        "func": "let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t    show:[\"UserManagement_UsrManAuthenticate\"],\n\t\t\t\thide:[\"UserManagement_UserRegistration\", \"UserManagement_UserRemove\", \"UserManagement_UserList\"]\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 960,
        "wires": [
            [
                "2483595a.170576"
            ]
        ]
    },
    {
        "id": "2483595a.170576",
        "type": "ui_ui_control",
        "z": "4812a125.a423e8",
        "name": "",
        "x": 1040,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "a8d1b27.160f45",
        "type": "switch",
        "z": "4812a125.a423e8",
        "name": "",
        "property": "user_type",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "guess",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "user",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 1040,
        "wires": [
            [
                "465b38ad.ae9188"
            ],
            [
                "9bb899c9.44ae78"
            ]
        ]
    },
    {
        "id": "487430cb.5057d",
        "type": "inject",
        "z": "4812a125.a423e8",
        "name": "UI Controller",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 200,
        "y": 1040,
        "wires": [
            [
                "a8d1b27.160f45"
            ]
        ]
    },
    {
        "id": "ab4c4588.5bc778",
        "type": "inject",
        "z": "4812a125.a423e8",
        "name": "Auto Logout",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 180,
        "y": 820,
        "wires": [
            [
                "c9535b13.188f98"
            ]
        ]
    },
    {
        "id": "c9535b13.188f98",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Auto Logout After 30 seconds",
        "func": "let last_login = flow.get(\"last_login\")\n\nlet now = new Date();\nlet then = last_login;\nlet seconds = Math.floor((now - (then))/1000);\n\n//node.warn(60 - seconds)\n\nif(seconds >= 30){\n  flow.set(\"user_type\", \"guess\")\n  //node.warn(seconds)\n}\nlet time = 30 - seconds\nmsg.payload = `Will logout in ${time} seconds`\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 820,
        "wires": [
            [
                "d8acc270.bf0dd",
                "bc8eb34d.efdf6"
            ]
        ]
    },
    {
        "id": "d8acc270.bf0dd",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1130,
        "y": 880,
        "wires": []
    },
    {
        "id": "b51f279d.9395c8",
        "type": "inject",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "",
        "payload": "user_type",
        "payloadType": "flow",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 2500,
        "wires": [
            [
                "175438d4.e36367"
            ]
        ]
    },
    {
        "id": "175438d4.e36367",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 430,
        "y": 2500,
        "wires": []
    },
    {
        "id": "c4658bf.70624f8",
        "type": "inject",
        "z": "4812a125.a423e8",
        "name": "set guess",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 180,
        "y": 2600,
        "wires": [
            [
                "4f07ea81.5244ac"
            ]
        ]
    },
    {
        "id": "4f07ea81.5244ac",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "guess",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "a5f53e46.bb27b",
        "type": "inject",
        "z": "4812a125.a423e8",
        "name": "set user",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 180,
        "y": 2640,
        "wires": [
            [
                "95b22e35.504558"
            ]
        ]
    },
    {
        "id": "95b22e35.504558",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "cf6a1dec.6adc58",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "Testing",
        "info": "",
        "x": 190,
        "y": 2440,
        "wires": []
    },
    {
        "id": "24e9d55d.bd5a4a",
        "type": "ui_form",
        "z": "4812a125.a423e8",
        "name": "",
        "label": "",
        "group": "b1083210.56f3b8",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true
            },
            {
                "label": "Key",
                "value": "key",
                "type": "number",
                "required": true
            },
            {
                "label": "Pin",
                "value": "pin",
                "type": "number",
                "required": true
            },
            {
                "label": "Email",
                "value": "email",
                "type": "text",
                "required": true
            },
            {
                "label": "Phone",
                "value": "phone",
                "type": "number",
                "required": true
            },
            {
                "label": "Admin",
                "value": "admin",
                "type": "checkbox",
                "required": true
            }
        ],
        "formValue": {
            "name": "",
            "key": "",
            "pin": "",
            "email": "",
            "phone": "",
            "admin": false
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 90,
        "y": 1380,
        "wires": [
            [
                "237af388.00dcfc",
                "6761aff7.8e9f98"
            ]
        ]
    },
    {
        "id": "6761aff7.8e9f98",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Allocate Input Data to the flow",
        "func": "let form_detail = msg.payload\nlet user_detail = {}\n\nuser_payload = {}\nuser_payload.Name = form_detail.name\nuser_payload.key = String(form_detail.key)\nuser_payload.pin = String(form_detail.pin)\nuser_payload.email = form_detail.email\nuser_payload.phone = String(form_detail.phone)\nuser_payload.status = \"active\"\nuser_payload.admin = String(form_detail.admin)\n\nuser_detail.payload = user_payload\nreturn user_detail\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 1380,
        "wires": [
            [
                "648f9c07.0b5114"
            ]
        ]
    },
    {
        "id": "648f9c07.0b5114",
        "type": "json",
        "z": "4812a125.a423e8",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 610,
        "y": 1380,
        "wires": [
            [
                "d37a78c0.034ac8",
                "6efb167e.53fca"
            ]
        ]
    },
    {
        "id": "d37a78c0.034ac8",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 1300,
        "wires": []
    },
    {
        "id": "6efb167e.53fca",
        "type": "http request",
        "z": "4812a125.a423e8",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "localhost:1880/api/user",
        "tls": "",
        "x": 830,
        "y": 1380,
        "wires": [
            [
                "3b524011.2c35b8",
                "98a88ec7.4f1538",
                "b237f538.fcee8"
            ]
        ]
    },
    {
        "id": "3b524011.2c35b8",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "user/reload",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1300,
        "wires": [
            [
                "ec3c112.b10c8f"
            ]
        ]
    },
    {
        "id": "ec3c112.b10c8f",
        "type": "mqtt out",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1280,
        "y": 1300,
        "wires": []
    },
    {
        "id": "98a88ec7.4f1538",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1480,
        "wires": [
            [
                "c0c84883.8dad4"
            ]
        ]
    },
    {
        "id": "b237f538.fcee8",
        "type": "ui_text",
        "z": "4812a125.a423e8",
        "group": "b1083210.56f3b8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1270,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c0c84883.8dad4",
        "type": "delay",
        "z": "4812a125.a423e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1200,
        "y": 1480,
        "wires": [
            [
                "b237f538.fcee8"
            ]
        ]
    },
    {
        "id": "721dea5e.a6a08c",
        "type": "inject",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 130,
        "y": 1620,
        "wires": [
            [
                "6f5a4dbc.389404"
            ]
        ]
    },
    {
        "id": "6f5a4dbc.389404",
        "type": "http request",
        "z": "4812a125.a423e8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "localhost:1880/api/user",
        "tls": "",
        "x": 310,
        "y": 1680,
        "wires": [
            [
                "c4f2bab5.aaefd8",
                "c59c4097.9f19c",
                "6f514cd2.d555bc",
                "7509c5b9.e6e5bc"
            ]
        ]
    },
    {
        "id": "ad7f357e.b30948",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Escape Admin User",
        "func": "let raw = msg.payload\nlet length = raw.length\nif(length === 0){\n    msg.payload = \"0\"\n}\n\n\nelse{\n    \n    let new_data = []\n    raw.forEach(function(i){\n        //if(i.Name !== \"admin\"){\n        if(!i.Name.includes(\"admin\")){\n            new_data.push(i)\n        }\n    })\n    //msg.payload = raw\n    msg.payload = new_data\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "e0783f1b.507ff",
        "type": "switch",
        "z": "4812a125.a423e8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 1680,
        "wires": [
            [
                "eb0438c9.add54"
            ],
            [
                "725613b4.f4a69c"
            ]
        ]
    },
    {
        "id": "725613b4.f4a69c",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "empty",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "empty",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1760,
        "wires": [
            [
                "559d32d.81f53cc"
            ]
        ]
    },
    {
        "id": "559d32d.81f53cc",
        "type": "ui_dropdown",
        "z": "4812a125.a423e8",
        "name": "",
        "label": "",
        "place": "Select option",
        "group": "dca1a8b2.7cb16",
        "order": 1,
        "width": "5",
        "height": "1",
        "passthru": true,
        "options": [
            {
                "label": "Select An User To Remove",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "select",
        "x": 1120,
        "y": 1740,
        "wires": [
            [
                "d4209df1.50d4c8"
            ]
        ]
    },
    {
        "id": "eb0438c9.add54",
        "type": "split",
        "z": "4812a125.a423e8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 900,
        "y": 1620,
        "wires": [
            [
                "6b78138f.b2b014"
            ]
        ]
    },
    {
        "id": "6b78138f.b2b014",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1620,
        "wires": [
            [
                "d4f1f921.ac6b3"
            ]
        ]
    },
    {
        "id": "d4f1f921.ac6b3",
        "type": "join",
        "z": "4812a125.a423e8",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1280,
        "y": 1620,
        "wires": [
            [
                "ec02e5ed.1e589"
            ]
        ]
    },
    {
        "id": "30d5e1a6.3a0e76",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "usr_list",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "ec02e5ed.1e589",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 1620,
        "wires": [
            [
                "559d32d.81f53cc",
                "c3af3136.81b518"
            ]
        ]
    },
    {
        "id": "eb9db2e9.be56d8",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "",
        "group": "dca1a8b2.7cb16",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Remove",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "btn",
        "x": 1130,
        "y": 1820,
        "wires": [
            [
                "d4209df1.50d4c8"
            ]
        ]
    },
    {
        "id": "d4209df1.50d4c8",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Get select user name",
        "func": "context.data = context.data || {}\n\nswitch (msg.topic){\n\tcase \"btn\":\n\t\tcontext.data.button = msg.payload;\n\t\tmsg = null;\n\t\tbreak;\n\tcase \"select\":\n\t\tcontext.data.select = msg.payload;\n\t\tmsg = null\n\t\tbreak;\n\tdefault:\n\t\tmsg = null\n\t\tbreak;\n}\n\nnode.warn(context.data.button)\nnode.warn(context.data.select)\n\nif(context.data.button != null && context.data.select !=null){\n\tlet tmp = String(context.data.select)\n\tcontext.data = null\n\treturn {payload:tmp}\n}else{\n\treturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1400,
        "y": 1760,
        "wires": [
            [
                "eedfed61.1e49b8",
                "59991109.0e12f8"
            ]
        ]
    },
    {
        "id": "59991109.0e12f8",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "call the api",
        "func": "let name = msg.payload\nlet remove_url = \"localhost:1880/api/user/\"+name+\"/remove\"\nmsg.url = remove_url\n///api/user/:name/remove\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1610,
        "y": 1720,
        "wires": [
            [
                "5d27b16b.7c5c5",
                "eedfed61.1e49b8"
            ]
        ]
    },
    {
        "id": "5d27b16b.7c5c5",
        "type": "http request",
        "z": "4812a125.a423e8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1790,
        "y": 1720,
        "wires": [
            [
                "7ed40308.7d9e8c",
                "eedfed61.1e49b8"
            ]
        ]
    },
    {
        "id": "7ed40308.7d9e8c",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "update the user list",
        "func": "let new_msg = {}\nnew_msg.topic = 'user/reload'\nnew_msg.payload = 1\nreturn new_msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1960,
        "y": 1660,
        "wires": [
            [
                "6a5cc7e7.a446d",
                "eedfed61.1e49b8"
            ]
        ]
    },
    {
        "id": "6a5cc7e7.a446d",
        "type": "mqtt out",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 2050,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6ee90cb3.754634",
        "type": "mqtt in",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "user/reload",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 120,
        "y": 1780,
        "wires": [
            [
                "6f5a4dbc.389404"
            ]
        ]
    },
    {
        "id": "eedfed61.1e49b8",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1970,
        "y": 1860,
        "wires": []
    },
    {
        "id": "c4f2bab5.aaefd8",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 570,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c59c4097.9f19c",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "show or hide the user list",
        "func": "let raw = msg.payload\nif(raw.length === 0 || raw.length == 1){\n    msg.payload = \"hide\"\n}//user_name.includes(\"admin\")\n//else if (raw.length == 1 && raw[0].Name == \"admin\"){\n/*else if (raw.length == 1 && raw[0].Name.includes(\"admin\")){\n    //msg.payload = raw.length\n    msg.payload = \"hide\"\n}*/\nelse{\n    msg.payload = \"show\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1840,
        "wires": [
            [
                "c4f2bab5.aaefd8",
                "a1ab19f1.427ac8"
            ]
        ]
    },
    {
        "id": "a1ab19f1.427ac8",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user_select_show",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "465b38ad.ae9188",
        "type": "switch",
        "z": "4812a125.a423e8",
        "name": "",
        "property": "user_select_show",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "show",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 1000,
        "wires": [
            [
                "2d9f6c6b.eec1ec"
            ],
            [
                "2d9f6c6b.eec1ec"
            ]
        ]
    },
    {
        "id": "9bb899c9.44ae78",
        "type": "switch",
        "z": "4812a125.a423e8",
        "name": "",
        "property": "user_select_show",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "show",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "hide",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 1120,
        "wires": [
            [
                "d3c25017.d52ea8"
            ],
            [
                "f3f77f41.059e58"
            ]
        ]
    },
    {
        "id": "bcbcca32.f21f68",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "guess",
        "info": "",
        "x": 370,
        "y": 980,
        "wires": []
    },
    {
        "id": "329de88d.17cca8",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "user",
        "info": "",
        "x": 370,
        "y": 1080,
        "wires": []
    },
    {
        "id": "dc1a633.04cb8a",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "show",
        "info": "",
        "x": 535.5556030273438,
        "y": 961.1112060546875,
        "wires": []
    },
    {
        "id": "b3378f08.67729",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "hide",
        "info": "",
        "x": 530,
        "y": 1040,
        "wires": []
    },
    {
        "id": "c050194d.7e016",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "show",
        "info": "",
        "x": 530,
        "y": 1080,
        "wires": []
    },
    {
        "id": "89dcf8d7.9cba1",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "hide",
        "info": "",
        "x": 530,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f3f77f41.059e58",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "show and hide",
        "func": "let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t \n\t\t\t\t\n\t\t\t    hide:[\"UserManagement_UsrManAuthenticate\",\"UserManagement_UserRemove\"],\n\t\t\t    show:[\"UserManagement_UserRegistration\",\"UserManagement_UserList\"]\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 1140,
        "wires": [
            [
                "d73510e8.040218"
            ]
        ]
    },
    {
        "id": "d73510e8.040218",
        "type": "ui_ui_control",
        "z": "4812a125.a423e8",
        "name": "",
        "x": 1020,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "f0383a5.e9b7d48",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Only admin",
        "func": "let user_name = msg.payload\nif(user_name.includes(\"admin\")){\n    msg.payload = user_name\n}else{\n    msg.payload = \"no\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1410,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c3af3136.81b518",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1710,
        "y": 1540,
        "wires": []
    },
    {
        "id": "63cfafb1.3096e8",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Authenticate ",
        "func": "let raw = msg.payload\n//generated in previous four nodes\nlet current_user_key = msg['input']\n\nlet names = []\nlet keys = []\nlet level = []\n\n\nraw.forEach(function(key, i){\n    //turn array of arrays to array of objects \n    //[ [ wai, active ....], [ john, ... ] ]\n    //[ {col1: wai, col2: \"active\"} , {...} ]\n    let tmp2 = Object.keys(key).map(function(e){return key[e]})\n    \n    \n    tmp2.forEach(function(value, j){\n        //first one is name, so put it in name array\n\t\tif(j === 0) { names.push(value); }\n\t\t//second and third is key and pin\n\t\t//else if(j > 0 && j < 2) {\n\t\telse if(j == 2) {\n            let tmp = String(value) + \":\" + String(i)\n\t\t\tkeys.push(tmp);  \n\t\t}else if(j === 6){\n\t\t    let tmp = String(value) + \":\" + String(i)\n\t\t    level.push(tmp)\n\t\t}\n\t\t//else do nothing\n\t\telse {;;}\n\t})\n})\n\n//msg.payload = names\n//return msg\n\nlet foundat = []\n\nnode.warn(names)\nnode.warn(keys)\nnode.warn(level)\n\nkeys.forEach(function(value, i){\n    let pass = value.split(\":\")[0]\n    let id = value.split(\":\")[1]\n    let admin = String(level[i]).split(\":\")[0] \n    \n    if(pass == current_user_key && admin == \"true\"){\n        foundat.push(id)\n    }\n})\n\nlet final = undefined\nif(foundat.length > 0){\n    final = names[foundat[0]]\n}\nelse{\n    final = \"no\"\n}\n\nmsg.payload = final\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 700,
        "wires": [
            [
                "707416f7.7deda8",
                "d6ce985a.632008"
            ]
        ]
    },
    {
        "id": "c5b65de.ee1432",
        "type": "inject",
        "z": "9b447c3b.71a68",
        "name": "Publish Title of CSV into the flow",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 260,
        "y": 100,
        "wires": [
            [
                "4001320.86408d"
            ]
        ]
    },
    {
        "id": "4001320.86408d",
        "type": "file in",
        "z": "9b447c3b.71a68",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "6788116.1049af"
            ]
        ]
    },
    {
        "id": "6788116.1049af",
        "type": "csv",
        "z": "9b447c3b.71a68",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "x": 910,
        "y": 100,
        "wires": [
            [
                "738daafb.5b6a3c"
            ]
        ]
    },
    {
        "id": "738daafb.5b6a3c",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "Get title of CSV file (Name, key....)",
        "func": "let file_content = msg.payload \nlet titles = []\n\nfile_content.forEach(function(key, i){\n    if(i === 0){\n        titles = Object.keys(key).map(function(e){return key[e]})\n    }\n})\nmsg.payload =titles\nmsg.topic = \"title\"\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 100,
        "wires": [
            [
                "f64a7e6f.1475d"
            ]
        ]
    },
    {
        "id": "f64a7e6f.1475d",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "title",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "f68eb508.83f9a",
        "type": "inject",
        "z": "9b447c3b.71a68",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 180,
        "y": 260,
        "wires": [
            [
                "abc16342.539848"
            ]
        ]
    },
    {
        "id": "abc16342.539848",
        "type": "file in",
        "z": "9b447c3b.71a68",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "36da3d13.1d616a"
            ]
        ]
    },
    {
        "id": "36da3d13.1d616a",
        "type": "csv",
        "z": "9b447c3b.71a68",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "",
        "x": 710,
        "y": 300,
        "wires": [
            [
                "e6154cbb.28f2c8"
            ]
        ]
    },
    {
        "id": "e6154cbb.28f2c8",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "List of Users Detail ",
        "func": "let file_content = msg.payload \nlet titles = []\nlet data = []\n\nfile_content.forEach(function(key, i){\n    if(i === 0){\n        titles = Object.keys(key).map(function(e){return key[e]})\n    }\n})\n\nfile_content.forEach(function(key, i){\n    //escape the title line\n    if(i > 0){\n        //john, 33339, 6666, enable, john@gmail.com, 0461611087\n        let a_user = Object.keys(key).map(function(e){return key[e]})\n        let a_user_obj = {}\n        titles.forEach(function(key, j){\n            a_user_obj[key] = a_user[j]\n        })\n        data.push(a_user_obj)\n    }\n})\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 300,
        "wires": [
            [
                "3146afa6.75dfe",
                "4b84ced4.d7a1c8"
            ]
        ]
    },
    {
        "id": "3146afa6.75dfe",
        "type": "json",
        "z": "9b447c3b.71a68",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1240,
        "y": 300,
        "wires": [
            [
                "6a9439c4.10c88",
                "2d855a5b.7d3c6e"
            ]
        ]
    },
    {
        "id": "6a9439c4.10c88",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1510,
        "y": 300,
        "wires": []
    },
    {
        "id": "7a83389c.60197",
        "type": "http in",
        "z": "9b447c3b.71a68",
        "name": "GET /api/user",
        "url": "/api/user",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "abc16342.539848"
            ]
        ]
    },
    {
        "id": "2d855a5b.7d3c6e",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1520,
        "y": 240,
        "wires": []
    },
    {
        "id": "88d1f2f.820b79",
        "type": "file in",
        "z": "9b447c3b.71a68",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 670,
        "y": 520,
        "wires": [
            [
                "9e8affaa.bb32f8"
            ]
        ]
    },
    {
        "id": "9e8affaa.bb32f8",
        "type": "csv",
        "z": "9b447c3b.71a68",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "x": 850,
        "y": 520,
        "wires": [
            [
                "47b92dc9.a957a4"
            ]
        ]
    },
    {
        "id": "3e217512.758322",
        "type": "http in",
        "z": "9b447c3b.71a68",
        "name": "GET /api/user/:name",
        "url": "/api/user/:name",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "71345c29.81f41c"
            ]
        ]
    },
    {
        "id": "47b92dc9.a957a4",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "List of User Detail ",
        "func": "let file_content = msg.payload \nlet get_user = msg.get_user\nlet titles = flow.get(\"title\")\nlet names = []\n\nfile_content.forEach(function(i){\n    let name = Object.keys(i).map(function(e){return i[e]})[0]  \n    names.push(name)\n})\n\n//true/false\nlet already_exist = names.indexOf(get_user) > -1\n\nif(already_exist === true){\n    //[[\"Name\", \"key\", \"pin\",....], [\"wai\", \"1234\", ...]]\n    let title_and_data = []\n    \n    title_and_data.push(titles)\n    \n    file_content.forEach(function(i){\n        let name = Object.keys(i).map(function(e){return i[e]})[0]\n        let all_info = Object.keys(i).map(function(e){return i[e]})\n        if(name == get_user){\n            title_and_data.push(all_info)\n        }\n    })\n    //node.warn(title_and_data)\n    let obj = {}\n    \n    //loop through the array\n    for (var i = 0; i < title_and_data[0].length; i++){\n        //Name to Name ...\n        obj[title_and_data[0][i]] = title_and_data[1][i]\n    }\n    \n    msg.payload = obj\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "1d629a3e.760156"
            ]
        ]
    },
    {
        "id": "71345c29.81f41c",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "Get Username From URL",
        "func": "let user_name = msg.req.params.name\nmsg.get_user = user_name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "88d1f2f.820b79"
            ]
        ]
    },
    {
        "id": "1d629a3e.760156",
        "type": "switch",
        "z": "9b447c3b.71a68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "48dff24b.1767cc"
            ],
            [
                "5c8a071e.4634a8"
            ]
        ]
    },
    {
        "id": "d7fd9027.42da1",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1660,
        "y": 480,
        "wires": []
    },
    {
        "id": "5c8a071e.4634a8",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please provide valide data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 540,
        "wires": [
            [
                "15db4879.2e5fc8"
            ]
        ]
    },
    {
        "id": "15db4879.2e5fc8",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "501",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 1660,
        "y": 540,
        "wires": []
    },
    {
        "id": "48dff24b.1767cc",
        "type": "json",
        "z": "9b447c3b.71a68",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 1390,
        "y": 480,
        "wires": [
            [
                "d7fd9027.42da1"
            ]
        ]
    },
    {
        "id": "fe90cc5e.c885e",
        "type": "http in",
        "z": "9b447c3b.71a68",
        "name": "GET /api/user/:name/remove",
        "url": "/api/user/:name/remove",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 700,
        "wires": [
            [
                "90101825.27007"
            ]
        ]
    },
    {
        "id": "90101825.27007",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "Get Username From URL",
        "func": "let user_name = msg.req.params.name\nmsg.del_user = user_name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 700,
        "wires": [
            [
                "3e86f9e7.b49c86"
            ]
        ]
    },
    {
        "id": "3e86f9e7.b49c86",
        "type": "file in",
        "z": "9b447c3b.71a68",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 710,
        "y": 700,
        "wires": [
            [
                "18c427b4.c487a"
            ]
        ]
    },
    {
        "id": "18c427b4.c487a",
        "type": "csv",
        "z": "9b447c3b.71a68",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "x": 890,
        "y": 700,
        "wires": [
            [
                "d05ec48c.82d9f"
            ]
        ]
    },
    {
        "id": "d05ec48c.82d9f",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "List of User Detail ",
        "func": "let file_content = msg.payload \nlet del_user = msg.del_user\nlet titles = flow.get(\"title\")\nlet names = []\n\n\n\nfile_content.forEach(function(i){\n    let name = Object.keys(i).map(function(e){return i[e]})[0]  \n    names.push(name)\n})\n\n//true/false\nlet already_exist = names.indexOf(del_user) > -1\nnode.warn(already_exist)\n\nif(already_exist === true){\n    //[[\"Name\", \"key\", \"pin\",....], [\"wai\", \"1234\", ...]]\n    let title_and_data = []\n    \n    title_and_data.push(titles)\n    \n    file_content.forEach(function(i){\n        let name = Object.keys(i).map(function(e){return i[e]})[0]\n        let all_info = Object.keys(i).map(function(e){return i[e]})\n        if(name !== del_user){\n            title_and_data.push(all_info)\n        }\n    })\n    \n    msg.payload = title_and_data;\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 700,
        "wires": [
            [
                "9aff00ca.264b8"
            ]
        ]
    },
    {
        "id": "9aff00ca.264b8",
        "type": "switch",
        "z": "9b447c3b.71a68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 700,
        "wires": [
            [
                "8c062425.fa249",
                "ba0de9f3.1eefd",
                "4db789c5.b76078"
            ],
            [
                "92521473.526aa8"
            ]
        ]
    },
    {
        "id": "92521473.526aa8",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please provide valide data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 740,
        "wires": [
            [
                "953107d2.68d5f8"
            ]
        ]
    },
    {
        "id": "953107d2.68d5f8",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "501",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 1700,
        "y": 740,
        "wires": []
    },
    {
        "id": "ba0de9f3.1eefd",
        "type": "csv",
        "z": "9b447c3b.71a68",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "x": 1430,
        "y": 680,
        "wires": [
            [
                "3ce7169a.1b6c62"
            ]
        ]
    },
    {
        "id": "3ce7169a.1b6c62",
        "type": "file",
        "z": "9b447c3b.71a68",
        "name": "",
        "filename": "/data/ids.csv",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1630,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "8c062425.fa249",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "User has been removed",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 620,
        "wires": [
            [
                "f760c72e.66915"
            ]
        ]
    },
    {
        "id": "f760c72e.66915",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 1680,
        "y": 620,
        "wires": []
    },
    {
        "id": "862f0349.f7a25",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "here",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 880,
        "wires": [
            [
                "dd17cbca.b2967"
            ]
        ]
    },
    {
        "id": "9433405.b1fd14",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "there",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 820,
        "wires": [
            [
                "dd17cbca.b2967"
            ]
        ]
    },
    {
        "id": "dd17cbca.b2967",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1700,
        "y": 880,
        "wires": []
    },
    {
        "id": "d783e080.4c076",
        "type": "http in",
        "z": "9b447c3b.71a68",
        "name": "POST /api/user",
        "url": "/api/user",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "e537fade.8b9698",
                "4cbf2259.d3d384"
            ]
        ]
    },
    {
        "id": "e537fade.8b9698",
        "type": "json",
        "z": "9b447c3b.71a68",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 350,
        "y": 980,
        "wires": [
            [
                "4d280863.39319"
            ]
        ]
    },
    {
        "id": "4d280863.39319",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "Data Validation Check",
        "func": "let titles = flow.get(\"title\");\n//node.warn(\"titles are\" + titles)\nlet web = msg.payload\n//node.warn(\"incom\" + web)\nlet not_exact = true\n\nlet exit_check = []\ntitles.forEach(function(i){\n  exit_check.push(web.hasOwnProperty(i))\n})\n\n//node.warn(\"exist check \" + exit_check)\n\nnot_exact = exit_check.indexOf(false) > -1\n//true if not right\n//false if everything is right \n//node.warn(\"is anything is not exact \" + not_exact)\nlet result = []\n\nif(not_exact === false){\n    //everything is right \n    titles.forEach(function(i){\n        result.push(web[i])\n    })\n    msg.payload = result\n}\nelse{\n    //everything is not right \n    msg.payload = \"no\"\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 980,
        "wires": [
            [
                "f603cfbd.3ea168",
                "ba73e964.829f"
            ]
        ]
    },
    {
        "id": "f603cfbd.3ea168",
        "type": "switch",
        "z": "9b447c3b.71a68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 980,
        "wires": [
            [
                "184da95f.fbf16f"
            ],
            [
                "a8573962.dfdd7"
            ]
        ]
    },
    {
        "id": "a8573962.dfdd7",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please provide valide data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 1020,
        "wires": [
            [
                "9374f08f.4bb648"
            ]
        ]
    },
    {
        "id": "9374f08f.4bb648",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "501",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 1160,
        "y": 1020,
        "wires": []
    },
    {
        "id": "184da95f.fbf16f",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "Assign Form Data ",
        "func": "msg.user_detail = msg.payload;\nmsg.user = msg.payload[0];\nmsg.key = msg.payload[1]\nmsg.pin = msg.payload[2]\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 960,
        "wires": [
            [
                "d17f0824.b52d6",
                "99255560.2817f"
            ]
        ]
    },
    {
        "id": "d17f0824.b52d6",
        "type": "file in",
        "z": "9b447c3b.71a68",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 1170,
        "y": 960,
        "wires": [
            [
                "e5a9a9ee.00b3d8"
            ]
        ]
    },
    {
        "id": "e5a9a9ee.00b3d8",
        "type": "csv",
        "z": "9b447c3b.71a68",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "x": 1330,
        "y": 960,
        "wires": [
            [
                "369d506.b5ff3b"
            ]
        ]
    },
    {
        "id": "369d506.b5ff3b",
        "type": "function",
        "z": "9b447c3b.71a68",
        "name": "Duplication Check ",
        "func": "//msg.user_detail = msg.payload;\n//msg.user = msg.payload[0];\n//msg.key = msg.payload[1]\n//msg.pin = msg.payload[2]\n\nlet file_content = msg.payload\nlet set_user = msg.user\n//node.warn(set_user)\nlet set_key = msg.key\nlet set_pin = msg.pin\nlet set_detail = msg.user_detail\nmsg.payload = set_detail \nlet names = []\nlet keys = []\nlet pins = []\n\nfile_content.forEach(function(i){\n    let name = Object.keys(i).map(function(e){return i[e]})[0]\n    let key =  Object.keys(i).map(function(e){return i[e]})[1]\n    let pin =  Object.keys(i).map(function(e){return i[e]})[2]\n    \n    names.push(name)\n    keys.push(key)\n    pins.push(pin)\n}) \n\n//node.warn(names)\n//node.warn(keys)\n//node.warn(pins)\n\nlet already_user_exist = names.indexOf(set_user) > -1\nlet already_key_exist  = keys.indexOf(parseInt(set_key)) > -1\nlet already_pin_exist  = pins.indexOf(parseInt(set_pin)) > -1\n\n//node.warn(already_user_exist)\n//node.warn(already_key_exist)\n//node.warn(already_pin_exist)\n\nlet exist = [already_user_exist, already_key_exist, already_pin_exist].includes(true)\n\n//node.warn(exist)\n\nif(exist === true){\n    msg.payload = \"no\"\n}else{\n    msg.payload = \"yes\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1500,
        "y": 960,
        "wires": [
            [
                "c983068.7b2be78",
                "35818786.c66df8"
            ]
        ]
    },
    {
        "id": "35818786.c66df8",
        "type": "switch",
        "z": "9b447c3b.71a68",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "yes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1710,
        "y": 960,
        "wires": [
            [
                "d693d445.113f78",
                "713971a.bb16e1"
            ],
            [
                "b357788d.134f98"
            ]
        ]
    },
    {
        "id": "b357788d.134f98",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Try again, after changing Name or PIN or Key",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 1020,
        "wires": [
            [
                "41deeace.ce57c4"
            ]
        ]
    },
    {
        "id": "41deeace.ce57c4",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "501",
        "headers": {
            "content-type": "application/json"
        },
        "x": 2160,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d693d445.113f78",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "User is saved",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 900,
        "wires": [
            [
                "3a6c8ff1.f67988"
            ]
        ]
    },
    {
        "id": "3a6c8ff1.f67988",
        "type": "http response",
        "z": "9b447c3b.71a68",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 2180,
        "y": 900,
        "wires": []
    },
    {
        "id": "713971a.bb16e1",
        "type": "change",
        "z": "9b447c3b.71a68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user_detail",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1970,
        "y": 940,
        "wires": [
            [
                "e2b98510.9a10b"
            ]
        ]
    },
    {
        "id": "e2b98510.9a10b",
        "type": "csv",
        "z": "9b447c3b.71a68",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "x": 2170,
        "y": 940,
        "wires": [
            [
                "67ef8107.a2e5f"
            ]
        ]
    },
    {
        "id": "67ef8107.a2e5f",
        "type": "file",
        "z": "9b447c3b.71a68",
        "name": "",
        "filename": "/data/ids.csv",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 2330,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "c983068.7b2be78",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1190,
        "y": 820,
        "wires": []
    },
    {
        "id": "29b1fe3b.f63f2a",
        "type": "inject",
        "z": "9b447c3b.71a68",
        "name": "",
        "topic": "",
        "payload": "title",
        "payloadType": "flow",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 1420,
        "wires": [
            [
                "b81f1108.2bc1b8"
            ]
        ]
    },
    {
        "id": "b81f1108.2bc1b8",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 380,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f3bf44cd.cc9da",
        "type": "exec",
        "z": "9b447c3b.71a68",
        "command": "ls -la /data/ids.csv",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 1540,
        "wires": [
            [
                "13e01c67.79ba7c"
            ],
            [
                "13e01c67.79ba7c"
            ],
            [
                "13e01c67.79ba7c"
            ]
        ]
    },
    {
        "id": "91cd0d4c.bb9748",
        "type": "inject",
        "z": "9b447c3b.71a68",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 1560,
        "wires": [
            [
                "f3bf44cd.cc9da"
            ]
        ]
    },
    {
        "id": "13e01c67.79ba7c",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 660,
        "y": 1520,
        "wires": []
    },
    {
        "id": "aa9c1f77.bacd98",
        "type": "exec",
        "z": "9b447c3b.71a68",
        "command": "id -un",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 340,
        "y": 1660,
        "wires": [
            [
                "6c324279.3ab2e4"
            ],
            [
                "6c324279.3ab2e4"
            ],
            [
                "6c324279.3ab2e4"
            ]
        ]
    },
    {
        "id": "dbe4399a.ba06c",
        "type": "inject",
        "z": "9b447c3b.71a68",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 1680,
        "wires": [
            [
                "aa9c1f77.bacd98"
            ]
        ]
    },
    {
        "id": "6c324279.3ab2e4",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5f55bd1c.39041c",
        "type": "exec",
        "z": "9b447c3b.71a68",
        "command": "whoami",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 1760,
        "wires": [
            [
                "e2e76c06.79acd8"
            ],
            [
                "e2e76c06.79acd8"
            ],
            [
                "e2e76c06.79acd8"
            ]
        ]
    },
    {
        "id": "b4ee1204.b08138",
        "type": "inject",
        "z": "9b447c3b.71a68",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 1780,
        "wires": [
            [
                "5f55bd1c.39041c"
            ]
        ]
    },
    {
        "id": "e2e76c06.79acd8",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 1740,
        "wires": []
    },
    {
        "id": "31e8d318.5e7c2c",
        "type": "exec",
        "z": "9b447c3b.71a68",
        "command": "chown node-red /data/ids.csv",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 420,
        "y": 1860,
        "wires": [
            [
                "b91c7dc4.aa2c58"
            ],
            [
                "b91c7dc4.aa2c58"
            ],
            [
                "b91c7dc4.aa2c58"
            ]
        ]
    },
    {
        "id": "51f2e5ce.61420c",
        "type": "inject",
        "z": "9b447c3b.71a68",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 1860,
        "wires": [
            [
                "31e8d318.5e7c2c"
            ]
        ]
    },
    {
        "id": "b91c7dc4.aa2c58",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 760,
        "y": 1840,
        "wires": []
    },
    {
        "id": "4db789c5.b76078",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1150,
        "y": 600,
        "wires": []
    },
    {
        "id": "4cbf2259.d3d384",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 370,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ba73e964.829f",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 1100,
        "wires": []
    },
    {
        "id": "99255560.2817f",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1130,
        "y": 1120,
        "wires": []
    },
    {
        "id": "4b84ced4.d7a1c8",
        "type": "debug",
        "z": "9b447c3b.71a68",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1220,
        "y": 220,
        "wires": []
    },
    {
        "id": "237af388.00dcfc",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 320.5,
        "y": 1479.5,
        "wires": []
    },
    {
        "id": "44899bfb.59224c",
        "type": "ui_template",
        "z": "4812a125.a423e8",
        "group": "e61e4492.2b2d18",
        "name": "User List",
        "order": 0,
        "width": "0",
        "height": "0",
        "format": "<!--<div layout=\"row\" layout-align=\"start center\">\n  <span flex>Name</span>\n  <span flex>PIN</span>\n  <span flex>KEY</span>\n</div>\n<div layout=\"row\" layout-align=\"start center\" ng-repeat=\"i in msg.payload\">\n  <span flex style=\"color: green\">{{i.name}}</span>\n  <span flex style=\"color: red\">{{i.pin}}</span>\n  <span flex style=\"color: black\">{{i.key}}</span>\n  <br>\n<br>\n</div> -->\n <table style=\"width:100%; height:100%\">\n  <tr>\n    <th>Name</th>\n    <th>PIN</th>\n    <th>KEY</th>\n  </tr>\n  \n  <tr ng-repeat=\"i in msg.payload\">\n    <td>{{ i.name }}</td>\n    <td>{{ i.pin }}</td>\n    <td>{{ i.key }}</td>\n  </tr>\n</table>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 880,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "e2d03379.546b1",
        "type": "inject",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 2160,
        "wires": [
            [
                "9c2b2145.884688"
            ]
        ]
    },
    {
        "id": "9c2b2145.884688",
        "type": "http request",
        "z": "4812a125.a423e8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "localhost:1880/api/user",
        "tls": "",
        "x": 410,
        "y": 2080,
        "wires": [
            [
                "bc096ac1.0f984"
            ]
        ]
    },
    {
        "id": "f538af91.194488",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 2000,
        "wires": []
    },
    {
        "id": "bc096ac1.0f984",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Generate Data ",
        "func": "let users_detail = msg.payload\n\nlet user_data = {}\n\nusers_detail.forEach(function(i){\n    user_data[i.Name] = {\n        name: i.Name,\n        pin: i.pin,\n        key: i.key\n    }\n})\n\n\nmsg.payload = user_data\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 2080,
        "wires": [
            [
                "f538af91.194488",
                "44899bfb.59224c"
            ]
        ]
    },
    {
        "id": "7e5480d4.0580d8",
        "type": "mqtt in",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "user/reload",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 142,
        "y": 2080,
        "wires": [
            [
                "9c2b2145.884688"
            ]
        ]
    },
    {
        "id": "6149b2b1.7c969c",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "Register the current login user",
        "rules": [
            {
                "t": "set",
                "p": "current_user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 720,
        "wires": [
            [
                "116123e6.ee942c"
            ]
        ]
    },
    {
        "id": "6f514cd2.d555bc",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 490,
        "y": 1580,
        "wires": []
    },
    {
        "id": "7509c5b9.e6e5bc",
        "type": "function",
        "z": "4812a125.a423e8",
        "name": "Escape the login User",
        "func": "let curent_usr = flow.get(\"current_user\")\nlet list_of_users = msg.payload \n\n\nif(list_of_users.length === 0){\n    msg.payload = \"0\"\n}\n\n\nelse{\n    \n    let new_data = []\n    list_of_users.forEach(function(i){\n        \n        if(i.Name !== curent_usr){\n            new_data.push(i)\n        }\n        \n    /*    if(!i.Name.includes(\"admin\")){\n            new_data.push(i)\n        }\n    })*/\n    })\n    //msg.payload = raw\n    msg.payload = new_data\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 1680,
        "wires": [
            [
                "6debf853.95ee48",
                "e0783f1b.507ff"
            ]
        ]
    },
    {
        "id": "6debf853.95ee48",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 710,
        "y": 1580,
        "wires": []
    },
    {
        "id": "d6ce985a.632008",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 970,
        "y": 640,
        "wires": []
    },
    {
        "id": "116123e6.ee942c",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "Not inclue in list ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "user/reload",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 720,
        "wires": [
            [
                "50dec656.e53de8"
            ]
        ]
    },
    {
        "id": "50dec656.e53de8",
        "type": "mqtt out",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1870,
        "y": 720,
        "wires": []
    },
    {
        "id": "323f1ac3.5c710e",
        "type": "mqtt in",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "486317ee.d3442",
                "17f6138b.b48354"
            ]
        ]
    },
    {
        "id": "17f6138b.b48354",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "keypad_warning_stage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "486317ee.d3442",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 590,
        "y": 200,
        "wires": []
    },
    {
        "id": "fd6b3e9e.85b95",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 230,
        "y": 460,
        "wires": [
            [
                "a72bf2ea.1bb09"
            ]
        ]
    },
    {
        "id": "a72bf2ea.1bb09",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "property": "keypad_warning_stage",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "4cf4186.99f16e8"
            ],
            []
        ]
    },
    {
        "id": "20ce9fe7.e28c6",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "on",
        "info": "",
        "x": 410,
        "y": 400,
        "wires": []
    },
    {
        "id": "4cf4186.99f16e8",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Keypads Alert Trigger (on)",
        "func": "let active_key_pad = global.get('active_key_pad')\n//let active_key_pad = [\"door1\", \"door2\"]\n\nlet mqtt_topics = []\n\nif(active_key_pad.length > 0){\n    \n    //devices/door_controller/door1/cmd/tone -m \"1000\"\n    active_key_pad.forEach(function(i){\n        let dev_id = i\n        let set_topic = \"devices/door_controller/\"+dev_id+\"/cmd/tone\"\n        let payload = \"1000\"\n        \n        let cmd_obj = {}\n        cmd_obj['topic'] = set_topic\n        cmd_obj['payload'] = payload \n        \n        mqtt_topics.push(cmd_obj)\n        \n    })\n    \n}else{\n    msg.payload = \"no\"\n}\n\n\nif (mqtt_topics.length !== 0){\n   return [mqtt_topics]\n}\nelse{\n    msg.payload = \"no\"\n    return msg\n}\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 440,
        "wires": [
            [
                "d463beac.91adc8"
            ]
        ]
    },
    {
        "id": "e73023e1.49b268",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 360,
        "wires": []
    },
    {
        "id": "cdee23f1.65443",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Keypads Alert Trigger (off)",
        "func": "let active_key_pad = global.get('active_key_pad')\n//let active_key_pad = [\"door1\", \"door2\"]\n\nlet mqtt_topics = []\n\nif(active_key_pad.length > 0){\n    \n    //devices/door_controller/door1/cmd/tone -m \"1000\"\n    active_key_pad.forEach(function(i){\n        let dev_id = i\n        let set_topic = \"devices/door_controller/\"+dev_id+\"/cmd/tone\"\n        let payload = \"0\"\n        \n        let cmd_obj = {}\n        cmd_obj.topic = set_topic\n        cmd_obj.payload = payload \n        \n        mqtt_topics.push(cmd_obj)\n        \n    })\n    \n}else{\n    msg.payload = \"no\"\n}\n\n\nif (mqtt_topics.length !== 0){\n   return [mqtt_topics]\n}\nelse{\n    msg.payload = \"no\"\n    return msg\n}\n\n\n\n//return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 520,
        "wires": [
            [
                "1ed8dc04.6193bc"
            ]
        ]
    },
    {
        "id": "d463beac.91adc8",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 870,
        "y": 440,
        "wires": [
            [
                "e73023e1.49b268",
                "8d629fdc.d297d8"
            ]
        ]
    },
    {
        "id": "1ed8dc04.6193bc",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 870,
        "y": 520,
        "wires": [
            [
                "b03bae02.07e37",
                "dfd2a3b9.fa612"
            ]
        ]
    },
    {
        "id": "b03bae02.07e37",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 580,
        "wires": []
    },
    {
        "id": "8d629fdc.d297d8",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "devices/door_controller/{dev_id}/cmd/tone",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1170,
        "y": 440,
        "wires": []
    },
    {
        "id": "dfd2a3b9.fa612",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "devices/door_controller/{dev_id}/cmd/tone",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1170,
        "y": 520,
        "wires": []
    },
    {
        "id": "6336edf2.7929fc",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "on/off",
        "info": "",
        "x": 230,
        "y": 220,
        "wires": []
    },
    {
        "id": "5ff9f699.546638",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "off",
        "info": "",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "c2d9c5b5.a9f4c",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F1",
        "info": "",
        "x": 90,
        "y": 220,
        "wires": []
    },
    {
        "id": "af903239.614548",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F2",
        "info": "Read the incomming data from Security Internals flow and change the state to make warning song on keypads",
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "f4b2ad84.2ab008",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F4",
        "info": "Send command to all MCU to generate warning song ",
        "x": 650,
        "y": 380,
        "wires": []
    },
    {
        "id": "229ecbc1.945f44",
        "type": "mqtt in",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/door_controller/+/event/keypad-data",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 190,
        "y": 860,
        "wires": [
            [
                "27b8be7b.69911a"
            ]
        ]
    },
    {
        "id": "6870bf84.1665b8",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 780,
        "wires": []
    },
    {
        "id": "27b8be7b.69911a",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "dev_location, type_in_key",
        "func": "let key_pad_id = msg.topic.split(\"/\")[2]\nlet input_key = msg.payload\n\n//keypad id\nmsg.dev_location = key_pad_id\nmsg.type_in_key = input_key\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 860,
        "wires": [
            [
                "6870bf84.1665b8",
                "fff73661.8ec9f8",
                "833b455.0370eb8"
            ]
        ]
    },
    {
        "id": "fff73661.8ec9f8",
        "type": "file in",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "filename": "/data/ids.csv",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 830,
        "y": 860,
        "wires": [
            [
                "9b8dc00b.51b948"
            ]
        ]
    },
    {
        "id": "9b8dc00b.51b948",
        "type": "csv",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "1",
        "x": 990,
        "y": 860,
        "wires": [
            [
                "ed50eeb9.e9d0c"
            ]
        ]
    },
    {
        "id": "ed50eeb9.e9d0c",
        "type": "json",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1150,
        "y": 860,
        "wires": [
            [
                "54e8d081.0ef5a8"
            ]
        ]
    },
    {
        "id": "54e8d081.0ef5a8",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Authenticate ",
        "func": "let raw = msg.payload\n//generated in previous four nodes\nlet current_user_key = msg['type_in_key']\n\nlet names = []\nlet keys = []\n\n\nraw.forEach(function(key, i){\n    //turn array of arrays to array of objects \n    //[ [ wai, active ....], [ john, ... ] ]\n    //[ {col1: wai, col2: \"active\"} , {...} ]\n    let tmp2 = Object.keys(key).map(function(e){return key[e]})\n    \n    \n    tmp2.forEach(function(value, j){\n        //first one is name, so put it in name array\n\t\tif(j === 0) { names.push(value); }\n\t\t//second and third is key and pin\n\t\telse if(j > 0 && j < 3) { \n            let tmp = String(value) + \":\" + String(i)\n\t\t\tkeys.push(tmp);  \n\t\t}\n\t\t//else do nothing\n\t\telse {;;}\n\t})\n})\n\nlet foundat = []\n\nkeys.forEach(function(value){\n    let pass = value.split(\":\")[0]\n    let id = value.split(\":\")[1]\n    if(pass == current_user_key){\n        foundat.push(id)\n    }\n})\n\nlet final = undefined\nif(foundat.length > 0){\n    final = names[foundat[0]]\n}\nelse{\n    final = \"no\"\n}\n\nmsg.payload = final\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 860,
        "wires": [
            [
                "b2bb4ed3.e383a8",
                "1f5fdf56.184cb1"
            ]
        ]
    },
    {
        "id": "b2bb4ed3.e383a8",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1490,
        "y": 800,
        "wires": []
    },
    {
        "id": "1f5fdf56.184cb1",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 110,
        "y": 1220,
        "wires": [
            [
                "508efee5.85d7d"
            ],
            [
                "6b91a611.8b6ec"
            ]
        ]
    },
    {
        "id": "6795618.70475a",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "unauthorised",
        "info": "",
        "x": 130,
        "y": 1160,
        "wires": []
    },
    {
        "id": "2e8eda4b.4afb7e",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "authorised",
        "info": "",
        "x": 100,
        "y": 1260,
        "wires": []
    },
    {
        "id": "34658b57.3fb3ec",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Register the invalid time",
        "func": "let key_pad = msg.dev_location\nlet invalid_trigger = flow.get('invalid_trigger') \n\nlet now = new Date()\n\nif(invalid_trigger === undefined){\n    let tmp_object = {}\n    let invalid_time = 1;\n    let last_time = now\n    tmp_object[key_pad] = {\"invalid_time\" : invalid_time, \"last_time\" : now}\n    flow.set(\"invalid_trigger\", tmp_object)\n}else{\n    \n    if(invalid_trigger[key_pad] === undefined){\n        //let tmp_object = {}\n        let invalid_time = 1;\n        let last_time = now\n        invalid_trigger[key_pad] = {\"invalid_time\" : invalid_time, \"last_time\" : now} \n        flow.set(\"invalid_trigger\", invalid_trigger)\n    }\n    else{\n        let invalid_time = invalid_trigger[key_pad]['invalid_time'] + 1\n        let last_time = invalid_trigger[key_pad]['last_time']\n        invalid_trigger[key_pad] = {\"invalid_time\" : invalid_time, \"last_time\" : last_time}\n        //invalid_trigger[key_pad] = {\"invalid_time\" : invalid_time}\n        flow.set(\"invalid_trigger\", invalid_trigger)\n    }\n}\n  \n  msg.result = flow.get(\"invalid_trigger\")[key_pad]\n\n//msg.payload = {String(key_pad) : flow.get(\"invalid_trigger\")[key_pad] }   \n//msg.payload = flow.get(\"invalid_trigger\")\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 1200,
        "wires": [
            [
                "ea71e9f.2f04918"
            ]
        ]
    },
    {
        "id": "edd60ba7.9daa68",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "delete all",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 1740,
        "wires": [
            [
                "eadd5dd.60f652"
            ]
        ]
    },
    {
        "id": "eadd5dd.60f652",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "invalid_trigger",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "eddbc5c1.b20738",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "add other",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 1840,
        "wires": [
            [
                "cbe41a37.2b67d8"
            ]
        ]
    },
    {
        "id": "cbe41a37.2b67d8",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Add another kepad",
        "func": "let invalid_trigger = flow.get(\"invalid_trigger\")\n\nif(invalid_trigger === undefined){\n    let tmp_object = {}\n    let invalid_time = 1;\n    let last_time = new Date();\n    tmp_object['door_2'] = {\"invalid_time\" : invalid_time, \"last_time\" : last_time}\n    flow.set(\"invalid_trigger\", tmp_object)\n}else{\n    let invalid_time = 1;\n    let last_time = new Date();\n    invalid_trigger['door_2'] = {\"invalid_time\" : invalid_time, \"last_time\" : last_time}\n    flow.set(\"invalid_trigger\", invalid_trigger)\n}\nmsg.payload = flow.get(\"invalid_trigger\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 1840,
        "wires": [
            [
                "be6fc7a4.a364b8"
            ]
        ]
    },
    {
        "id": "be6fc7a4.a364b8",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 830,
        "y": 1840,
        "wires": []
    },
    {
        "id": "5d7cf038.ed055",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "invalid_trigger",
        "payloadType": "flow",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 270,
        "y": 1920,
        "wires": [
            [
                "b82229ce.0eeea"
            ]
        ]
    },
    {
        "id": "af45df4f.7f7528",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 1900,
        "wires": []
    },
    {
        "id": "ea71e9f.2f04918",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Calculate the time",
        "func": "let location = msg.dev_location\nlet number_of_entry = flow.get(\"invalid_trigger\")[location]['invalid_time']\nlet last_time = flow.get(\"invalid_trigger\")[location]['last_time']\n\n//let now = new Date();\n//let then = last_time;\n//let seconds = Math.floor((now - (then))/1000);\n\nlet now = new Date()\nlet then = last_time\nlet seconds = Math.floor((now - (then))/1000);\nlet minutes = Math.floor(seconds/60);\nlet hours = Math.floor(minutes/60);\nlet days = Math.floor(hours/24);\n        \nhours = hours-(days*24);\nminutes = minutes-(days*24*60)-(hours*60);\nseconds = seconds-(days*24*60*60)-(hours*60*60)-(minutes*60);\n\n\nlet time_exceed = false\n\nif(seconds <= 60){\n    time_exceed = false\n}else{\n    time_exceed = true\n}\n\nif(number_of_entry > 3 && time_exceed == false){\n    //trigger \n    msg.payload = 1\n    let records = flow.get(\"invalid_trigger\")\n    records[location]['invalid_time'] = 0;\n    records[location]['last_time'] = new Date();\n    //go back to 0\n}else if(number_of_entry > 3 && time_exceed == true){\n    //go back to one \n    //update time\n     let records = flow.get(\"invalid_trigger\")\n    records[location]['invalid_time'] = 1;\n    records[location]['last_time'] = new Date();\n    msg.payload = 0\n}else{\n    msg.payload = 0\n}\n\nreturn msg;\n\n//more than 3 , within 5 minutes\n    //go back to 0 \n    //trigger alert \n//more than 3 , not within 5 minutes\n    //go back to 1 \n    //update the time\n//less then 3\n    //do nothing \n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 1199,
        "wires": [
            [
                "bf4a3909.095c1"
            ]
        ]
    },
    {
        "id": "c9193374.ff43c8",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "set empty",
        "rules": [
            {
                "t": "set",
                "p": "current",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "edacf387.dcee58",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 240,
        "y": 2000,
        "wires": [
            [
                "c9193374.ff43c8"
            ]
        ]
    },
    {
        "id": "727030cd.b7fd48",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/keypad/invalid/advertise",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1200,
        "y": 1200,
        "wires": []
    },
    {
        "id": "bf4a3909.095c1",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1200,
        "wires": [
            [
                "727030cd.b7fd48",
                "82adfc2f.4346b8"
            ]
        ]
    },
    {
        "id": "6b91a611.8b6ec",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "warning/no warning",
        "property": "security_warning",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 1380,
        "wires": [
            [
                "b6b18486.d45b6",
                "c3f9702d.b06168"
            ],
            [
                "31b218e9.58ef1"
            ]
        ]
    },
    {
        "id": "31b218e9.58ef1",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "alert/no alert",
        "property": "security_alert",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 1460,
        "wires": [
            [
                "b6b18486.d45b6"
            ],
            [
                "e60e024b.afda3",
                "f2858249.6b38c"
            ]
        ]
    },
    {
        "id": "b6b18486.d45b6",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "unarm and turn off the siren",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "security_armed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 1360,
        "wires": [
            [
                "1cf566bc.2c6551",
                "2304efbd.c8d468"
            ]
        ]
    },
    {
        "id": "1cf566bc.2c6551",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1420,
        "y": 1320,
        "wires": []
    },
    {
        "id": "2304efbd.c8d468",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1390,
        "y": 1360,
        "wires": []
    },
    {
        "id": "e1187fb7.d47108",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1450,
        "y": 1440,
        "wires": []
    },
    {
        "id": "a050818e.ccf71",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1330,
        "y": 1500,
        "wires": []
    },
    {
        "id": "e60e024b.afda3",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Command to unlock the door",
        "func": "let door_id = msg.dev_location\nmsg.topic = \"devices/door_controller/\"+door_id+\"/cmd/unlock\"\nmsg.payload = \"3\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1500,
        "wires": [
            [
                "e1187fb7.d47108",
                "a050818e.ccf71"
            ]
        ]
    },
    {
        "id": "82adfc2f.4346b8",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1170,
        "y": 1140,
        "wires": []
    },
    {
        "id": "c10b5067.9c4df",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Testing",
        "info": "",
        "x": 250,
        "y": 1640,
        "wires": []
    },
    {
        "id": "24147168.5ddc26",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Intensionally remove the link ",
        "info": "",
        "x": 540,
        "y": 560,
        "wires": []
    },
    {
        "id": "e88dfbcb.607728",
        "type": "mqtt in",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/motion_sensor/#",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "12b22e56.e4d402",
                "708a6d5d.f7d2ac"
            ]
        ]
    },
    {
        "id": "428ec435.e3c0a4",
        "type": "mqtt in",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/door_sensor/#",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "12b22e56.e4d402",
                "708a6d5d.f7d2ac"
            ]
        ]
    },
    {
        "id": "708a6d5d.f7d2ac",
        "type": "function",
        "z": "569abad5.44f7ec",
        "name": "Get location(Zone) where event triggered",
        "func": "//devices/door_sensor/reception/event/open\nlet incoming_topic = msg.topic\n//[devices, door_sensor,roller,event, open]\nlet topic_detail = incoming_topic.split(\"/\")\n//door_sensor to door\nlet sensor_type = topic_detail[1].split(\"_\")[0]\n//reception\nlet sensor_location = topic_detail[2]\n\nlet data = {}\ndata['type'] = sensor_type//.split(\"_\")[0]\ndata['location'] = sensor_location\n\nlet sensor_info = global.get(\"radios\")\nlet ids = Object.keys(sensor_info)\n\nids.forEach(function(i){\n    let i_type = sensor_info[i][\"type\"]\n    let i_location = sensor_info[i]['location']\n    let i_zone = sensor_info[i]['zone']\n    \n    if(i_type == sensor_type && i_location == sensor_location){\n        data['zone'] = i_zone\n    }\n})\n\n//{type: \"door\", \"location\" : \"xxx\", \"zone\" : 1 }\n//{type: \"motion\", \"location\" : \"xxx\", \"zone\" : 2 }\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 420,
        "wires": [
            [
                "941704fd.836e3"
            ]
        ]
    },
    {
        "id": "31b6181c.69d148",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "{type: \"door\", \"location\" : \"xxx\", \"zone\" : 1 }",
        "info": "",
        "x": 460,
        "y": 380,
        "wires": []
    },
    {
        "id": "941704fd.836e3",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is armed?",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 720,
        "y": 420,
        "wires": [
            [
                "9393e617.511e8"
            ]
        ]
    },
    {
        "id": "9393e617.511e8",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is warning",
        "property": "security_warning",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 420,
        "wires": [
            [],
            [
                "eb0f434c.d67b",
                "f7fa1bbc.1ab46"
            ]
        ]
    },
    {
        "id": "7de53f8d.d41d88",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "true/false",
        "info": "",
        "x": 920,
        "y": 380,
        "wires": []
    },
    {
        "id": "f7fa1bbc.1ab46",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1180,
        "y": 460,
        "wires": []
    },
    {
        "id": "451dd434.970fd4",
        "type": "mqtt in",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/warning",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "6e773012.c1db78"
            ]
        ]
    },
    {
        "id": "6e773012.c1db78",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is armed?",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 720,
        "wires": [
            [
                "5b095659.8fe8b8",
                "c128fab1.5730e8"
            ],
            [
                "a2a4f10e.101f98",
                "1812260f.87e572"
            ]
        ]
    },
    {
        "id": "584e118.1f0a87",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is alert",
        "property": "security_alert",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 720,
        "wires": [
            [],
            [
                "4975e33b.f72c9c",
                "f33473c8.e5e83",
                "ca00dc2c.358be",
                "882d37b0.96829"
            ]
        ]
    },
    {
        "id": "252b20ac.a16",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "true ",
        "info": "",
        "x": 1030,
        "y": 680,
        "wires": []
    },
    {
        "id": "eb0f434c.d67b",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_warning = true",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4975e33b.f72c9c",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_alert = true",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "f33473c8.e5e83",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/alert",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1290,
        "y": 720,
        "wires": []
    },
    {
        "id": "599c32b.2b7da4c",
        "type": "mqtt in",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/alert",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 150,
        "y": 1040,
        "wires": [
            [
                "c322ed68.aac428"
            ]
        ]
    },
    {
        "id": "f6535c71.528d18",
        "type": "delay",
        "z": "569abad5.44f7ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 500,
        "y": 1060,
        "wires": [
            [
                "45a0c4e7.19ef3c"
            ]
        ]
    },
    {
        "id": "45a0c4e7.19ef3c",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "set payload = off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1060,
        "wires": [
            [
                "2f7ae8dd.e8ae68",
                "d5a9c9a5.6944c",
                "f001ebd.96d7098"
            ]
        ]
    },
    {
        "id": "78b8d6a.48b94a8",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1080,
        "y": 960,
        "wires": []
    },
    {
        "id": "2f7ae8dd.e8ae68",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1120,
        "y": 1040,
        "wires": []
    },
    {
        "id": "d5a9c9a5.6944c",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_warning = false",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "f001ebd.96d7098",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_alert = false",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "882d37b0.96829",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_warning = false",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "575d0065.f1309",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "set payload = on",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 960,
        "wires": [
            [
                "78b8d6a.48b94a8"
            ]
        ]
    },
    {
        "id": "a4598242.b491a",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "Activate Camera",
        "info": "",
        "x": 160,
        "y": 800,
        "wires": []
    },
    {
        "id": "97f174.d475369",
        "type": "delay",
        "z": "569abad5.44f7ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 860,
        "y": 660,
        "wires": [
            [
                "584e118.1f0a87"
            ]
        ]
    },
    {
        "id": "3dfc40c6.dc6be8",
        "type": "delay",
        "z": "569abad5.44f7ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 860,
        "y": 820,
        "wires": [
            [
                "584e118.1f0a87"
            ]
        ]
    },
    {
        "id": "f405c0a3.0af4c8",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 950,
        "y": 600,
        "wires": []
    },
    {
        "id": "5b095659.8fe8b8",
        "type": "function",
        "z": "569abad5.44f7ec",
        "name": "turn on keypad warning",
        "func": "let trigger_detail = JSON.parse(msg.payload)\nmsg.trigger_detail = trigger_detail\nmsg.payload = \"on\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 600,
        "wires": [
            [
                "f405c0a3.0af4c8"
            ]
        ]
    },
    {
        "id": "19a39a27.7e91a6",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1610,
        "y": 780,
        "wires": []
    },
    {
        "id": "ca00dc2c.358be",
        "type": "function",
        "z": "569abad5.44f7ec",
        "name": "turn off keypad warning",
        "func": "//let trigger_detail = JSON.parse(msg.payload)\n//msg.trigger_detail = trigger_detail\nmsg.payload = \"off\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1330,
        "y": 780,
        "wires": [
            [
                "19a39a27.7e91a6"
            ]
        ]
    },
    {
        "id": "c128fab1.5730e8",
        "type": "function",
        "z": "569abad5.44f7ec",
        "name": "Zone 1 or 2",
        "func": "let trigger_detail = JSON.parse(msg.payload)\n//msg.trigger_detail = trigger_detail\nlet zone = trigger_detail.zone\nmsg.payload = zone\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 740,
        "wires": [
            [
                "47fb4112.2eb12"
            ]
        ]
    },
    {
        "id": "dfebf7a6.59c97",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "\"1\" or \"2\"",
        "info": "",
        "x": 540,
        "y": 780,
        "wires": []
    },
    {
        "id": "47fb4112.2eb12",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 740,
        "wires": [
            [
                "97f174.d475369"
            ],
            [
                "3dfc40c6.dc6be8"
            ]
        ]
    },
    {
        "id": "37348eca.ae4872",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "Send Pushover",
        "info": "",
        "x": 160,
        "y": 980,
        "wires": []
    },
    {
        "id": "560cb1eb.8075a8",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "\"1\" ",
        "info": "",
        "x": 710,
        "y": 700,
        "wires": []
    },
    {
        "id": "e298a82a.68ef48",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "\"2\"",
        "info": "",
        "x": 710,
        "y": 800,
        "wires": []
    },
    {
        "id": "856637c9.4c4cb",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": " false",
        "info": "",
        "x": 1030,
        "y": 760,
        "wires": []
    },
    {
        "id": "3b1ec8d9.a3913",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "please keep looking the next node in the down below",
        "info": "",
        "x": 1380,
        "y": 520,
        "wires": []
    },
    {
        "id": "b66021c5.ee92d",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "please keep looking the next node in the down below",
        "info": "",
        "x": 1380,
        "y": 840,
        "wires": []
    },
    {
        "id": "e618da3.987d1a8",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F5",
        "info": "Send message to a MQTT channel to command for generating warning on each and every keypad   ",
        "x": 630,
        "y": 560,
        "wires": []
    },
    {
        "id": "3376e166.b8e5b6",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F5",
        "info": "",
        "x": 910,
        "y": 900,
        "wires": []
    },
    {
        "id": "31a544e9.f8d4bc",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is armed?",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 1580,
        "wires": [
            [
                "ae0a2935.928da"
            ],
            [
                "f0f67ec5.6a4e3",
                "dd44a37f.4cc7c8"
            ]
        ]
    },
    {
        "id": "ae0a2935.928da",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is warning",
        "property": "security_warning",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 1580,
        "wires": [
            [],
            [
                "e8a81b60.e5e8f8",
                "9e54fcee.f4c52"
            ]
        ]
    },
    {
        "id": "e8a81b60.e5e8f8",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_warning = true",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "9e54fcee.f4c52",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/key/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 940,
        "y": 1620,
        "wires": []
    },
    {
        "id": "c39f0447.0074f8",
        "type": "mqtt in",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/key/warning",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 270,
        "y": 1860,
        "wires": [
            [
                "acb4f7dc.40c6d8",
                "eca5754e.b5e6f"
            ]
        ]
    },
    {
        "id": "acb4f7dc.40c6d8",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is armed?",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 1840,
        "wires": [
            [
                "4689bacc.28b724",
                "a7de313e.38569"
            ],
            [
                "48030fc9.06025",
                "2808ec4c.8985cc"
            ]
        ]
    },
    {
        "id": "4689bacc.28b724",
        "type": "function",
        "z": "569abad5.44f7ec",
        "name": "turn on keypad warning",
        "func": "let trigger_detail = JSON.parse(msg.payload)\nmsg.trigger_detail = trigger_detail\nmsg.payload = \"on\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 1720,
        "wires": [
            [
                "8a64d606.c27958"
            ]
        ]
    },
    {
        "id": "8a64d606.c27958",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1050,
        "y": 1720,
        "wires": []
    },
    {
        "id": "a7de313e.38569",
        "type": "delay",
        "z": "569abad5.44f7ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 781,
        "y": 1833,
        "wires": [
            [
                "67a7abe4.a148fc"
            ]
        ]
    },
    {
        "id": "67a7abe4.a148fc",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is alert",
        "property": "security_alert",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 1840,
        "wires": [
            [],
            [
                "84eebbcf.7defb8",
                "bdb0131e.21a8d8",
                "51196480.8d416c",
                "1cd0d532.1eeb9b"
            ]
        ]
    },
    {
        "id": "1cd0d532.1eeb9b",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_warning = false",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 1780,
        "wires": [
            []
        ]
    },
    {
        "id": "84eebbcf.7defb8",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_alert = true",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "bdb0131e.21a8d8",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/key/alert",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1370,
        "y": 1880,
        "wires": []
    },
    {
        "id": "51196480.8d416c",
        "type": "function",
        "z": "569abad5.44f7ec",
        "name": "turn off keypad warning",
        "func": "//let trigger_detail = JSON.parse(msg.payload)\n//msg.trigger_detail = trigger_detail\nmsg.payload = \"off\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 1940,
        "wires": [
            [
                "e1a4aa02.48719"
            ]
        ]
    },
    {
        "id": "e1a4aa02.48719",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1670,
        "y": 1940,
        "wires": []
    },
    {
        "id": "5193051e.4f7a64",
        "type": "mqtt in",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "security/key/alert",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 260,
        "y": 2140,
        "wires": [
            [
                "4834a36a.4471e4",
                "50162713.c27048"
            ]
        ]
    },
    {
        "id": "72319e94.3a779",
        "type": "delay",
        "z": "569abad5.44f7ec",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 620,
        "y": 2140,
        "wires": [
            [
                "9456d0c6.47ad1"
            ]
        ]
    },
    {
        "id": "70f62c7e.56c284",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "set payload = on",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2020,
        "wires": [
            [
                "64586cd4.f09484"
            ]
        ]
    },
    {
        "id": "9456d0c6.47ad1",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "set payload = off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2140,
        "wires": [
            [
                "363f01f3.d5d85e",
                "f24ab7bb.3428d8",
                "2df54cbd.0b8dcc"
            ]
        ]
    },
    {
        "id": "64586cd4.f09484",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1180,
        "y": 2020,
        "wires": []
    },
    {
        "id": "363f01f3.d5d85e",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1180,
        "y": 2140,
        "wires": []
    },
    {
        "id": "2df54cbd.0b8dcc",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_alert = false",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "f24ab7bb.3428d8",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "G security_warning = false",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 2300,
        "wires": [
            []
        ]
    },
    {
        "id": "26ea7dec.2f2b82",
        "type": "mqtt in",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/keypad/invalid/advertise",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 210,
        "y": 1580,
        "wires": [
            [
                "31a544e9.f8d4bc",
                "44430ae9.375b6c"
            ]
        ]
    },
    {
        "id": "17e10d26.218acb",
        "type": "debug",
        "z": "569abad5.44f7ec",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 729,
        "y": 1487,
        "wires": []
    },
    {
        "id": "eca5754e.b5e6f",
        "type": "debug",
        "z": "569abad5.44f7ec",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4834a36a.4471e4",
        "type": "debug",
        "z": "569abad5.44f7ec",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 410,
        "y": 2000,
        "wires": []
    },
    {
        "id": "c322ed68.aac428",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is armed?",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "f6535c71.528d18",
                "575d0065.f1309"
            ],
            [
                "fd039a43.87d84",
                "db31368c.375968"
            ]
        ]
    },
    {
        "id": "50162713.c27048",
        "type": "switch",
        "z": "569abad5.44f7ec",
        "name": "is armed?",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 440,
        "y": 2140,
        "wires": [
            [
                "70f62c7e.56c284",
                "72319e94.3a779"
            ],
            [
                "cb4de22a.8fb6c",
                "88160326.e3bab"
            ]
        ]
    },
    {
        "id": "38a8ea81.528d86",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "F2",
        "info": "Read the file and pass the content of the file to following nodes",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "721896a5.567cb",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "F3",
        "info": "Convert JSON string to JS object format\n\nJSON --> JS Object\n\nThe output can be see in Out1",
        "x": 1170,
        "y": 240,
        "wires": []
    },
    {
        "id": "f8972027.6350a8",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "Out1",
        "info": "",
        "x": 230,
        "y": 440,
        "wires": []
    },
    {
        "id": "12fd1e53.afe012",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "Out2",
        "info": "",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "2de12f88.01ba9",
        "type": "comment",
        "z": "58f3987.97a1268",
        "name": "Out3",
        "info": "Can check whether the system is armed or not",
        "x": 950,
        "y": 620,
        "wires": []
    },
    {
        "id": "5114e30e.664e64",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F1",
        "info": "Read the incomming data from \"Motion/Door Events\" flow \n**Please look f1 to f4 in \"Motion/Door Events\" flow \n\n",
        "x": 230,
        "y": 260,
        "wires": []
    },
    {
        "id": "f8627396.44e058",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F2",
        "info": "Based on the incomming data from F2 node,\ngenerate object to indicate the type of the sensor, the location and the zone where\nevent is happening\n\n{type: \"door\", \"location\" : \"xxx\", \"zone\" : 1 }",
        "x": 570,
        "y": 340,
        "wires": []
    },
    {
        "id": "ee0a742e.07f54",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F3",
        "info": "Is the system is armed?\nif so, keep going.\nif not, stop in here",
        "x": 730,
        "y": 380,
        "wires": []
    },
    {
        "id": "11060f38.7f7841",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F4",
        "info": "To get into next step plus trigger the cameras to record the video",
        "x": 1350,
        "y": 460,
        "wires": []
    },
    {
        "id": "ceb47668.c7b648",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F5",
        "info": "To make decision which flow to go based on the data getting from F2",
        "x": 550,
        "y": 700,
        "wires": []
    },
    {
        "id": "98a90c76.0256b",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F6",
        "info": "Send message to a MQTT channel to command for stop the warning on each and every keypad   ",
        "x": 1550,
        "y": 740,
        "wires": []
    },
    {
        "id": "87a03542.4026",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F7",
        "info": "To get into next step plus trigger the cameras to take picture and send message to users",
        "x": 1430,
        "y": 720,
        "wires": []
    },
    {
        "id": "c926af88.16c538",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F8",
        "info": "Send message to a MQTT channel to command for generating siren",
        "x": 670,
        "y": 920,
        "wires": []
    },
    {
        "id": "21713132.044fee",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F9",
        "info": "Send message to a MQTT channel to command for turnoff siren",
        "x": 790,
        "y": 1020,
        "wires": []
    },
    {
        "id": "965ec089.740ab8",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F10",
        "info": "Read the incomming data from \"Keypad Control\" flow \n\n\n",
        "x": 190,
        "y": 1500,
        "wires": []
    },
    {
        "id": "1bd4ce7e.7a00ea",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F11",
        "info": "To get into next step plus trigger the cameras to record the video\n\nGo to next node and video recording flow",
        "x": 1150,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4bd8ac31.127ad4",
        "type": "mqtt in",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "topic": "security/key/warning",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "7d96dcb5.b4aefc"
            ]
        ]
    },
    {
        "id": "8d54ac2b.475ef",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F12",
        "info": "Send message to a MQTT channel to command for generating warning on each and every keypad   ",
        "x": 630,
        "y": 1660,
        "wires": []
    },
    {
        "id": "3704db3a.9d5cfc",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F14",
        "info": "Send message to a MQTT channel to command for stop the warning on each and every keypad   ",
        "x": 1630,
        "y": 1900,
        "wires": []
    },
    {
        "id": "c1892ad9.2f6f4",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F13",
        "info": "To get into next step plus trigger the cameras to take picture and send message to users",
        "x": 1550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "51cc703.a9df61",
        "type": "mqtt in",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "topic": "security/key/alert",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 100,
        "y": 320,
        "wires": [
            [
                "e268d5dd.a11a58"
            ]
        ]
    },
    {
        "id": "e55cd8f6.4c58a",
        "type": "comment",
        "z": "ba2ccab8.e0ab4",
        "name": "Outgoing",
        "info": "Security Internals ",
        "x": 1140,
        "y": 160,
        "wires": []
    },
    {
        "id": "5c709418.57f094",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "Incoming",
        "info": "Motions/Doors Event",
        "x": 1280,
        "y": 60,
        "wires": []
    },
    {
        "id": "23c2b3d.9eaf84c",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "Outgoing",
        "info": "Keypad Control\nVideo Recording\nMessaging\n",
        "x": 1280,
        "y": 120,
        "wires": []
    },
    {
        "id": "9a8033e4.c1e0c",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Incoming",
        "info": "Secrity Internals\nMCU (Microcontroller)",
        "x": 1160,
        "y": 120,
        "wires": []
    },
    {
        "id": "fb3ce174.45ece8",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Outgoing",
        "info": "Microcontroller (MCY)\nSecurity Internals\nSiren Control\nBy it self",
        "x": 1160,
        "y": 200,
        "wires": []
    },
    {
        "id": "de99e623.b76b8",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "From Security Internals",
        "info": "",
        "x": 400,
        "y": 220,
        "wires": []
    },
    {
        "id": "9f8873bd.84dcc",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "To Keypad",
        "info": "",
        "x": 1400,
        "y": 480,
        "wires": []
    },
    {
        "id": "6dfcd837.d7f9f8",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "From MCU",
        "info": "",
        "x": 120,
        "y": 820,
        "wires": []
    },
    {
        "id": "f0f668c3.e0c1e",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "To Security Internals",
        "info": "",
        "x": 1370,
        "y": 1160,
        "wires": []
    },
    {
        "id": "4420f023.bca1f8",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "To Internal",
        "info": "",
        "x": 1580,
        "y": 1360,
        "wires": []
    },
    {
        "id": "b28c2bea.280e68",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "To Siren Control",
        "info": "",
        "x": 1660,
        "y": 1320,
        "wires": []
    },
    {
        "id": "5f31f54e.776b2c",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "To Keypad",
        "info": "",
        "x": 1460,
        "y": 1500,
        "wires": []
    },
    {
        "id": "f6c715e8.d6f8f",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F5",
        "info": "Seperate the user pressed pin and location of keypad",
        "x": 510,
        "y": 800,
        "wires": []
    },
    {
        "id": "f1e9a387.e1df68",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F6",
        "info": "Check whether the incomming key is already registered or associate to a user or not",
        "x": 1330,
        "y": 820,
        "wires": []
    },
    {
        "id": "ee35ef31.bb2318",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F7",
        "info": "Assume malicious user or theft is trying to get into the parameter by guessing the authorised key\n\nRecord how many times they are trying in a defined period (example 5 minutes)\n\nEvery time incorrect pin is given, it is record in flow variable (invalid_trigger)",
        "x": 510,
        "y": 1160,
        "wires": []
    },
    {
        "id": "35d9784b.32cbf8",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F8",
        "info": "Check whether someone is guessing the entry code to more than 3 times within 5 minutes",
        "x": 730,
        "y": 1160,
        "wires": []
    },
    {
        "id": "beb6f8f9.3d027",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F9",
        "info": "Assume authorised user is entering correct key, to control the security system (turn off\nthe siren and keypad warning) or unlock the key",
        "x": 430,
        "y": 1280,
        "wires": []
    },
    {
        "id": "e2e71e1d.4367b8",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F10",
        "info": "It is in the middle of warning or alert stage, so it will command to unarm the system",
        "x": 970,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9f16b29c.2fa76",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "F11",
        "info": "It is not in the middle of warning or alert stage, so it will command to unlock the key",
        "x": 990,
        "y": 1460,
        "wires": []
    },
    {
        "id": "ac5a3471.bb4bd8",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "Incoming",
        "info": "Secrity Internals\n",
        "x": 1080,
        "y": 40,
        "wires": []
    },
    {
        "id": "5c769e57.dd30d8",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "F3",
        "info": "Generate URLs these can be used to take picture from cameras and send it to MQTT.\nA python script wiill received these message and send the picture to pushover ",
        "x": 850,
        "y": 180,
        "wires": []
    },
    {
        "id": "6bf3e5dc.84f354",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Incoming",
        "info": "Secrity Internals\n",
        "x": 1140,
        "y": 40,
        "wires": []
    },
    {
        "id": "bc6d32e1.893618",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "From Security Internals",
        "info": "",
        "x": 140,
        "y": 360,
        "wires": []
    },
    {
        "id": "5d1f0baa.932254",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "From Security Internals",
        "info": "",
        "x": 120,
        "y": 260,
        "wires": []
    },
    {
        "id": "3091cc5b.e38aa4",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "F1",
        "info": "Receive the command from Security Internals due to 2 reasons\n\n1 - movement is detected while system is in armed stage\n\n2 - Somebody is trying incorrect key for more then three times within 5 minutes",
        "x": 110,
        "y": 140,
        "wires": []
    },
    {
        "id": "21d3c36a.72cde4",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "F2",
        "info": "Call the Shinobi API to get detail information of cameras ",
        "x": 530,
        "y": 120,
        "wires": []
    },
    {
        "id": "603b6d2.f054c14",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Outgoing",
        "info": "External Python Code\n",
        "x": 1140,
        "y": 100,
        "wires": []
    },
    {
        "id": "9ade09d3.e1c848",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "To External Python Script",
        "info": "",
        "x": 1550,
        "y": 180,
        "wires": []
    },
    {
        "id": "5caf36b3.c63bd8",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "Incomming",
        "info": "Secrity Internals\n",
        "x": 280,
        "y": 60,
        "wires": []
    },
    {
        "id": "8c3f2d1d.66da4",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "Outgoing",
        "info": "MCU \n",
        "x": 280,
        "y": 120,
        "wires": []
    },
    {
        "id": "a3788df.73cbff",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "TO MCU",
        "info": "",
        "x": 920,
        "y": 260,
        "wires": []
    },
    {
        "id": "1010a527.a94e83",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F2",
        "info": "Print * character as per the number of key that has been pressed",
        "x": 950,
        "y": 300,
        "wires": []
    },
    {
        "id": "7aea4abe.839144",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F5",
        "info": "Check whether the variable is empty or not ",
        "x": 650,
        "y": 520,
        "wires": []
    },
    {
        "id": "be9dacae.c744b8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F8",
        "info": "Checked the typed pin (msg.input) is associated with any registered user.\n\nIf found one, return the user name\nIf not, return \"no\"",
        "x": 850,
        "y": 680,
        "wires": []
    },
    {
        "id": "e4f8f6ea.6edcf8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F9",
        "info": "Authorised user name is getting from F8\n\nChange the user type (flow.user_type) to user. It will be used to decide which \nUI items (group) are to show or hide\n\nThen record the timestamp into flow variable (last_login). It will be used to \ntrigger auto logout for security reason as the system doesn't support multi-session",
        "x": 1230,
        "y": 640,
        "wires": []
    },
    {
        "id": "7cdc7665.5934f8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F10",
        "info": "Change the user type (flow.user_type) to guess. It will be used to decide which \nUI items (group) are to show or hide\n\n",
        "x": 150,
        "y": 840,
        "wires": []
    },
    {
        "id": "1e109b42.e6a915",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F11",
        "info": "Control the UI items (group) based on the value (user/guess) is stored in (flow.user)type",
        "x": 190,
        "y": 980,
        "wires": []
    },
    {
        "id": "ee1c1af2.82f6d8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "F12",
        "info": "Update the value of (flow.user) to control UI items for security reasons",
        "x": 170,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f0ef0f4b.14396",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F1",
        "info": "When a key is pressed, an associated value is assigned into flow variable called \"press_key\"",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "69c91082.e1d1e8",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F3",
        "info": "Clear the * output and clear the flow variable called (press_key)",
        "x": 430,
        "y": 320,
        "wires": []
    },
    {
        "id": "92d15704.b39bc",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F2",
        "info": "Print * character as per the number of key that has been pressed",
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "6c97ece0.a798bc",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F4",
        "info": "Get data inside the flow variable called press_key and pass it to following nodes",
        "x": 390,
        "y": 500,
        "wires": []
    },
    {
        "id": "4e8f8a6a.8560e4",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F5",
        "info": "Check whether the variable is empty or not ",
        "x": 610,
        "y": 500,
        "wires": []
    },
    {
        "id": "5028aeac.38159",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F6",
        "info": "Set the pressed key into \"msg.input\" to prevent the data from file reading is overwrite to them",
        "x": 830,
        "y": 520,
        "wires": []
    },
    {
        "id": "30dc8cb7.2f13cc",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F7",
        "info": "Read the file that store user information includes \n- Name\n- PIN\n- Key\n- Email\n- Phone\n- UserLevel",
        "x": 490,
        "y": 640,
        "wires": []
    },
    {
        "id": "698aaa50.cd5e44",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F8",
        "info": "Checked the typed pin (msg.input) is associated with any registered user with admin user right.\n\nIf found one, return the user name\nIf not, return \"no\"",
        "x": 810,
        "y": 660,
        "wires": []
    },
    {
        "id": "db2b43c9.9403",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F9",
        "info": "Authorised user name is getting from F8\n\nChange the user type (flow.user_type) to user. It will be used to decide which \nUI items (group) are to show or hide\n\nThen record the timestamp into flow variable (last_login). It will be used to \ntrigger auto logout for security reason as the system doesn't support multi-session",
        "x": 1270,
        "y": 580,
        "wires": []
    },
    {
        "id": "7a0bd9af.bd067",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F10",
        "info": "Store the user name in (flow.current_user). \nBy doing this, current login user can be removed from listing to remove from \nthe system",
        "x": 1270,
        "y": 680,
        "wires": []
    },
    {
        "id": "c21e6672.2b04c",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "Generated flow variables",
        "info": "press_key\nuser_type\ncurrent_user\nuser_select_show (decide whether to show or hide user remove UI)",
        "x": 1206.25,
        "y": 80,
        "wires": []
    },
    {
        "id": "7be3dd9f.ce0cd4",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F10",
        "info": "Change the user type (flow.user_type) to guess. It will be used to decide which \nUI items (group) are to show or hide\n\n",
        "x": 130,
        "y": 920,
        "wires": []
    },
    {
        "id": "f1befe54.8889d8",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F12",
        "info": "Update the value of (flow.user) to control UI items for security reasons",
        "x": 150,
        "y": 780,
        "wires": []
    },
    {
        "id": "4443dead.106de",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F11",
        "info": "Control the UI items (group) based on the value (user/guess) is stored in (flow.user)type",
        "x": 170,
        "y": 1000,
        "wires": []
    },
    {
        "id": "bca28235.1d31",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F13",
        "info": "Passing data from form into the flow by assigning into object (user_payload) and pass\nit to the following nodes",
        "x": 310,
        "y": 1320,
        "wires": []
    },
    {
        "id": "1e6a2615.5b3ffa",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F14",
        "info": "Turn JS object format into JSON string.\nBecause it is used to called API that only accept pure JSON format",
        "x": 610,
        "y": 1320,
        "wires": []
    },
    {
        "id": "6fe3974.7a449e8",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F15",
        "info": "Call the API to add new user into the system",
        "x": 830,
        "y": 1340,
        "wires": []
    },
    {
        "id": "f0b32e1e.7d8318",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F16",
        "info": "To update the new user in user list and table ",
        "x": 1030,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9363dd6a.7cd5f",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F17",
        "info": "Present the result comming back from API called",
        "x": 1410,
        "y": 1380,
        "wires": []
    },
    {
        "id": "9b4f055d.983e6",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F18",
        "info": "Left the name of user, who currently login, from the list to show it in user list  \nOutput will be \"0\" or list of users depends on the number of users registered in the system ",
        "x": 510,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5c304004.afab78",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F19",
        "info": "Get the name of user to remove from the system ",
        "x": 1410,
        "y": 1720,
        "wires": []
    },
    {
        "id": "909b5d30.6690a8",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F20",
        "info": "Call the API to remove the user",
        "x": 1790,
        "y": 1660,
        "wires": []
    },
    {
        "id": "2f2f8407.d1863c",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F21",
        "info": "Refresh the user list after a user has been removed from the system",
        "x": 1930,
        "y": 1620,
        "wires": []
    },
    {
        "id": "296a6b22.7ecd0c",
        "type": "comment",
        "z": "4812a125.a423e8",
        "name": "F22",
        "info": "Show the user information (name, key, pin) in the table",
        "x": 150,
        "y": 2020,
        "wires": []
    },
    {
        "id": "f4efac79.717c2",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "From Motions/Doors Event",
        "info": "",
        "x": 110,
        "y": 420,
        "wires": []
    },
    {
        "id": "40746b19.1669a4",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "From Keypad Control",
        "info": "",
        "x": 160,
        "y": 1680,
        "wires": []
    },
    {
        "id": "91b61d38.25441",
        "type": "comment",
        "z": "9b447c3b.71a68",
        "name": "Testing",
        "info": "",
        "x": 210,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c38df3a3.87723",
        "type": "ui_button",
        "z": "81a1ab31.7b9308",
        "name": "backward",
        "group": "f847235d.6bb54",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-step-backward ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 240,
        "y": 740,
        "wires": [
            [
                "c10e6ee5.44d748"
            ]
        ]
    },
    {
        "id": "cd35f931.5d7a88",
        "type": "ui_button",
        "z": "81a1ab31.7b9308",
        "name": "forward",
        "group": "f847235d.6bb54",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-step-forward ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 240,
        "y": 640,
        "wires": [
            [
                "c10e6ee5.44d748"
            ]
        ]
    },
    {
        "id": "d9a8d21b.7e2f88",
        "type": "ui_button",
        "z": "81a1ab31.7b9308",
        "name": "play",
        "group": "f847235d.6bb54",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "icon": "fa-play",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "b735bbd8.cfb9d"
            ]
        ]
    },
    {
        "id": "6209a1fd.05db58",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "Register",
        "info": "",
        "x": 300,
        "y": 80,
        "wires": []
    },
    {
        "id": "c27edda8.4a6cb",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "1st Time Register",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "6beda6d9.25122"
            ]
        ]
    },
    {
        "id": "6beda6d9.25122",
        "type": "http request",
        "z": "81a1ab31.7b9308",
        "name": "Collect status from Shinobi",
        "method": "GET",
        "ret": "obj",
        "url": "http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L",
        "tls": "",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "5bdf71e1.da6b7",
                "e4f61db9.fe0bb"
            ]
        ]
    },
    {
        "id": "5bdf71e1.da6b7",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "First Time Register",
        "func": "let cameras_detail = msg.payload\n\nlet list_of_cam = []\n\ntry{\n    cameras_detail.forEach(function(i){\n         if(typeof i.status == 'undefined' || i.status == \"Died\" || i.status == \"Stopped\"){\n            {{;;}}\n        }else{\n            \n            list_of_cam.push(i.mid)\n            \n        }\n    })//end of loop\n}\n\ncatch(error){\n    if(typeof cameras_detail.status == 'undefined' || cameras_detail.status == \"Died\" || cameras_detail.status == \"Stopped\"){\n       {{;;}}\n    }else{       \n                  list_of_cam.push(cameras_detail.mid)\n        \n       \n    }\n}\n\n\nif(list_of_cam){\n    flow.set(\"list_of_cam\", list_of_cam)\n}\nnode.warn(list_of_cam)\n\nmsg.payload = list_of_cam\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 790,
        "y": 140,
        "wires": [
            [
                "fbcc7fd.0ab8a"
            ]
        ]
    },
    {
        "id": "5cae1cd9.6da0ec",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "Camera Check ",
        "func": "let cameras_detail = msg.payload\nlet ids = flow.get('list_of_cam')\n\n//node.warn(ids.length)\nlet list_of_cam = []\n\ntry{\n    cameras_detail.forEach(function(i){\n         if(typeof i.status == 'undefined' || i.status == \"Died\" || i.status == \"Stopped\"){\n            {{;;}}\n        }else{\n            \n           \n            \n            let current_monitor_id = i.mid\n            //node.warn(current_monitor_id)\n            let result = ids.indexOf(current_monitor_id)\n            //node.warn(result)\n            if(result < 0){\n                ids.push(current_monitor_id)\n              \n            }\n           \n        }\n    })//end of loop\n}\n\ncatch(error){\n    if(typeof cameras_detail.status == 'undefined' || cameras_detail.status == \"Died\" || cameras_detail.status == \"Stopped\"){\n       {{;;}}\n    }else{       \n        \n        let current_monitor_id = cameras_detail.mid\n        let result = ids.indexOf(current_monitor_id)\n      \n       //node.warn(result)\n        if(result < 0){\n                ids.push(current_monitor_id)\n            }\n      \n    }\n}\n\nflow.set('list_of_cam', ids)\nmsg.payload = flow.get(\"list_of_cam\")\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "17001cc8.98d7c3"
            ]
        ]
    },
    {
        "id": "f0837467.8e3ba",
        "type": "http request",
        "z": "81a1ab31.7b9308",
        "name": "Collect status from Shinobi",
        "method": "GET",
        "ret": "obj",
        "url": "http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L",
        "tls": "",
        "x": 800,
        "y": 280,
        "wires": [
            [
                "5cae1cd9.6da0ec",
                "e007134b.0bcbc"
            ]
        ]
    },
    {
        "id": "8f295d8.6c4862",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "Update Every 10 sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "c3a56276.715c98"
            ]
        ]
    },
    {
        "id": "5404ac1d.21c044",
        "type": "change",
        "z": "81a1ab31.7b9308",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "list_of_cam",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "36c75c6f.d03a2c",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 1940,
        "wires": [
            [
                "5404ac1d.21c044"
            ]
        ]
    },
    {
        "id": "b735bbd8.cfb9d",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "Click Event",
        "func": "let stage = flow.get('slide_show')\n\nif(typeof stage === 'undefined'){\n    flow.set(\"slide_show\", msg.payload)\n}\nelse{\n    flow.set(\"slide_show\", !stage)\n}\n\nmsg.payload = flow.get(\"slide_show\")\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 1020,
        "wires": [
            [
                "b57a641e.10d768"
            ]
        ]
    },
    {
        "id": "b57a641e.10d768",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "Set Color",
        "func": "let stage = msg.payload\nif(stage){\n    msg.background = \"green\"\n}else{\n    msg.background = \"red\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 293,
        "y": 1102,
        "wires": [
            [
                "d9a8d21b.7e2f88"
            ]
        ]
    },
    {
        "id": "2316421e.18b196",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "Generate URL",
        "func": "let monitor_id = msg.payload\n//http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/monitor/FfUg0jGG2L\n\nvar tmp_url = 'http://shinobi:8080/4DGQ70cJbLRuQb3ujZb8kd6JBwPyzR/jpeg/'+'FfUg0jGG2L'+'/'+monitor_id+'/s.jpg'\n\nmsg.url = tmp_url\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 740,
        "wires": [
            [
                "24d93c61.2d504c",
                "79ea5297.948854"
            ]
        ]
    },
    {
        "id": "79ea5297.948854",
        "type": "http request",
        "z": "81a1ab31.7b9308",
        "name": "Shinobi API Call",
        "method": "GET",
        "ret": "bin",
        "url": "",
        "tls": "",
        "x": 1300,
        "y": 740,
        "wires": [
            [
                "59862baf.aaa604"
            ]
        ]
    },
    {
        "id": "59862baf.aaa604",
        "type": "base64",
        "z": "81a1ab31.7b9308",
        "name": "Encode",
        "x": 1480,
        "y": 740,
        "wires": [
            [
                "27575a82.e65eee"
            ]
        ]
    },
    {
        "id": "27575a82.e65eee",
        "type": "ui_template",
        "z": "81a1ab31.7b9308",
        "group": "f847235d.6bb54",
        "name": "Image Show ",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<!--<!DOCTYPE html>\n    <html>\n    <title>VLC Mozilla plugin test page</title>\n    <body>\n    <embed type=\"application/x-vlc-plugin\" pluginspage=\"http://www.videolan.org\"\n       width=\"320\"\n       height=\"240\"\n       target=\"rtsp://192.168.65.108:554/11\"\n       id=\"vlc\" />\n    <script type=\"text/javascript\">\n    <!--\n    var vlc = document.getElementById(\"vlc\");\nvlc.audio.toggleMute();\n\n</script>\n</body>\n</html>\n-->\n\n<!--\n<param name=\"src\" value=\"rtsp://192.168.65.108:554/11\" />\n\n<embed type=\"application/x-vlc-plugin\" pluginspage=\"[http://www.videolan.org](http://www.videolan.org)\"\n    width=200\n    height=200\n    src=\"rtsp://192.168.65.108:554/11\"\n/>   \n-->\n<!--\n<img src={{msg.payload}}\n width='290' \n height='220' \n id='img'\n alt='Getting Image'\n>-->\n\n<img width=\"640\" height=\"480\" alt=\"image\" src=\"data:image/jpg;base64,{{msg.payload}}\"/>\n\n<!--\n<object type=\"application/x-shockwave-flash\" data=\"http://flv-player.net/medias/player_flv_mini.swf\" width=\"320\" height=\"240\">\n    <param name=\"movie\" value=\"http://flv-player.net/medias/player_flv_mini.swf\" />\n    <param name=\"allowFullScreen\" value=\"true\" />\n    <param name=\"FlashVars\" value=\"flv=http%3A//192.168.65.70%3A8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/flv/XbUegiTKp9/6yjXs64X9n/s.flv&amp;autoplay=1\" />\n</object>\n\n<!--\n<video width=\"640\" height=\"480\" controls>\n  <source src=\"http://192.168.65.70:8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/mp4/XbUegiTKp9/TfMwCwxJXA/s.mp4\" type=\"video/mp4\">  \nYour browser does not support the video tag.\n</video>\n-->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1650,
        "y": 740,
        "wires": [
            [
                "f0bdbcbf.fde948"
            ]
        ]
    },
    {
        "id": "cb86eb76.16de9",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "6yjXs64X9n",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 770,
        "y": 760,
        "wires": [
            [
                "2316421e.18b196"
            ]
        ]
    },
    {
        "id": "e4feec49.110158",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "yubBrmFO4D",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 770,
        "y": 820,
        "wires": [
            [
                "2316421e.18b196"
            ]
        ]
    },
    {
        "id": "e474123a.7afbf",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "yubBrmFO2D",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 770,
        "y": 880,
        "wires": [
            [
                "2316421e.18b196"
            ]
        ]
    },
    {
        "id": "24d93c61.2d504c",
        "type": "debug",
        "z": "81a1ab31.7b9308",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1290,
        "y": 660,
        "wires": []
    },
    {
        "id": "2ea44883.1381e8",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "flow.list_of_cam",
        "info": "",
        "x": 800,
        "y": 100,
        "wires": []
    },
    {
        "id": "7b11bd39.584a24",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "flow.slide_show",
        "info": "",
        "x": 173,
        "y": 922,
        "wires": []
    },
    {
        "id": "fbcc7fd.0ab8a",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "start the current",
        "func": "let list_of_cam = flow.get('list_of_cam')\n\nif(typeof list_of_cam !== \"undefined\"){\n    flow.set(\"current\", list_of_cam[0])\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e3a7c95b.fc99e8",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "flow.current",
        "info": "",
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "d4a2f478.229c",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "current",
        "payloadType": "flow",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 1880,
        "wires": [
            [
                "2237f22e.31075e"
            ]
        ]
    },
    {
        "id": "2237f22e.31075e",
        "type": "debug",
        "z": "81a1ab31.7b9308",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 990,
        "y": 1880,
        "wires": []
    },
    {
        "id": "5c33eda1.5323b4",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "Get Camera Currently Show",
        "func": "let current = flow.get('current')\nif(typeof current !== 'undefined'){\n    msg.payload = current\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 540,
        "wires": [
            [
                "2e23f101.c819fe"
            ]
        ]
    },
    {
        "id": "2e23f101.c819fe",
        "type": "switch",
        "z": "81a1ab31.7b9308",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 540,
        "wires": [
            [
                "2316421e.18b196"
            ]
        ]
    },
    {
        "id": "a2c4414e.0d44a8",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "4f8bfddf.3d7e5c"
            ]
        ]
    },
    {
        "id": "f0bdbcbf.fde948",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "check the current camera",
        "func": "let current = flow.get('current')\n//node.warn(current)\nlet list_com_cam = flow.get('list_of_cam')\n//node.warn(list_com_cam)\nlet total = list_com_cam.length\n//node.warn(total)\nlet current_monitor_id = current\nlet current_index = list_com_cam.indexOf(current)\n//node.warn(current_index)\n\nif(current_index == total -1){\n    //msg.payload = current_index + 1 \n    flow.set(\"current\", list_com_cam[0])\n}else{\n    //msg.payload = 0\n    flow.set(\"current\", list_com_cam[current_index + 1 ])\n    //flow.set(\"current\", list_com_cam[0])\n}\n\nmsg.payload = flow.get('current')\nreturn msg\n\n\n/*\nif(typeof current !== 'undefined'){\n    msg.payload = current\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg*/",
        "outputs": 1,
        "noerr": 0,
        "x": 1870,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "e82ec0d0.24da78",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "check the current camera",
        "func": "let current = msg.payload\n//node.warn(current)\nlet list_com_cam = flow.get('list_of_cam')\n//node.warn(list_com_cam)\nlet total = list_com_cam.length\n//node.warn(total)\nlet current_monitor_id = current\nlet current_index = list_com_cam.indexOf(current)\nlet last_index = total -1\nnode.warn(current_index)\n\nif(current_index == last_index){\n    msg.payload = 0\n}else{\n    msg.payload =  current_index + 1\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 2180,
        "wires": [
            [
                "779545f3.2aa734"
            ]
        ]
    },
    {
        "id": "59863ebb.c990e",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "yubBrmFO4D",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 2180,
        "wires": [
            [
                "e82ec0d0.24da78"
            ]
        ]
    },
    {
        "id": "f9324e7c.9f952",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "yubBrmFO2D",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 2240,
        "wires": [
            [
                "e82ec0d0.24da78"
            ]
        ]
    },
    {
        "id": "363c15ee.f15c5a",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "6yjXs64X9n",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 730,
        "y": 2120,
        "wires": [
            [
                "e82ec0d0.24da78"
            ]
        ]
    },
    {
        "id": "779545f3.2aa734",
        "type": "debug",
        "z": "81a1ab31.7b9308",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1220,
        "y": 2180,
        "wires": []
    },
    {
        "id": "4f8bfddf.3d7e5c",
        "type": "switch",
        "z": "81a1ab31.7b9308",
        "name": "Is slideshow is enabled?",
        "property": "slide_show",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 540,
        "wires": [
            [
                "5c33eda1.5323b4"
            ]
        ]
    },
    {
        "id": "c10e6ee5.44d748",
        "type": "switch",
        "z": "81a1ab31.7b9308",
        "name": "Is slideshow is disabled?",
        "property": "slide_show",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 700,
        "wires": [
            [
                "5c33eda1.5323b4"
            ]
        ]
    },
    {
        "id": "80bc3626.2e49e8",
        "type": "switch",
        "z": "81a1ab31.7b9308",
        "name": "",
        "property": "slide_show",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "4e6ed982.59e07",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "check the current camera",
        "func": "let current = flow.get('current')\nnode.warn(current)\nlet list_com_cam = flow.get('list_of_cam')\nnode.warn(list_com_cam)\nlet total = list_com_cam.length\nnode.warn(total)\nlet current_monitor_id = current\nlet current_index = list_com_cam.indexOf(current)\nnode.warn(current_index)\n\nif(current_index == total -1){\n    //msg.payload = current_index + 1 \n    flow.set(\"current\", list_com_cam[0])\n}else{\n    //msg.payload = 0\n    flow.set(\"current\", list_com_cam[current_index + 1 ])\n    //flow.set(\"current\", list_com_cam[0])\n}\n\nmsg.payload = flow.get('current')\nreturn msg\n\n\n/*\nif(typeof current !== 'undefined'){\n    msg.payload = current\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg*/",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "a2cd14c4.e66e08",
        "type": "function",
        "z": "81a1ab31.7b9308",
        "name": "check the current camera",
        "func": "let current = flow.get('current')\nnode.warn(current)\nlet list_com_cam = flow.get('list_of_cam')\nnode.warn(list_com_cam)\nlet total = list_com_cam.length\nnode.warn(total)\nlet current_monitor_id = current\nlet current_index = list_com_cam.indexOf(current)\nnode.warn(current_index)\n\nif(current_index == total -1){\n    //msg.payload = current_index + 1 \n    flow.set(\"current\", list_com_cam[0])\n}else{\n    //msg.payload = 0\n    flow.set(\"current\", list_com_cam[current_index + 1 ])\n    //flow.set(\"current\", list_com_cam[0])\n}\n\nmsg.payload = flow.get('current')\nreturn msg\n\n\n/*\nif(typeof current !== 'undefined'){\n    msg.payload = current\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg*/",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "16d38c08.7e678c",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "flow.list_of_cam",
        "info": "",
        "x": 1080,
        "y": 220,
        "wires": []
    },
    {
        "id": "d6d9118e.35e3f8",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "Every 10 Seconds",
        "info": "",
        "x": 290,
        "y": 240,
        "wires": []
    },
    {
        "id": "c3a56276.715c98",
        "type": "switch",
        "z": "81a1ab31.7b9308",
        "name": "",
        "property": "current",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 280,
        "wires": [
            [
                "f0837467.8e3ba"
            ]
        ]
    },
    {
        "id": "a4fc1ba4.f2ab4",
        "type": "change",
        "z": "81a1ab31.7b9308",
        "name": "list_of_cam",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "list_of_cam",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 2020,
        "wires": [
            [
                "a7fcc15c.e7ee"
            ]
        ]
    },
    {
        "id": "a7fcc15c.e7ee",
        "type": "debug",
        "z": "81a1ab31.7b9308",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1250,
        "y": 2020,
        "wires": []
    },
    {
        "id": "5bdcad92.5f9c34",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 700,
        "y": 2020,
        "wires": [
            [
                "a4fc1ba4.f2ab4"
            ]
        ]
    },
    {
        "id": "82d6208e.ba1a68",
        "type": "change",
        "z": "81a1ab31.7b9308",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "list_of_cam",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "current",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "63ad0bf7.46cf0c",
        "type": "inject",
        "z": "81a1ab31.7b9308",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 200,
        "y": 2320,
        "wires": [
            [
                "82d6208e.ba1a68"
            ]
        ]
    },
    {
        "id": "97b49667.fdbb28",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "Generated flow variables",
        "info": "list_of_cam == Array of String : [monitor_id,...]\ncurrent     == String  : monitor_id\nslide_show  == boolean : yes/no",
        "x": 1350,
        "y": 40,
        "wires": []
    },
    {
        "id": "36fe63f6.e0cf54",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "F1",
        "info": "Call the shinobi API to get the information of cameras",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "d9d6523c.9153a",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "F2",
        "info": "Register the monitors id in flow variable \n(list_of_cam)",
        "x": 790,
        "y": 40,
        "wires": []
    },
    {
        "id": "9b5b0a11.acd6e",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "F3",
        "info": "Add the fist variable of registered id from last node\ninto another flow variable called (current)\n",
        "x": 1070,
        "y": 40,
        "wires": []
    },
    {
        "id": "dba09917.4b3b",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "F4",
        "info": "In every 10 seconds, check whether a new camera is \nadded. If found one, update the record (flow.list_of_cam)",
        "x": 690,
        "y": 220,
        "wires": []
    },
    {
        "id": "683d9e30.f7e848",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "Slide Show Interval (5 seconds)",
        "info": "",
        "x": 290,
        "y": 480,
        "wires": []
    },
    {
        "id": "22f6d6d1.f279c2",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "",
        "info": "Change the color of the button",
        "x": 273,
        "y": 842,
        "wires": []
    },
    {
        "id": "e007134b.0bcbc",
        "type": "debug",
        "z": "81a1ab31.7b9308",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1210,
        "y": 340,
        "wires": []
    },
    {
        "id": "17001cc8.98d7c3",
        "type": "debug",
        "z": "81a1ab31.7b9308",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1310,
        "y": 280,
        "wires": []
    },
    {
        "id": "e4f61db9.fe0bb",
        "type": "debug",
        "z": "81a1ab31.7b9308",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 200,
        "wires": []
    },
    {
        "id": "2186db8d.37a7dc",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Log the Invalid Key",
        "func": "let key_pad_id = msg.dev_location\nlet entry_invalid_key = msg.type_in_key\n\nlet dt = new Date();\nlet utcDate = dt.toUTCString()\nlet message = \"INVALID KEY/PIN :\" + entry_invalid_key + \", TIME: \" + utcDate + \", KEYPAD ID: \" + key_pad_id\n\nmsg.payload = message\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 1080,
        "wires": [
            [
                "9c1f51f7.6540f8"
            ]
        ]
    },
    {
        "id": "9c1f51f7.6540f8",
        "type": "file",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "filename": "/data/log.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1070,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "f2858249.6b38c",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Who unlock? (logging)",
        "func": "let user_name = msg.payload\nlet key_pad_id = msg.dev_location\nlet entry_valid_key = msg.type_in_key\n\nlet utcDate = new Date().toUTCString();\n\nlet message = \"Name: \" + user_name + \", KEY/PIN: \" + entry_valid_key +\", Time: \" + utcDate +\", KEYPAD ID: \" + key_pad_id\nmsg.payload = message\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 1580,
        "wires": [
            [
                "54abfbbc.38217c"
            ]
        ]
    },
    {
        "id": "54abfbbc.38217c",
        "type": "file",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "filename": "/data/log.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1330,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "c3f9702d.b06168",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Who disarm? (logging)",
        "func": "let user_name = msg.payload\nlet key_pad_id = msg.dev_location\nlet entry_valid_key = msg.type_in_key\n\nlet utcDate = new Date().toUTCString();\n\nlet message = \"Name: \" + user_name + \", KEY/PIN: \" + entry_valid_key +\", Time: \" + utcDate +\", KEYPAD ID: \" + key_pad_id + \", Disarmed: Yes\"\nmsg.payload = message\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 1280,
        "wires": [
            [
                "8a30d40f.1345f"
            ]
        ]
    },
    {
        "id": "8a30d40f.1345f",
        "type": "file",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "filename": "/data/log.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1350,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "6bcffc60.d62b74",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Who is login? (logging)",
        "func": "let user_name = msg.payload\n//let key_pad_id = msg.dev_location\nlet entry_valid_key = flow.get(\"press_key\");\n\nlet utcDate = new Date().toUTCString();\n\nlet message = \"Name: \" + user_name + \", KEY/PIN: \" + entry_valid_key +\", Time: \" + utcDate +\", KEYPAD ID: \" + \"Web\"\nmsg.payload = message\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 740,
        "wires": [
            [
                "b59d3c24.70a26",
                "283696b0.88a9ca"
            ]
        ]
    },
    {
        "id": "b59d3c24.70a26",
        "type": "file",
        "z": "898ca7f0.ecb26",
        "name": "",
        "filename": "/data/log.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1470,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7737290c.d2c3c8",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Log the Invalid Key (logging)",
        "func": "//let key_pad_id = msg.dev_location\n//let entry_invalid_key = msg.type_in_key\n\n//let user_name = msg.payload\n//let key_pad_id = msg.dev_location\nlet entry_invalid_key = flow.get(\"press_key\");\n\nlet utcDate = new Date().toUTCString();\n\n\n//let dt = new Date();\n//let utcDate = dt.toUTCString()\nlet message = \"INVALID KEY/PIN :\" + entry_invalid_key + \", TIME: \" + utcDate + \", KEYPAD ID: WEB\" \n\nmsg.payload = message\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 820,
        "wires": [
            [
                "8f7ef066.680c7"
            ]
        ]
    },
    {
        "id": "8f7ef066.680c7",
        "type": "file",
        "z": "898ca7f0.ecb26",
        "name": "",
        "filename": "/data/log.txt",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1510,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "b1475478.45d92",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Logging",
        "info": "Log1 - Record the name of user and the time of login\n\nLog2 - Record the unvalid key that is used to login and the time",
        "x": 1140,
        "y": 120,
        "wires": []
    },
    {
        "id": "6bc1e213.9396e4",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Log1",
        "info": "Log1 - Record the name of user and the time of login\n",
        "x": 1650,
        "y": 740,
        "wires": []
    },
    {
        "id": "f66ce183.a417c8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Log2",
        "info": "\nLog2 - Record the unvalid key that is used to login and the time",
        "x": 1670,
        "y": 820,
        "wires": []
    },
    {
        "id": "9f92c55a.9b565",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Logging",
        "info": "Log1 - Record the invalid that is used to login along with the time and location (keypad id)\n\nLog2 - Record the name, time, location(keypad), key that is used to unarm the system\n\nLog3 - Record the name, time, location(keypad), key that is used to unlock the door",
        "x": 1360,
        "y": 120,
        "wires": []
    },
    {
        "id": "234b26de.e6766a",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Log1",
        "info": "Record the invalid that is used to login along with the time and location (keypad id)",
        "x": 1210,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ce1117a0.ce058",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Log2",
        "info": "Record the name, time, location(keypad), key that is used to unarm the system",
        "x": 1490,
        "y": 1280,
        "wires": []
    },
    {
        "id": "20ceda8f.e11c26",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Log3",
        "info": "Record the name, time, location(keypad), key that is used to unlock the door",
        "x": 1470,
        "y": 1580,
        "wires": []
    },
    {
        "id": "3fccee69.da4702",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1120,
        "y": 920,
        "wires": []
    },
    {
        "id": "56aea21d.d83004",
        "type": "mqtt in",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "topic": "devices/camera/cmd/video",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "7d96dcb5.b4aefc"
            ]
        ]
    },
    {
        "id": "348cd756.ee7898",
        "type": "debug",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 800,
        "y": 500,
        "wires": []
    },
    {
        "id": "ebf3c174.dda208",
        "type": "mqtt in",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "topic": "devices/camera/cmd/image",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "e268d5dd.a11a58"
            ]
        ]
    },
    {
        "id": "44430ae9.375b6c",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "here",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 487,
        "y": 1486,
        "wires": [
            [
                "17e10d26.218acb"
            ]
        ]
    },
    {
        "id": "26724a6f.1907ae",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 280,
        "y": 2200,
        "wires": [
            [
                "75c9450b.98708c"
            ]
        ]
    },
    {
        "id": "75c9450b.98708c",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "Invalid Key",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "12344",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2200,
        "wires": [
            [
                "83c43ba6.26769",
                "b0d95984.35f6d"
            ]
        ]
    },
    {
        "id": "83c43ba6.26769",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/door_controller/door1/event/keypad-data",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 850,
        "y": 2200,
        "wires": []
    },
    {
        "id": "94e5f12a.0630d8",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 280,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "e6f10c27.c74ff",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/door_controller/door1/event/keypad-data",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 910,
        "y": 2320,
        "wires": []
    },
    {
        "id": "79ced5d0.21f45c",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "Valid Key",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "6666",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 2320,
        "wires": [
            [
                "e6f10c27.c74ff"
            ]
        ]
    },
    {
        "id": "317def5f.99de8",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 280,
        "y": 2320,
        "wires": [
            [
                "79ced5d0.21f45c"
            ]
        ]
    },
    {
        "id": "b0d95984.35f6d",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "invalid_trigger",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 2260,
        "wires": [
            [
                "315cb0be.86c16"
            ]
        ]
    },
    {
        "id": "315cb0be.86c16",
        "type": "debug",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.door1.invalid_time",
        "x": 960,
        "y": 2260,
        "wires": []
    },
    {
        "id": "42844d00.b30194",
        "type": "comment",
        "z": "81a1ab31.7b9308",
        "name": "Testing",
        "info": "",
        "x": 530,
        "y": 1800,
        "wires": []
    },
    {
        "id": "34a559b7.2bef26",
        "type": "inject",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 840,
        "wires": [
            [
                "58458a9c.3875fc"
            ]
        ]
    },
    {
        "id": "72313155.096d5",
        "type": "comment",
        "z": "c0d5c7f8.9444d8",
        "name": "Testing",
        "info": "",
        "x": 130,
        "y": 780,
        "wires": []
    },
    {
        "id": "58458a9c.3875fc",
        "type": "change",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 840,
        "wires": [
            [
                "7eeb5856.3768f"
            ]
        ]
    },
    {
        "id": "7eeb5856.3768f",
        "type": "mqtt out",
        "z": "c0d5c7f8.9444d8",
        "name": "",
        "topic": "devices/camera/cmd/video",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 700,
        "y": 840,
        "wires": []
    },
    {
        "id": "d86f256c.b78638",
        "type": "inject",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 720,
        "wires": [
            [
                "ee305847.ecfd2"
            ]
        ]
    },
    {
        "id": "7d494452.57b874",
        "type": "comment",
        "z": "5e9e23fa.6f5764",
        "name": "Testing",
        "info": "",
        "x": 110,
        "y": 660,
        "wires": []
    },
    {
        "id": "ee305847.ecfd2",
        "type": "change",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 720,
        "wires": [
            [
                "aa81b599.d1f5d"
            ]
        ]
    },
    {
        "id": "aa81b599.d1f5d",
        "type": "mqtt out",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "topic": "devices/camera/cmd/image",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 680,
        "y": 720,
        "wires": []
    },
    {
        "id": "d90eea75.3f2358",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 290,
        "y": 2520,
        "wires": [
            [
                "f4bf4354.12a1a"
            ]
        ]
    },
    {
        "id": "f4bf4354.12a1a",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "keypad_warning_stage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2520,
        "wires": [
            []
        ]
    },
    {
        "id": "d452b1af.39eff8",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 290,
        "y": 2580,
        "wires": [
            [
                "866a7b69.4b1038"
            ]
        ]
    },
    {
        "id": "866a7b69.4b1038",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "keypad_warning_stage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "ea494515.1542b",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Manual Control (KEY WARNING)",
        "info": "Manually trigger keypad warning",
        "x": 430,
        "y": 2460,
        "wires": []
    },
    {
        "id": "f4c63528.fee3b8",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Key Entry Simulation",
        "info": "",
        "x": 360,
        "y": 2140,
        "wires": []
    },
    {
        "id": "9096366b.f23c18",
        "type": "inject",
        "z": "569abad5.44f7ec",
        "name": "Set Disarm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 180,
        "y": 2600,
        "wires": [
            [
                "2f6aa5e6.747d82",
                "c95bd4fa.db854",
                "8948726d.65a918",
                "467e179e.f2e368",
                "6eae5ef.f2ea62"
            ]
        ]
    },
    {
        "id": "2f6aa5e6.747d82",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_armed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "c95bd4fa.db854",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "8948726d.65a918",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "467e179e.f2e368",
        "type": "function",
        "z": "569abad5.44f7ec",
        "name": "turn off keypad warning",
        "func": "//let trigger_detail = JSON.parse(msg.payload)\n//msg.trigger_detail = trigger_detail\nmsg.payload = \"off\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 2720,
        "wires": [
            [
                "f24513b9.5c22d"
            ]
        ]
    },
    {
        "id": "6eae5ef.f2ea62",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "set payload = off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 2760,
        "wires": [
            [
                "f6733c92.f1ade"
            ]
        ]
    },
    {
        "id": "f24513b9.5c22d",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 830,
        "y": 2720,
        "wires": []
    },
    {
        "id": "f6733c92.f1ade",
        "type": "mqtt out",
        "z": "569abad5.44f7ec",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 860,
        "y": 2760,
        "wires": []
    },
    {
        "id": "268a0b44.0639d4",
        "type": "inject",
        "z": "569abad5.44f7ec",
        "name": "Set Arm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 180,
        "y": 2540,
        "wires": [
            [
                "dbff5ba5.139948"
            ]
        ]
    },
    {
        "id": "dbff5ba5.139948",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_armed",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "494363e3.4cb344",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "F1",
        "info": "Manually arm/disarm the system",
        "x": 170,
        "y": 2660,
        "wires": []
    },
    {
        "id": "5252314d.2f1668",
        "type": "comment",
        "z": "569abad5.44f7ec",
        "name": "Manual ARM/DISARM",
        "info": "",
        "x": 220,
        "y": 2460,
        "wires": []
    },
    {
        "id": "f9219066.665698",
        "type": "inject",
        "z": "ff37b1a0.cc9d98",
        "name": "Siren On",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 680,
        "wires": [
            [
                "d248bb70.e3b8f8"
            ]
        ]
    },
    {
        "id": "1296e0c.17f419f",
        "type": "inject",
        "z": "ff37b1a0.cc9d98",
        "name": "Siren Off",
        "topic": "",
        "payload": "off",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 740,
        "wires": [
            [
                "d248bb70.e3b8f8"
            ]
        ]
    },
    {
        "id": "d248bb70.e3b8f8",
        "type": "mqtt out",
        "z": "ff37b1a0.cc9d98",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 440,
        "y": 700,
        "wires": []
    },
    {
        "id": "db4346e1.70f29",
        "type": "comment",
        "z": "ff37b1a0.cc9d98",
        "name": "Testing",
        "info": "",
        "x": 150,
        "y": 600,
        "wires": []
    },
    {
        "id": "d03462b1.d81418",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 290,
        "y": 2740,
        "wires": [
            [
                "50fbb8e9.81486"
            ]
        ]
    },
    {
        "id": "6488836f.9d5a74",
        "type": "inject",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 290,
        "y": 2800,
        "wires": [
            [
                "e7cdf22a.fdf3d"
            ]
        ]
    },
    {
        "id": "7d419012.d14048",
        "type": "comment",
        "z": "8a3bdb61.7c6bc8",
        "name": "Manual Control (KEYPAD LED)",
        "info": "",
        "x": 470,
        "y": 2660,
        "wires": []
    },
    {
        "id": "50fbb8e9.81486",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/door_controller/door1/set/keypad-led ",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 660,
        "y": 2740,
        "wires": []
    },
    {
        "id": "e7cdf22a.fdf3d",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/door_controller/door1/set/keypad-led ",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 660,
        "y": 2800,
        "wires": []
    },
    {
        "id": "12b22e56.e4d402",
        "type": "debug",
        "z": "569abad5.44f7ec",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "508efee5.85d7d",
        "type": "switch",
        "z": "8a3bdb61.7c6bc8",
        "name": "armed?",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 1200,
        "wires": [
            [
                "34658b57.3fb3ec",
                "2186db8d.37a7dc"
            ]
        ]
    },
    {
        "id": "a2a4f10e.101f98",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "1812260f.87e572",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "fd039a43.87d84",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "db31368c.375968",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "f0f67ec5.6a4e3",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "dd44a37f.4cc7c8",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "48030fc9.06025",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "2808ec4c.8985cc",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "cb4de22a.8fb6c",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "88160326.e3bab",
        "type": "change",
        "z": "569abad5.44f7ec",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "b82229ce.0eeea",
        "type": "change",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.door1.invalid_time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 1900,
        "wires": [
            [
                "af45df4f.7f7528"
            ]
        ]
    },
    {
        "id": "ce15efcd.80626",
        "type": "ui_button",
        "z": "4812a125.a423e8",
        "name": "",
        "group": "dca1a8b2.7cb16",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-refresh ",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 110,
        "y": 1680,
        "wires": [
            [
                "6f5a4dbc.389404"
            ]
        ]
    },
    {
        "id": "bc8eb34d.efdf6",
        "type": "ui_text",
        "z": "4812a125.a423e8",
        "group": "b1083210.56f3b8",
        "order": 0,
        "width": "6",
        "height": "1",
        "name": "logout_message",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1030,
        "y": 800,
        "wires": []
    },
    {
        "id": "d7f2d2ae.93cb98",
        "type": "ui_text",
        "z": "898ca7f0.ecb26",
        "group": "d60901c.dde74",
        "order": 0,
        "width": "6",
        "height": "1",
        "name": "logout_message",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 790,
        "y": 1240,
        "wires": []
    },
    {
        "id": "84ce01db.c22338",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "Register",
        "info": "",
        "x": 280,
        "y": 100,
        "wires": []
    },
    {
        "id": "6272b551.06f20c",
        "type": "inject",
        "z": "6bb43483.7bfd3c",
        "name": "1st Time Register",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "e9884899.60f1e8"
            ]
        ]
    },
    {
        "id": "e9884899.60f1e8",
        "type": "http request",
        "z": "6bb43483.7bfd3c",
        "name": "Collect status from Shinobi",
        "method": "GET",
        "ret": "obj",
        "url": "http://shinobi:8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/monitor/XbUegiTKp9",
        "tls": "",
        "x": 520,
        "y": 160,
        "wires": [
            [
                "bfb35a6e.74eba",
                "5a71a87c.109c2"
            ]
        ]
    },
    {
        "id": "bfb35a6e.74eba",
        "type": "function",
        "z": "6bb43483.7bfd3c",
        "name": "First Time Register",
        "func": "let cameras_detail = msg.payload\n\nlet list_of_cam = []\n\ntry{\n    cameras_detail.forEach(function(i){\n         if(typeof i.status == 'undefined' || i.status == \"Died\" || i.status == \"Stopped\"){\n            {{;;}}\n        }else{\n            \n            list_of_cam.push(i.mid)\n            \n        }\n    })//end of loop\n}\n\ncatch(error){\n    if(typeof cameras_detail.status == 'undefined' || cameras_detail.status == \"Died\" || cameras_detail.status == \"Stopped\"){\n       {{;;}}\n    }else{       \n                  list_of_cam.push(cameras_detail.mid)\n        \n       \n    }\n}\n\n\nif(list_of_cam){\n    flow.set(\"list_of_cam\", list_of_cam)\n}\nnode.warn(list_of_cam)\n\nmsg.payload = list_of_cam\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 160,
        "wires": [
            [
                "1b962d0c.0dcf3b"
            ]
        ]
    },
    {
        "id": "5edb230.47d47dc",
        "type": "function",
        "z": "6bb43483.7bfd3c",
        "name": "Camera Check ",
        "func": "let cameras_detail = msg.payload\nlet ids = flow.get('list_of_cam')\n\n//node.warn(ids.length)\nlet list_of_cam = []\n\ntry{\n    cameras_detail.forEach(function(i){\n         if(typeof i.status == 'undefined' || i.status == \"Died\" || i.status == \"Stopped\"){\n            {{;;}}\n        }else{\n            \n           \n            \n            let current_monitor_id = i.mid\n            //node.warn(current_monitor_id)\n            let result = ids.indexOf(current_monitor_id)\n            //node.warn(result)\n            if(result < 0){\n                ids.push(current_monitor_id)\n              \n            }\n           \n        }\n    })//end of loop\n}\n\ncatch(error){\n    if(typeof cameras_detail.status == 'undefined' || cameras_detail.status == \"Died\" || cameras_detail.status == \"Stopped\"){\n       {{;;}}\n    }else{       \n        \n        let current_monitor_id = cameras_detail.mid\n        let result = ids.indexOf(current_monitor_id)\n      \n       //node.warn(result)\n        if(result < 0){\n                ids.push(current_monitor_id)\n            }\n      \n    }\n}\n\nflow.set('list_of_cam', ids)\nmsg.payload = flow.get(\"list_of_cam\")\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "66f2446d.ad50fc"
            ]
        ]
    },
    {
        "id": "c2b9802.b6039",
        "type": "http request",
        "z": "6bb43483.7bfd3c",
        "name": "Collect status from Shinobi",
        "method": "GET",
        "ret": "obj",
        "url": "http://shinobi:8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/monitor/XbUegiTKp9",
        "tls": "",
        "x": 780,
        "y": 300,
        "wires": [
            [
                "5edb230.47d47dc",
                "2a5a73be.c6559c"
            ]
        ]
    },
    {
        "id": "dff62e61.03b6b",
        "type": "inject",
        "z": "6bb43483.7bfd3c",
        "name": "Update Every 10 sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "e09b1c18.704e48"
            ]
        ]
    },
    {
        "id": "cf889530.9e3758",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "flow.list_of_cam",
        "info": "",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "1b962d0c.0dcf3b",
        "type": "function",
        "z": "6bb43483.7bfd3c",
        "name": "start the current",
        "func": "let list_of_cam = flow.get('list_of_cam')\n\nif(typeof list_of_cam !== \"undefined\"){\n    flow.set(\"current\", list_of_cam[0])\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c51271a9.b793a",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "flow.current",
        "info": "",
        "x": 1050,
        "y": 120,
        "wires": []
    },
    {
        "id": "2d054565.10b132",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "flow.list_of_cam",
        "info": "",
        "x": 1060,
        "y": 240,
        "wires": []
    },
    {
        "id": "5bed1b45.978874",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "Every 10 Seconds",
        "info": "",
        "x": 270,
        "y": 260,
        "wires": []
    },
    {
        "id": "e09b1c18.704e48",
        "type": "switch",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "property": "current",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 300,
        "wires": [
            [
                "c2b9802.b6039"
            ]
        ]
    },
    {
        "id": "24772db4.c73a02",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "Generated flow variables",
        "info": "list_of_cam == Array of String : [monitor_id,...]\ncurrent     == String  : monitor_id\nslide_show  == boolean : yes/no",
        "x": 1330,
        "y": 60,
        "wires": []
    },
    {
        "id": "4ea4aa22.f1e83c",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "F1",
        "info": "Call the shinobi API to get the information of cameras",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "713cd28a.8e0904",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "F2",
        "info": "Register the monitors id in flow variable \n(list_of_cam)",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "eefd7404.19451",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "F3",
        "info": "Add the fist variable of registered id from last node\ninto another flow variable called (current)\n",
        "x": 1050,
        "y": 60,
        "wires": []
    },
    {
        "id": "14099b20.7991ed",
        "type": "comment",
        "z": "6bb43483.7bfd3c",
        "name": "F4",
        "info": "In every 10 seconds, check whether a new camera is \nadded. If found one, update the record (flow.list_of_cam)",
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "2a5a73be.c6559c",
        "type": "debug",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1193,
        "y": 365,
        "wires": []
    },
    {
        "id": "66f2446d.ad50fc",
        "type": "debug",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1290,
        "y": 300,
        "wires": []
    },
    {
        "id": "5a71a87c.109c2",
        "type": "debug",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "ac9aba1a.ddc798",
        "type": "ui_template",
        "z": "6bb43483.7bfd3c",
        "group": "3cd1a247.40296e",
        "name": "Video Show ",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<!--<object type=\"application/x-shockwave-flash\" data=\"http://flv-player.net/medias/player_flv_mini.swf\" width=\"640\" height=\"480\">\n    <param name=\"movie\" value=\"http://flv-player.net/medias/player_flv_mini.swf\" />\n    <param name=\"allowFullScreen\" value=\"true\" />\n    \n  <param name=\"FlashVars\" value=\"flv=http%3A//mqtt.lan%3A8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/flv/XbUegiTKp9/6yjXs64X9n/s.flv\" />\n  \n\n    {{msg.url}}\n</object>\n\n-->\n\n\n\n<!--<iframe src=\"http://mqtt.lan:8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/mjpeg/XbUegiTKp9/6yjXs64X9n/0\" align=\"center\" width=\"320\" height=\"240\" scrolling=\"no\" frameborder=no marginheight=\"0px\"></iframe>\n-->\n\n\n<iframe src=\"http://192.168.65.159:8080/2a271f09f2d57b3280a7c5da8066fd60/embed/FfUg0jGG2L/TfMwCwxJXA/fullscreen|jquery|relative|gui\" align=\"center\" width=\"320\" height=\"240\" scrolling=\"no\" frameborder=no marginheight=\"0px\"></iframe>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 190,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "8e2c6086.902f8",
        "type": "switch",
        "z": "6bb43483.7bfd3c",
        "name": "Is slideshow is enabled?",
        "property": "slide_show",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "eeefbcb2.f67ba",
        "type": "inject",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 270,
        "y": 620,
        "wires": [
            [
                "8e2c6086.902f8"
            ]
        ]
    },
    {
        "id": "a48b3af6.77495",
        "type": "function",
        "z": "6bb43483.7bfd3c",
        "name": "Get Camera Currently Show",
        "func": "let current = flow.get('current')\nif(typeof current !== 'undefined'){\n    msg.payload = current\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 700,
        "wires": [
            [
                "a436f578.2f0e"
            ]
        ]
    },
    {
        "id": "a436f578.2f0e",
        "type": "switch",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "no",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 910,
        "y": 680,
        "wires": [
            [
                "1f62e5f4.7d7b1a"
            ]
        ]
    },
    {
        "id": "8ef10926.5a85",
        "type": "switch",
        "z": "6bb43483.7bfd3c",
        "name": "Is slideshow is disabled?",
        "property": "slide_show",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "2595c65d.06dd3a",
        "type": "function",
        "z": "6bb43483.7bfd3c",
        "name": "Generate URL",
        "func": "let monitor_id = msg.payload\n\n/*<param name=\"FlashVars\" value=\"flv=http%3A//shinobi%3A8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/flv/XbUegiTKp9/TfMwCwxJXA/s.flv\" />\n*/\nmsg.url = `<param name=\"FlashVars\" value=\"flv=http%3A//mqtt.lan%3A8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/flv/XbUegiTKp9/${monitor_id}/s.flv\" />`\n\n/*msg.template = `<object type=\"application/x-shockwave-flash\" data=\"http://flv-player.net/medias/player_flv_mini.swf\" width=\"320\" height=\"240\">\n    <param name=\"movie\" value=\"http://flv-player.net/medias/player_flv_mini.swf\" />\n    <param name=\"allowFullScreen\" value=\"true\" />\n  \n    <param name=\"FlashVars\" value=\"flv=http%3A//mqtt.lan%3A8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/flv/XbUegiTKp9/${{monitor_id}}/s.flv\" />\n\n</object>`\n*/\n\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "4d3732ab.8e8d1c",
        "type": "debug",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1590,
        "y": 780,
        "wires": []
    },
    {
        "id": "783baf16.ab3ee8",
        "type": "http request",
        "z": "6bb43483.7bfd3c",
        "name": "Shinobi API Call",
        "method": "GET",
        "ret": "bin",
        "url": "",
        "tls": "",
        "x": 680,
        "y": 780,
        "wires": [
            [
                "97c6f6a0.601618"
            ]
        ]
    },
    {
        "id": "81f0cc27.11002",
        "type": "function",
        "z": "6bb43483.7bfd3c",
        "name": "check the current camera",
        "func": "let current = flow.get('current')\n//node.warn(current)\nlet list_com_cam = flow.get('list_of_cam')\n//node.warn(list_com_cam)\nlet total = list_com_cam.length\n//node.warn(total)\nlet current_monitor_id = current\nlet current_index = list_com_cam.indexOf(current)\n//node.warn(current_index)\n\nif(current_index == total -1){\n    //msg.payload = current_index + 1 \n    flow.set(\"current\", list_com_cam[0])\n}else{\n    //msg.payload = 0\n    flow.set(\"current\", list_com_cam[current_index + 1 ])\n    //flow.set(\"current\", list_com_cam[0])\n}\n\nmsg.payload = flow.get('current')\nreturn msg\n\n\n/*\nif(typeof current !== 'undefined'){\n    msg.payload = current\n}\nelse{\n    msg.payload = \"no\"\n}\nreturn msg*/",
        "outputs": 1,
        "noerr": 0,
        "x": 1290,
        "y": 780,
        "wires": [
            [
                "4d3732ab.8e8d1c"
            ]
        ]
    },
    {
        "id": "97c6f6a0.601618",
        "type": "debug",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1010,
        "y": 780,
        "wires": []
    },
    {
        "id": "1f62e5f4.7d7b1a",
        "type": "debug",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1110,
        "y": 700,
        "wires": []
    },
    {
        "id": "b5bb6c0d.4c848",
        "type": "ui_template",
        "z": "6bb43483.7bfd3c",
        "group": "1bea607e.4c2d7",
        "name": "Video Show ",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<!--<iframe src=\"http://mqtt.lan:8080/xmvBOegbymu2hbfusEgEP7vgBQAoud/mjpeg/XbUegiTKp9/TfMwCwxJXA/0\" align=\"center\" width=\"320\" height=\"240\" scrolling=\"no\" frameborder=no marginheight=\"0px\"></iframe>\n-->\n\n\n<iframe src=\"http://mqtt.lan:8080/313d57ffb721daa2c887d88975e1a9c9/embed/XbUegiTKp9/yubBrmFO2C/fullscreen|jquery|relative|gui\" width=\"320\" height=\"240\" align=\"center\" scrolling=\"no\" frameborder=no marginheight=\"0px\"></iframe>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 170,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "2f7d848a.76a20c",
        "type": "function",
        "z": "6bb43483.7bfd3c",
        "name": "UI Control",
        "func": "let command = msg.payload \n\nif(command == \"cam1\"){\n    \n    let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t    show:[\"Videos_Controller\", \"Videos_Video1\"],\n\t\t\t\thide:[\"Videos_Video2\"]\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg\n    \n}\nelse if(command == \"cam2\"){\n    let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t    show:[\"Videos_Controller\", \"Videos_Video2\"],\n\t\t\t\thide:[\"Videos_Video1\"]\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg\n    \n}else{\n    let new_msg = {payload:{\n\t\t\tgroup:{\n\t\t\t     show:[\"Videos_Controller\", \"Videos_Video1\",\"Videos_Video2\"],\n\t\t\t\t hide: []\n\t\t\t\t\n                               }\n                        }\n               }\n\nreturn new_msg\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1200,
        "wires": [
            [
                "7254594f.e4f45"
            ]
        ]
    },
    {
        "id": "7254594f.e4f45",
        "type": "ui_ui_control",
        "z": "6bb43483.7bfd3c",
        "name": "",
        "x": 680,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "833b455.0370eb8",
        "type": "function",
        "z": "8a3bdb61.7c6bc8",
        "name": "Key advertise",
        "func": "let location = msg.dev_location\nlet type_ind = msg.type_in_key \n\nmsg.payload = `${location} : ${type_ind}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 940,
        "wires": [
            [
                "ff308812.1a5d2"
            ]
        ]
    },
    {
        "id": "ff308812.1a5d2",
        "type": "mqtt out",
        "z": "8a3bdb61.7c6bc8",
        "name": "",
        "topic": "devices/keypad/entry/status",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1110,
        "y": 940,
        "wires": []
    },
    {
        "id": "1e9115c6.8ffaaa",
        "type": "ui_text",
        "z": "4812a125.a423e8",
        "group": "e61e4492.2b2d18",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1010,
        "y": 2340,
        "wires": []
    },
    {
        "id": "277bab86.47a32c",
        "type": "mqtt in",
        "z": "4812a125.a423e8",
        "name": "",
        "topic": "devices/keypad/entry/status",
        "qos": "2",
        "broker": "b024fb92.d6bff8",
        "x": 390,
        "y": 2340,
        "wires": [
            [
                "1e9115c6.8ffaaa",
                "f4ad854d.74b628",
                "cb8e10aa.cec3d8"
            ]
        ]
    },
    {
        "id": "f4ad854d.74b628",
        "type": "delay",
        "z": "4812a125.a423e8",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 620,
        "y": 2400,
        "wires": [
            [
                "1a9b6988.698bf6"
            ]
        ]
    },
    {
        "id": "1a9b6988.698bf6",
        "type": "change",
        "z": "4812a125.a423e8",
        "name": "Clear the Message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2400,
        "wires": [
            [
                "1e9115c6.8ffaaa"
            ]
        ]
    },
    {
        "id": "cb8e10aa.cec3d8",
        "type": "debug",
        "z": "4812a125.a423e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 580,
        "y": 2280,
        "wires": []
    },
    {
        "id": "73df8d55.bf6754",
        "type": "debug",
        "z": "ba2ccab8.e0ab4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "fe5b7e26.376ce",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "MSG Disarm",
        "info": "Tap to Disarm",
        "x": 790,
        "y": 1920,
        "wires": []
    },
    {
        "id": "efefb6fc.135ef8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "first time",
        "info": "",
        "x": 760,
        "y": 2200,
        "wires": []
    },
    {
        "id": "8544ef.a0a41b1",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "not first time",
        "info": "",
        "x": 730,
        "y": 2280,
        "wires": []
    },
    {
        "id": "8f7f5fee.91b2d8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "in the middle",
        "info": "",
        "x": 950,
        "y": 2240,
        "wires": []
    },
    {
        "id": "1525416f.f03857",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "not in the middle",
        "info": "",
        "x": 933.333251953125,
        "y": 2356.6668701171875,
        "wires": []
    },
    {
        "id": "8bae23a0.4c54a",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "to stop",
        "info": "",
        "x": 1183.333251953125,
        "y": 2218.3333740234375,
        "wires": []
    },
    {
        "id": "adf126d1.789c2",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "to start",
        "info": "",
        "x": 1165,
        "y": 2310.0001220703125,
        "wires": []
    },
    {
        "id": "cb828c59.47a8e",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 170,
        "y": 1520,
        "wires": [
            [
                "2d80784d.e5f358"
            ]
        ]
    },
    {
        "id": "2d80784d.e5f358",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "true/false",
        "property": "arming",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 1520,
        "wires": [
            [
                "9673e7ab.e0213"
            ],
            [
                "2aef974.eaf95e8"
            ]
        ]
    },
    {
        "id": "9673e7ab.e0213",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Arming message",
        "func": "let last_login = flow.get(\"arming_start_time\")\n\nlet now = new Date();\nlet then = last_login;\nlet seconds = Math.floor((now - (then))/1000);\n\nlet time = 30 - seconds \n\nmsg.payload = `ARMING : ${time}`\n\nmsg.color = \"blue\"\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 1460,
        "wires": [
            [
                "a072de20.e1c638"
            ]
        ]
    },
    {
        "id": "2aef974.eaf95e8",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "true/false",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 580,
        "y": 1560,
        "wires": [
            [
                "5fb1258c.2e1664"
            ],
            [
                "6c14a691.73ac98"
            ]
        ]
    },
    {
        "id": "a072de20.e1c638",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "",
        "group": "d60901c.dde74",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "<font size=10>{{msg.payload}}",
        "color": "{{msg.color}}",
        "bgcolor": "white",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 1130,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "5fb1258c.2e1664",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "red to color and ARMED to text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ARMED",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1540,
        "wires": [
            [
                "a072de20.e1c638"
            ]
        ]
    },
    {
        "id": "6c14a691.73ac98",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "green to color and DISARMED to text",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DISARMED",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "green",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 1600,
        "wires": [
            [
                "a072de20.e1c638"
            ]
        ]
    },
    {
        "id": "4482d843.0f6cc8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "To show Status",
        "info": "",
        "x": 1120,
        "y": 1420,
        "wires": []
    },
    {
        "id": "20299c8b.347994",
        "type": "ui_text",
        "z": "898ca7f0.ecb26",
        "group": "d60901c.dde74",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "tap to ",
        "format": "",
        "layout": "row-right",
        "x": 630,
        "y": 1360,
        "wires": []
    },
    {
        "id": "7e40fb84.4cf3f4",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "text to show",
        "info": "",
        "x": 650,
        "y": 1320,
        "wires": []
    },
    {
        "id": "19ca3b53.d4559d",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "",
        "payload": "user_type",
        "payloadType": "flow",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 277.5,
        "y": 4020,
        "wires": [
            [
                "375410b5.4b5dc8"
            ]
        ]
    },
    {
        "id": "375410b5.4b5dc8",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 507.5,
        "y": 4020,
        "wires": []
    },
    {
        "id": "c99ae687.cd2a8",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "set guess",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 257.5,
        "y": 4120,
        "wires": [
            [
                "b853e8a3.d686e"
            ]
        ]
    },
    {
        "id": "b853e8a3.d686e",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "guess",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 527.5,
        "y": 4120,
        "wires": [
            []
        ]
    },
    {
        "id": "1c1837c3.46de58",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "set user",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 257.5,
        "y": 4160,
        "wires": [
            [
                "d518ff15.369e3"
            ]
        ]
    },
    {
        "id": "d518ff15.369e3",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user_type",
                "pt": "flow",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 527.5,
        "y": 4160,
        "wires": [
            []
        ]
    },
    {
        "id": "59a8a722.ea65f",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Testing",
        "info": "",
        "x": 267.5,
        "y": 3960,
        "wires": []
    },
    {
        "id": "16e2be5c.fb59f2",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 281.25,
        "y": 4243.75,
        "wires": [
            [
                "5bc028fa.79d368"
            ]
        ]
    },
    {
        "id": "5bc028fa.79d368",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Generate Rediable Output(object)",
        "func": "let armed = global.get(\"security_armed\")\nlet warning = global.get(\"security_warning\")\nlet alert = global.get(\"security_alert\")\n\nlet security_status = {}\nsecurity_status['armed'] = armed\nsecurity_status['warning'] = warning\nsecurity_status['alert'] = alert\nmsg.payload = security_status\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 641.25,
        "y": 4243.75,
        "wires": [
            [
                "35de0802.6c0d"
            ]
        ]
    },
    {
        "id": "35de0802.6c0d",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 911.25,
        "y": 4223.75,
        "wires": []
    },
    {
        "id": "6635070a.f11758",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 195,
        "y": 4403.75,
        "wires": [
            [
                "3083c12a.8ae1a6",
                "4891a138.ab0998"
            ]
        ]
    },
    {
        "id": "3083c12a.8ae1a6",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "arming",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 465,
        "y": 4363.75,
        "wires": [
            [
                "b6f55e5b.6cd0c8"
            ]
        ]
    },
    {
        "id": "4891a138.ab0998",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "arming_start_time",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 465,
        "y": 4403.75,
        "wires": [
            [
                "4b5d0ba0.d987d4"
            ]
        ]
    },
    {
        "id": "b6f55e5b.6cd0c8",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 725,
        "y": 4363.75,
        "wires": []
    },
    {
        "id": "4b5d0ba0.d987d4",
        "type": "debug",
        "z": "898ca7f0.ecb26",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 725,
        "y": 4403.75,
        "wires": []
    },
    {
        "id": "e9c591e5.57a4e",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 346.25,
        "y": 4583.75,
        "wires": [
            [
                "5162d7a5.9e59"
            ]
        ]
    },
    {
        "id": "5162d7a5.9e59",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "arming",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "arming_start_time",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 546.25,
        "y": 4583.75,
        "wires": [
            []
        ]
    },
    {
        "id": "5702e827.4bebe8",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 90,
        "y": 1980,
        "wires": [
            [
                "ba041dac.4ca168"
            ]
        ]
    },
    {
        "id": "ba041dac.4ca168",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "true/false",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 1980,
        "wires": [
            [
                "4f76aa7c.880ce4"
            ],
            [
                "e2040bf3.81c15"
            ]
        ]
    },
    {
        "id": "4f76aa7c.880ce4",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "TT DISARM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DISARM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1980,
        "wires": [
            [
                "4d162009.0bdbb"
            ]
        ]
    },
    {
        "id": "e2040bf3.81c15",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "is arming set?",
        "property": "arming",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 2100,
        "wires": [
            [
                "726daca2.6499a4"
            ]
        ]
    },
    {
        "id": "4d162009.0bdbb",
        "type": "ui_button",
        "z": "898ca7f0.ecb26",
        "name": "",
        "group": "d60901c.dde74",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "{{msg.payload}}",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "security_armed",
        "payloadType": "global",
        "topic": "",
        "x": 990,
        "y": 1980,
        "wires": [
            [
                "38e794e6.14ed7c"
            ]
        ]
    },
    {
        "id": "726daca2.6499a4",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "true/false",
        "property": "arming",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 600,
        "y": 2100,
        "wires": [
            [
                "4f76aa7c.880ce4"
            ],
            [
                "a0985de9.acda"
            ]
        ]
    },
    {
        "id": "38e794e6.14ed7c",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "armed/unarmed",
        "property": "security_armed",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1161.25,
        "y": 1976.25,
        "wires": [
            [
                "f3aa1e8a.901408",
                "5853a095.a40b38",
                "3013b6f3.3d1bca"
            ],
            [
                "ef82469b.ddd22"
            ]
        ]
    },
    {
        "id": "a0985de9.acda",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "TT ARM",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ARM",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 2100,
        "wires": [
            [
                "4d162009.0bdbb"
            ]
        ]
    },
    {
        "id": "f3aa1e8a.901408",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "set payload = off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 1900,
        "wires": [
            [
                "46feac60.70ae9c"
            ]
        ]
    },
    {
        "id": "5853a095.a40b38",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "set payload = off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 1960,
        "wires": [
            [
                "8a3ae1b7.826b"
            ]
        ]
    },
    {
        "id": "3013b6f3.3d1bca",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "set false to",
        "rules": [
            {
                "t": "set",
                "p": "security_armed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "security_warning",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "security_alert",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "ef82469b.ddd22",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "is arming set?",
        "property": "arming",
        "propertyType": "flow",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 2240,
        "wires": [
            [
                "e4f724e.bb9b2d8"
            ],
            [
                "6b8cffe3.5efad8"
            ]
        ]
    },
    {
        "id": "46feac60.70ae9c",
        "type": "mqtt out",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "devices/keypad/warning",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1830,
        "y": 1900,
        "wires": []
    },
    {
        "id": "8a3ae1b7.826b",
        "type": "mqtt out",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "devices/alarm_controller/set/siren",
        "qos": "",
        "retain": "",
        "broker": "b024fb92.d6bff8",
        "x": 1860,
        "y": 1960,
        "wires": []
    },
    {
        "id": "e4f724e.bb9b2d8",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "initialite arming",
        "rules": [
            {
                "t": "set",
                "p": "arming",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 961.25,
        "y": 2176.25,
        "wires": [
            [
                "3f328dd5.16864a"
            ]
        ]
    },
    {
        "id": "6b8cffe3.5efad8",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "arming?",
        "property": "arming",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 940,
        "y": 2300,
        "wires": [
            [
                "637abaa1.d2ebe4"
            ],
            [
                "6fa46dfc.2e13f4"
            ]
        ]
    },
    {
        "id": "3f328dd5.16864a",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "arming_start_time",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "637abaa1.d2ebe4",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "arming",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1181.25,
        "y": 2256.25,
        "wires": [
            [
                "d50b2ede.21c68"
            ]
        ]
    },
    {
        "id": "6fa46dfc.2e13f4",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "arming",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1161.25,
        "y": 2356.25,
        "wires": [
            [
                "6553c62f.fab88"
            ]
        ]
    },
    {
        "id": "d50b2ede.21c68",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "arming_start_time",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1471.25,
        "y": 2256.25,
        "wires": [
            [
                "1116e8e.d81f297"
            ]
        ]
    },
    {
        "id": "6553c62f.fab88",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "arming_start_time",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 2360,
        "wires": [
            []
        ]
    },
    {
        "id": "1116e8e.d81f297",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "security_armed",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "81fd5a8d.4c3198",
        "type": "inject",
        "z": "898ca7f0.ecb26",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 2680,
        "wires": [
            [
                "3765bbb3.d8ceec"
            ]
        ]
    },
    {
        "id": "3765bbb3.d8ceec",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "is arming set?",
        "property": "arming",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 2680,
        "wires": [
            [
                "fd6bef39.ef7e58"
            ]
        ]
    },
    {
        "id": "fd6bef39.ef7e58",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "flow.arming?",
        "property": "arming",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 2680,
        "wires": [
            [
                "ea413cda.766168"
            ]
        ]
    },
    {
        "id": "ea413cda.766168",
        "type": "function",
        "z": "898ca7f0.ecb26",
        "name": "Interval Check (30 seconds) --> yes/no",
        "func": "\nlet last_login = flow.get(\"arming_start_time\")\n\nlet now = new Date();\nlet then = last_login;\nlet seconds = Math.floor((now - (then))/1000);\n\nif(seconds >= 30){\n  msg.payload = \"yes\"\n}\nelse{\n    msg.payload = \"no\"\n}\n\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 2680,
        "wires": [
            [
                "8d844398.97b63"
            ]
        ]
    },
    {
        "id": "8d844398.97b63",
        "type": "switch",
        "z": "898ca7f0.ecb26",
        "name": "yes?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1210,
        "y": 2680,
        "wires": [
            [
                "502ea8d6.5058a"
            ]
        ]
    },
    {
        "id": "502ea8d6.5058a",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "security_armed = true",
        "rules": [
            {
                "t": "set",
                "p": "security_armed",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1401.6666870117188,
        "y": 2678.333251953125,
        "wires": [
            [
                "7592a315.44e054"
            ]
        ]
    },
    {
        "id": "7592a315.44e054",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "arming = false",
        "rules": [
            {
                "t": "set",
                "p": "arming",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 2680,
        "wires": [
            [
                "cdfa4166.30aa6"
            ]
        ]
    },
    {
        "id": "cdfa4166.30aa6",
        "type": "change",
        "z": "898ca7f0.ecb26",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "arming_start_time",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "cf634328.c4187",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "security_armed?",
        "info": "",
        "x": 580,
        "y": 1520,
        "wires": []
    },
    {
        "id": "304190cc.1d395",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "arming?",
        "info": "",
        "x": 360,
        "y": 1480,
        "wires": []
    },
    {
        "id": "ca2a7fec.21b96",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Set Color And Text",
        "info": "",
        "x": 870,
        "y": 1500,
        "wires": []
    },
    {
        "id": "a26d816a.8fc7e8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "security_armed?",
        "info": "",
        "x": 300,
        "y": 1920,
        "wires": []
    },
    {
        "id": "e0c20a06.c52478",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "arming?",
        "info": "",
        "x": 600,
        "y": 2060,
        "wires": []
    },
    {
        "id": "845212ef.d2f6c",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "MSG Arm",
        "info": "Tap to Arm",
        "x": 780,
        "y": 2060,
        "wires": []
    },
    {
        "id": "a89c7be7.66249",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "--> security_armed ",
        "info": "",
        "x": 1010,
        "y": 1920,
        "wires": []
    },
    {
        "id": "be2d6933.955c7",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Set false to security_alert",
        "info": "",
        "x": 1750,
        "y": 2000,
        "wires": []
    },
    {
        "id": "769b09d.5b0b0f8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Set false to security_warning",
        "info": "",
        "x": 1760,
        "y": 2040,
        "wires": []
    },
    {
        "id": "c3c9dea3.4b4bb8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Set false to security_armed",
        "info": "",
        "x": 1760,
        "y": 2080,
        "wires": []
    },
    {
        "id": "955cc50.1fd4cb8",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "Set false to security_armed",
        "info": "",
        "x": 1820,
        "y": 2200,
        "wires": []
    },
    {
        "id": "f2989782.884568",
        "type": "comment",
        "z": "898ca7f0.ecb26",
        "name": "in the middle of arming",
        "info": "",
        "x": 660,
        "y": 2640,
        "wires": []
    },
    {
        "id": "e131469c.551a5",
        "type": "debug",
        "z": "5e9e23fa.6f5764",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790,
        "y": 80,
        "wires": []
    },
    {
        "id": "2f8302d8.6696e6",
        "type": "debug",
        "z": "475d7139.ccd71",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 329.5,
        "y": 434,
        "wires": []
    },
    {
        "id": "dddfd6e8.b8062",
        "type": "debug",
        "z": "ba2ccab8.e0ab4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 664.5,
        "y": 244,
        "wires": []
    }
]
